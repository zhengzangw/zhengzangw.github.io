<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zangwei</title>
    <link>https://zhengzangw.com/</link>
    <description>Recent content on Zangwei</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>zhengzangw at gmail.com (Zangwei Zheng)</managingEditor>
    <webMaster>zhengzangw at gmail.com (Zangwei Zheng)</webMaster>
    <lastBuildDate>Wed, 07 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zhengzangw.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic</title>
      <link>https://zhengzangw.com/notes/topolopy/basic/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/topolopy/basic/</guid>
      <description>拓扑空间 拓扑空间：$X$ 为集合，$F$ 为 $X$ 中某些子集构成的集族（把 $F$ 中的元素称为 $X$ 中的开集），满足
 $\empty\in F,X\in F$ $U,V\in F, U\cap V\in F$ $U_\alpha\in F,\alpha\in I$, $\cup_{\alpha\in I}U_\alpha\in F$  则称 $F$ 为 $X$ 上的拓扑
设 $X$ 为拓扑空间；即 $X$ 为集合，且规定了 $X$ 上的拓扑 $F$；即指定了哪些子集为开集。
 平凡拓扑：$F={\empty, X}$ 离散拓扑：$F={U|U\subset X}$ 度量空间 $(X,d)$ 诱导的拓扑：$U\in F$ 若满足以下条件之一  $U=\empty$ $U\neq\emptyset,\forall p\in U,\exists\delta&amp;gt;0$, s.t. $p\in B(p,\delta)\subset U$    子空间拓扑：设 $X$ 为拓扑空间，$Y\subset X$，$F:={U\cap Y|U\subset_{\text{open}}X}$，则 $F$ 给出 $Y$ 上的一个拓扑</description>
    </item>
    
    <item>
      <title>1. Entropy</title>
      <link>https://zhengzangw.com/notes/information-theory/1-entropy/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/information-theory/1-entropy/</guid>
      <description>Preliminary  A mathematical theory of communicationo - Shannon 1948 Convexity: $f(\sum_ip_ix_i)\leq \sum_ip_if(x_i)$  $f(E_p x_i)\leq E_pf(x_i)$ convex: $f&#39;&#39;(x)\geq 0$   $f(x)=-x\log x$ is concave  Entropy Entropy: $H(X)=-\sum_{x\in\mathcal{X}}p(x)\log p(x)=E_{p}\log\frac{1}{p(X)}$
 $0\log 0\rightarrow 0$ $0\leq H(X)\leq \log|\mathcal{X}|$ uniform $X$: $H(X)=\log|\mathcal{X}|$ $H_b(X)=\log_baH_a(X)$  Joint Entropy: $H(X,Y)=-E\log p(X,Y)=-\sum_{x\in\mathcal{X}}\sum_{y\in\mathcal{Y}}p(x,y)\log p(x,y)$
 $H(X,X) = H(X)$ $H(X,Y) = H(Y,X)$  Conditional Entropy: $H(Y|X)=\sum_{x\in\mathcal{X}}p(x)H(Y|X=x)=-\sum_{x\in\mathcal{X}}\sum_{y\in\mathcal{Y}}p(x,y)\log p(y|x)=-E\log p(y|x)$
 $H(Y|X)\leq H(X)$ remaining uncertainty when $X$ is known $H(X|Y)\neq H(Y|X)$ $H(X|Y)+H(Y)=H(Y|X)+H(X)=H(X,Y)$ Chain rule: $H(X_1,X_2,\cdots,X_n)=H(X_1)+H(X_2|X_1)+\cdots+H(X_n|X_{n-1},\cdots,X_1)$ Zero conditional entropy: if $H(Y|X)=0,Y=f(X)$  Relative Entropy (Kullback-Leibler distance): $D(p|q)=\sum_{x\in X}p(x)\log\frac{p(x)}{q(x)}=E_p\log\frac{p(X)}{q(X)}=E_p(-\log q(x))-H(p)$</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://zhengzangw.com/about/about/</link>
      <pubDate>Mon, 07 Dec 2020 02:47:43 +0800</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/about/about/</guid>
      <description>I am a Ph.D. student at NUS, advised by Asst. Prof. Yang You. I received my B.Sc. in Computer Science from Nanjing University in 2021. I spent a year in iCyPy at UC Berkeley from Apr. 2020, supervised by Prof. Alberto L. Sangiovanni-Vincentelli and Dr. Xiangyu Yue.</description>
    </item>
    
    <item>
      <title>集合与测度</title>
      <link>https://zhengzangw.com/notes/real-function-theory/%E9%9B%86%E5%90%88%E4%B8%8E%E6%B5%8B%E5%BA%A6/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/real-function-theory/%E9%9B%86%E5%90%88%E4%B8%8E%E6%B5%8B%E5%BA%A6/</guid>
      <description>实数  实数：完备的有序域  完备性（度量空间）  闭区间套定理 柯西收敛定理   连续性（完备性+阿基米德性质）  戴德金公理 确界存在定理 单调有界定理 有限覆盖定理 聚点定理 致密性定理 介值定理     实数有小数表示  空间  空间：集合 $X$ 拓扑空间  $\mu$ 是全部开集，若  全集，$\emptyset\in\mu$ 任意个集合并 $\in\mu$ 有限个集合交 $\in\mu$   $\mu$ 给定了一个拓扑   度量空间  $d:X\times X\rightarrow \mathbb{R}$  非负性、对称性、三角不等式   欧式空间：$(\mathbb{R}^n,d)$ 子空间：$Y\subseteq X,(X,d)$ 为度量空间 完备空间：任何柯西列都收敛   范数空间：定义范数  可以用范数定义距离 巴拿赫空间：赋范空间+完备性   线性空间：线性结构  赋范线性空间   内积空间：定义内积  希尔伯特空间：内积空间+完备性    集合  $\bigcup_{\lambda\in \Lambda}={x:\exists \lambda\in\Lambda,x\in A_\lambda}$ $\bigcap_{\lambda\in \Lambda}={x:\forall \lambda\in\Lambda,x\in A_\lambda}$ 数列的上下极限  $\overline{\lim_{n\rightarrow\infty}} a_n=\lim_{n\rightarrow\infty}\sup_{k\geq n}{a_k}=\inf_{n\geq 1}\sup_{k\geq n}{a_k}$ （最大的聚点） $\underline{\lim_{n\rightarrow\infty}}a_n=\lim_{n\rightarrow\infty}\inf_{k\geq n}{a_k}=\sup_{n\geq 1}\inf_{k\geq n}{a_k}$ （最小的聚点）   集合列的上下极限  $\overline{\lim_{n\rightarrow\infty}} A_n=\bigcap_{n\geq 1}\bigcup_{k\geq n}A_k$ $\underline{\lim_{n\rightarrow\infty}} A_n=\bigcup_{n\geq 1}\bigcap_{k\geq n}A_k$ 若 $\overline{\lim_{n\rightarrow\infty}} A_n=\underline{\lim_{n\rightarrow\infty}} A_n$ 则 $\lim_{n\rightarrow\infty}A_n$ 存在 递增集列：$\lim_{n\rightarrow\infty}A_n=\bigcup_{n=1}^{\infty}A_n$ 递减集列：$\lim_{n\rightarrow\infty}A_n=\bigcap_{n=1}^{\infty}A_n$   双等（对等、等势）：存在从 $A$ 到 $B$ 的一一映射  对等是等价关系 有限集：$A$ 与 ${1,2,\cdots,n}$ 对等 无限集：非有限集  存在一个真子集与自己对等     基数（势）：$|A|$  $|A|=|B|\iff A\sim B$ $|A|&amp;lt;|B|\iff A\sim C,C\subsetneq B$   伯恩斯坦定理：$|A|\leq|B|,|B|\leq|A|\Rightarrow|A|=|B|$ 可数集合：与 $\mathbb{Z}_+$ 对等，基数为 $ℵ_0$  任何无限集合至少包含一个可数子集 可数子集的任何无限子集是可数集   至多可数集：至多可数集 + 有限集  至多可数个至多可数集的并是至多可数集  $\mathbb{Q}$ 是可数集   有限个至多可数集的直积是至多可数集  代数数全体是有限可数集     康托尔定理：幂集阶数大于原集合 $\mathbb{R}\sim 2^{\mathbb{N}}$  $\mathbb{R}$ 不可数，连续基数 $\mathcal{C}$ $\mathcal{C}$ 个连续基数集合并为连续基数 至多可数个连续基数集合直积为连续基数 $\mathbb{R}^n=\mathcal{C}$    点  $\delta$-邻域：$U(P_0,\delta)={P:d(P,P_0)&amp;lt;\delta}$ 以附近是否都是 $E$ 中的点划分  内点：$\exists U(P_0,\delta),U(P_0,\delta)\subseteq E$ 外点：$\exists U(P_0,\delta),U(P_0,\delta)\subseteq E^c$ 边界点：$\exists U(P_0,\delta),U(P_0,\delta)\cap E\neq \emptyset,U(P_0,\delta)\cap E^c\neq \emptyset$   开核 $\dot{E}$：内点集合 边界 $\partial{E}$：边界点集合 以附近是否总有 $E$ 中的点划分  聚点：$\forall \epsilon,\exists P\neq P_0,P\in E,P\in U(P_0,\epsilon)$ 孤立点： 非聚点   导集 $E&#39;$：$E$ 全体聚点的集合 闭包 $\overline{E}=E\cup E&#39;$ 定理  $(\dot{E})^c=\overline{E^c}$ $(\overline{E})^c=(\dot{E^c})$ $(A\cup B)&#39;=A&#39;\cup B&#39;$ $E\neq \emptyset,E\neq \mathbb{R}^n$ 则 $\partial E\neq\emptyset$ Bolzano-Weierstrass 定理：$E\subset \mathbb{R}^n$ 有界无限集合，则 $E$ 至少有一个聚点    开集  开集：$\forall x\in E,x$ 内点 ($E=\dot{E}$)  $\dot{E}=\bigcup_{G\subset E\text{ 开集}}G$ 任意开集的并是开集 有限个开集的交是开集  $G_n=(-1-\frac{1}{n},1+\frac{1}{n}),\bigcup_{n=1}^\infty G_n=[-1,1]$     闭集：$\forall$ 聚点 $\in E$ ($E=\overline{E}$)  $\overline{E}=\bigcap_{F\subset E\text{ 闭集}}F$ 任意闭集的交是闭集 有限闭集的交是闭集   对偶性：$E$ 开（闭）则 $E^c$ 闭（开） 紧集：若 $M\subset \mathbb{R}^n$ 的任一开覆盖总有有限子覆盖，则 $M$ 是紧集  Heine-Borel: $\mathbb{R}^n$ 有界闭区间的任一开区间覆盖总有有限子覆盖 $\mathbb{R}^n$ 的有界闭集是紧集 $M\subset \mathbb{R}^n$ 是紧集，则 $M$ 是有界闭集   自密集：$E\subset E&#39;$（没有孤立点） 完备集：$E=E&#39;$（无孤立点闭集） $\mathbb{R}^1$ 中集合构造  直线上互不相交的区间的集合是至多可数集 构成区间：$G$ 是开集，$(\alpha,\beta)\subset G,\alpha,\beta\not\in G$ 开集构造定理：直线上任意一个非空集合可以表成至多可数个互不相交的构成区间的并 余区间（邻接区间）：闭集 $A$ 的余集的构成区间   Cantor 三分集 $P$  $P$ 完备 $P$ 无内点 $P$ 连续基数 $P$ 测度为 $0$    外测度  勒贝格测度公理  非负性: $P(A)\geq 0$ 可列可加性 正则性: $P(\empty)=0,P(\Omega)=1$   外测度：$m^*(E)=\inf {\sum_{i=1}^\infty |I_i|:\bigcup_{i=1}^\infty I_i\supset E}, I_i$ 为开区间  $m^*(\emptyset)=0$ $m^*({P})=0$ $m^*({P_1,\dots,P_n,\cdots})=0$   基本性质  非负性：$m^*(E)\geq 0$ 次可数可加性：$m^(\bigcup_{i=1}^\infty A_i)\leq \sum_{i=1}^\infty m^(A_i)$ 单调性：$A\subset B,m^(A)\leq m^(B)$ 正则性：$m^*([0,1])=1$   任意区间 $I$，$m^*(I)=|I|$ 平移不变性：$m^(E)=m^(\tau_a E)$ 反射不变性  可测  (Caratheodory) $L$-可测的：$\forall T\subset \mathbb{R}^n,m^(T)=m^(T\cap E)+m^*(T\cap E^c)$  此时 $m$ 的测度： $m(E)=m^*(E)$ $\iff\forall I\subset \mathbb{R}^n,m^(I)=m^\star(I\cap E)+m^(I\cap E^c)$, $I$ 为开区间 $\iff\forall A\subset E,B\subset E^c,m^(A)+m^(B)=m^*(A\cup B)$   可测集的运算  $S^c$ 可测 $S_1,S_2$ 可测，$S_1\cup S_2$ 可测 $S_1-S_2$ 可测 有限个可测集之并（交）可测 至多可数个可测集之并（交）可测 ${S_i}{i=1}^\infty$ 递增可测集，则 $\lim{i\rightarrow\infty}S_i$ 可测，$m(\lim_{i\rightarrow S_i})=\lim_{i\rightarrow \infty}m(S_i)$ ${S_i}{i=1}^\infty$ 递减可测集，则 $\lim{i\rightarrow\infty}S_i$ 可测，当 $m(S_1)&amp;lt;\infty$ 时，$m(\lim_{i\rightarrow S_i})=\lim_{i\rightarrow \infty}m(S_i)$    $\sigma$ 代数  $\Omega$ 上的 $\sigma$ 代数（$\Omega$ 是 $X$ 某些子集组成的集合类）  $X\subset \Omega$ 可数并下封闭 取余集下封闭   $\Sigma$ 生成的 $\sigma$ 代数：包含 $\Sigma$ 的 $\sigma$ 代数之交 Borel $\sigma$ 代数：$\mathbb{R}^n$ 上所有开集生成的 $\sigma$ 代数  开集 闭集 $F_\sigma$ 型集合：闭集可数并 $G_\delta$ 型集合：开集可数交   可测集类 $\mu$ 是 $\mathbb{R}^n$ 上的 $\sigma$ 代数  区间可测 Borel 集可测 零测集可测  零测集子集可测 至多可数个零测集之并可测     非 Borel 集可测集 若 $E$ 可测，则 $m(E)=\inf{m(G):E\subset G,G\text{ 开集}}=\sup{m(F):E\supset F,F\text{ 紧集}}$ （外正规性+内正规性）  $\forall \epsilon&amp;gt;0,\exists G$ 开集，$E\subset G,m(G-E)&amp;lt;\epsilon$ $\forall \epsilon&amp;gt;0,\exists F$ 闭集，$E\supset G,m(E-F)&amp;lt;\epsilon$   若 $E$ 有界，且 $m(E)=\inf{m(G):E\subset G,G\text{ 开集}}=\sup{m(F):E\supset F,F\text{ 紧集}}$，则 $E$ 可测 $E$ 是可测集，则  存在 $G_\delta$ 型集 $G$ 使 $G\supset E,m(G-E)=0$ 存在 $F_\sigma$ 型集 $F$ 使 $F\subset E,m(E-F)=0$    不可测集  Vitali 集  等价关系：$x\sim y\iff x-y\in\mathbb{Q}$ 每个等价类取一个代表元，构成一个不可测集   任意一个测度大于 $0$ 的集合中有不可测子集 满足正则性，可数可加性和全等不变性的测度存在不可测集  </description>
    </item>
    
    <item>
      <title>1-算法复杂度分析与正确性证明</title>
      <link>https://zhengzangw.com/notes/problem-solving/1-algorithm-analysis/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/1-algorithm-analysis/</guid>
      <description>正确性证明  Loop invariants  Initialization Maintenance Termination    时间复杂度  cost: 硬件执行一条指令的代价 times: 指令被执行的次数 running time 计算方法: $T(n)=\sum c_i n_i$ worst-case running time average-case running time （按输入求期望） expected running time （任意输入，按程序随机数求期望）  rate(order) of growth  $\Theta(g(n)) = {f(n):\exists c_1,c_2,n_0,\forall n\geq n_0,0\leq c_1g(n)\leq f(n)\leq c_2g(n)}$ $O(g(n)) = {f(n):\exists c,n_0,\forall n\geq n_0, f(n)\leq cg(n)}$ $\Omega(g(n)) = {f(n):\exists c,n_0,\forall n\geq n_0, 0\leq cg(n)\leq f(n)}$ $o(g(n)) = {f(n):\exists c,n_0,\forall n\geq n_0, 0\leq f(n)&amp;lt; cg(n)}$ $\omega(g(n)) = {f(n):\exists c,n_0,\forall n\geq n_0, 0&amp;lt;cg(n)\leq f(n)}$ $\lg(n!</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://zhengzangw.com/notes/static-program-analysis/1-introduction/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/static-program-analysis/1-introduction/</guid>
      <description>Introduction  Programming Language  Theory: Language Design, Type system, Semantics and logics Environment: Compilers, Runtime system Application: Program analysis, Program verification, Program synthesis   Static Analysis: analyzes program $P$ to reason about its behaviors and determines whether it stisfies some properties before running $P$ Rice&amp;rsquo;s Theorem: Any non-trivial property of behavior of programs in a r.e. langugage is undecidabel  r.e. = recursively enumerable = recognizable by a Turing-machine non-trivial properties $\approx$ interesting properties $\approx$ the properties related with run-time behaviors of programs No Perfect static analysis: Round and Complete   Useful static analysis  Compromise soundness 漏报 Compromise completeness 勿报：Mostly sound but not fully-precise   sound + precise/imprecise + expensive/cheap Abstraction + Over-approximation  Intermediate Representation  soot: java 3AC IR invoke  invokespecial: super, constructor invodevirtual: instance methods call (virtual dispatch) invokeinterface: cannot optimization, checking interface implementation invokestatic: call static methods invokedynamic (Java 7): for dynamic language   method signature  class name return type type method name (parameter types)   BB finding algorithm  Determine leaders  the first instruction target instruction of a conditional or unconditional jump instruction immediately follows a conditional or unconditional jump   BB consists of a leader and all its subsequent instructions until the next leader   Control Flow Graph (CFG)  Basic Blocks(BB): maximal sequences of consecutive three-address instructions with the properties that  enter only at the first instruction in the block exit only at the last instruction in the block   edge from block A to block B iff  there is jump from the end of A to the start of B B immediately follows A in the original order of instructions (except the last instruction is unconditional jump) it is normal to replace the jumps to instruction labels by jumps to basic blocks   Entry Exit    </description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://zhengzangw.com/notes/literature-management-and-information-analysis/2-research/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/literature-management-and-information-analysis/2-research/</guid>
      <description>十大信息源  图书：内容在49页以上，有书名、作者、定价、编号和版权保护  电子系统 索书号  中国图书馆分类法   目录大厅   期刊 会议论文 学位论文 标准 专利 科技报告 政府出版物 产品资料  全球产品样本数据库   科技档案  信息传播链  面对面交流 新闻、博客、指南、网站 会议论文、专利 期刊、科技报告 学位论文、科技档案、数据库 图书、产品资料 标准、政府出版物  </description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://zhengzangw.com/notes/literature-management-and-information-analysis/1-search/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/literature-management-and-information-analysis/1-search/</guid>
      <description>Introduciton  提升学习能力  学习策略：专注，即时反馈   提升科研能力 提升创新能力：省时省钱爽 两个根基  信息  搜索信息、管理信息 人是信息的集合体 眼所见，心所想   时间   两类知识  知道存在，但是不知道怎么做 不知道存在    搜索引擎  高级搜索  高级搜索页面 Google 语言/排序：Tools 逻辑与 + 或空格（频率极高的词用空格会忽略） 逻辑非 - 逻辑或 OR Google 不支持通配符 ?*%，对大小写不敏感   命令搜索  site: 特定网站 site:www.zhangzangw.com filetype: 文件类型 intitle: 标题搜索 inurl: url地址中搜索 link: 关联到某个网站 related: 相关网站   图片搜索  图片筛选 以图搜图   搜索思路  搜索意识、逆向思维和换位思考 Where has &amp;amp; Who Knows How &amp;amp; Where is most efficient   未来趋势  场景化搜索 无屏搜索    RSS  订阅科技文献  WOS, scopus, pubmed Science, nature, ACS, cell 科学新闻订阅（产学研信息综合把握）    </description>
    </item>
    
    <item>
      <title>1-软件工程引论</title>
      <link>https://zhengzangw.com/notes/software-enginerring/1-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%BC%95%E8%AE%BA/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/1-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%BC%95%E8%AE%BA/</guid>
      <description>软件问题历史  1996年6月4日因软件失效在发射40秒后爆炸，原因是惯性参考系统软件的数据转换异常造成的失效。 2004年12月20日，美空军第422测试评估大队的一架F-22战斗机因软件问题在起飞过程中失控坠毁。 2003年8月14日，美国北部电力丢失，原因是多计算机系统试图同时访问同一资源引起的软件失效 2004年9月14日，5 p.m. 美国400架飞机失去联络，原因是空管软件时钟缺陷 2005年11月1日，东京证券交易所因为软件升级出现系统故障，导致早间股市“停摆” 2002年NIST估计软件问题造成美国年经济损失约600亿美元，占GDP的0.6% 2007年5月17日和18日，诺顿杀毒软件导致全部安装了该软件的计算机系统瘫痪  软件危机  表现：成本高，软件质量得不到保证，进度难以控制，维护非常困难 根本原因  逻辑产品 复杂性高 规模大 缺乏有效、系统的原理、原则、方法和工具的指导与辅助   软件工程：为克服软件危机而提出的一种概念  核心内容：按工程化的原则和方法组织软件开发工作 主要任务：通过提供规范化的分析设计方法及工具软件，来避免或减少软件错误的发生，为最终根除软件危机提供强有利的技术保障   软件产品没有“质保”，没有“三包” 复杂系统的五个共同属性（Grady Booch）  Hierarchic Structure Relative Primitives Separation of Concerns Common Patterns Stable Intermediate Forms    软件工程内容 软件需求 ,软件设计 ,软件建模 ,软件体系结构 ,设计模式 ,软件构造 ,软件测试 ,软件维护 ,软件配置管理 ,软件工程管理 ,软件过程 ,软件工程工具与方法 ,软件质量
软件工程目标 可修改性，有效性，可靠性，可理解性，可维护性，可重用性，可适应性，可移植性，可追踪性，可互相操作性
软件工程原则  抽象，信息隐藏，模块化，局部化，一致性，完整性，可验证性 Davis 提出的软件工程原则  质量放在首位 高质量的软件是可能的 尽早向客户提供产品 在编写需求之前确定问题 评估可选设计方案 使用适当的过程模型 在不同阶段使用不同的语言 最小化智力差距 将技术置于工具之前 在使之更快之前，请确保其正确性 检查代码 好的管理比好的技术更重要 人是成功的关键 勿盲目跟风 承担责任   Walker Royce的现代软件管理十大原则  基于架构优先的方法建立过程。 建立一个迭代过程，以通过此过程尽早解决风险。 强调基于组件的开发，以减少编码工作量。 应该建立变更管理来处理迭代过程。 增强迭代开发过程环境（称为双向工程），以通过自动化工具在多个制品上频繁地进行多次变更。 使用基于模型和计算机可处理的符号来进行设计。 建立质量控制和项目进度评估的客观过程，包括评估所有中间制品。 为能够更早地评估中间制品，使用基于演示的方法，将其转换为用户场景的可执行演示。 计划增量式发布多个版本，每个版本由一组使用场景组成，并在细节上逐步演化。 建立一个可配置的过程，因为没有一个过程适合所有的软件开发。    中间件  在操作系统层之上的计算抽象层，提升编程抽象层次 屏蔽了底层异构环境 三大中间件平台：CORBA, J2EE, .</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://zhengzangw.com/notes/compiler/1-indtrodution/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/1-indtrodution/</guid>
      <description>编译器  分析部分（前端）+ 综合部分（后端）  趟（Pass）：每趟读入一个输入文件，产生一个输出文件   字符流 -&amp;gt; (词法分析器) -&amp;gt; 符号流  词法分析/扫描 (Lexical analysis/scanning)：读入字符流，输出词素（Lexeme）&amp;lt;token-name, attribute-value&amp;gt;   符号流 -&amp;gt; (语法分析) -&amp;gt; 语法树  语法分析/解析 (Syntax analysis/parsing)：根据此番单元的第一个分量建立树型中间表示（Syntax tree）   语法树 -&amp;gt; (语义分析) -&amp;gt; 语法树  语义分析：检查源程序是否满足语言定义的语义约束；同时收集类型信息 符号表管理：记录源程序中使用的变量的名字，手机各种属性   语法树 -&amp;gt; (中间代码生成器) -&amp;gt; 中间表示形式  中间代码生成：生成类机器语言的中间表示；三地址代码（每个指令最多包括三个变量）   中间表示形式 -&amp;gt; (机器无关代码优化器) -&amp;gt; 中间表示形式  中间代码优化：通过中间代码分析，优化   中间表示形式 -&amp;gt; (代码生成器) -&amp;gt; 目标机器语言  代码生成：将中间表示形式映射到目标语言   目标机器语言 -&amp;gt; (机器相关代码优化器) -&amp;gt; 目标机器语言  程序设计语言发展历程  历程  第一代：机器语言 第二代：汇编语言（宏命令） 第三代：Fortran, Cobol, Lisp, C, C++ 第四代：特定应用语言：NOMAD, SQL, Postscript 第五代：基于逻辑和约束的语义 Prolog OPS5   强制式语言：指明如何完成 声明式语言：指明要完成哪些计算 静态：支持编译器静态决定问题 动态：只允许程序运行时做出决定 环境：从名字到存储位置的映射 状态：从存储位置到它们值的映射  文法  短语结构文法（grammer）$G=(N,T,P,\sigma)$（非终结符，终结符，产生式，开始符号） 0 型文法：$\alpha\rightarrow\beta,\alpha\in(N\cup T)^$ 且至少有一个终结符，$\beta\in(N\cup T)^$  短语文法 递归可枚举集 图灵机   1 型文法：$\alpha\rightarrow\beta,|\beta|\geq|\alpha|$  上下文有关文法 线性有界自动机   2 型文法：$\alpha\rightarrow\beta,\alpha\notin(T)^*$  上下文无关文法 BNF 范式   3 型文法：$A\rightarrow \alpha |\alpha B$（右线性或左线性）  正规文法 有限状态自动机 正则表达式    </description>
    </item>
    
    <item>
      <title>1. 计算机图形学概述</title>
      <link>https://zhengzangw.com/notes/computer-graphics/1-introduction/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-graphics/1-introduction/</guid>
      <description>发展简况  计算机图形技术范式演化      显示方式 对象和命令指定方式 显示控制方式 应用控制方式     字符显示 文字+数字的伪图形 命令行 文本格式编码 单任务   矢量显示 笔画文字和线画图形 命令行，功能键和菜单 伪直接操纵方式 单/多任务   二维光栅扫描显示 窗口，图标，文字和丰富色彩 GUI, WIMP 桌面隐喻，WYSIWYG 多任务，网络号 C/S 计算，多窗口管理   图形工作站及多视角投影(3DTV) 实时三维景象，实物虚化 虚拟显示，增强显示 WYSIAYG, WYPIWYG 集群化，网格化     计算机使用模式：无图形系统&amp;ndash;非直接操纵&amp;ndash;桌面隐喻&amp;ndash;自然多通道 人机界面  第一代：形式语言/类自然语言 第二代：桌面隐喻，直接操纵，WYSIWYG 当代：多媒体+多通道  虚拟现实   未来：自然人机交互   硬件技术  1960 字符显示器 1963 矢量显示器 1972 CRT显示器 1986 三维图形工作站 3D 输入技术，专用图形处理芯片，分式系统和并行系统 2000 数字墨水显示器   交互式图形系统 1963 年 SketchPad 诞生 交互式图形显示技术 1950~ 防空系统 SAGE 计算机图形系统标准  GKS(Graphical Kernal System) PHIGS(Programmer&amp;rsquo;s Hierarchical Interactive Graphics System) 工业系统  OpenGL DirectX X-Window Postscript      主要内容  建模  传统内容：几何对象及其图像的生成，存储和操纵 技术拓展：结合音视频的图形合成，声音和视频驱动的图形生成 基础问题：如何在计算机内建立客观世界的对象模型 难点：尽可能保持客观世界对象本身的性质并反映用户对它的理解  交互生成 感知获取     绘制  传统内容：在屏幕和硬拷贝设备上输出图像 技术拓展：图像处理，改善图形显示和输出质量 基础问题：如何在输出设备上再现客观世界的对象 难点：巨量信息处理的实时性及对客观世界模拟的逼真度  图形硬件的能力和性能 图形绘制处理和操纵算法     交互  传统内容：用户对对象和图像的内容结构及外在表现的控制 技术拓展：触觉输入和输入，显示化图形输入和操纵方式    软件体系  计算机图形系统处理流程  图形建模（建模坐标系） 模型变换（世界坐标系） 观察变换/视角选择（观察坐标系） 投影变换（投影坐标系） 工作站变换/设备选择（设备坐标系） 图形显示   计算机图形系统软件组成   数据平台：对象描述模型，表示生成图形对象的全部描述信息（可以有数据完全刻画，也可以有数据和过程共同刻画）</description>
    </item>
    
    <item>
      <title>1. Data Warehouse</title>
      <link>https://zhengzangw.com/notes/data-mining/1-data-warehouse/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-mining/1-data-warehouse/</guid>
      <description>Big Data  GB: $2^{30}$ B TB, PB, EB, ZB data newly generated globally  2006: 180 EB 2001: 1.8 ZB 2020: 35 ZB   Data Mining Examples:  supermarket transactions valuable customers network instrusion gene data medical data web financial data software data usage data data from sensors data of arts audio generation   Data mining: non-trivial process of identifying valid, novel, potentially useful, and ultimately understandable patterns from huge volume of data KDD: Knowledge Discovery in Data  狭义：Data mining is a core step of KDD 广义：KDD = DM   data mining tasks: descriptive or predictive  characterization discrimination association clustering classification regression outlier analysis trend and evolution analysis    数据仓库概念  Property  Subject-Oriented Integrated Time-variant Nonvolatile   Data Cube: lattice of cuboids (not a paradigm of actual physical storage) Multidimensional Data Model  fact table: contains the facts as well as keys to each of the related dimension tables schema  star schema: 事实表+维表 snowflake schema fact constalleation schema     concept hierarchy  schema hierarchy: Total or partial order set-grouping hierarchy    OLAP OnLine Analysis Process</description>
    </item>
    
    <item>
      <title>Basics</title>
      <link>https://zhengzangw.com/notes/digital-circuit/basics/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-circuit/basics/</guid>
      <description>数制与数码  补码  正数：原码=反码=补码 负数：反码不变符号位，其它取反；补码先反码，再在最低位加一   数码  8421(BCD) 2421 Excess-3 Biquinary 1-out-of-10 Gray code    逻辑电路  逻辑门：非，与，或，与非，或非 逻辑代数 逻辑函数  最大项表达式 Product of Sums：所有自变量的或项 最小项表达式 Sum of Products：所有自变量的与项 卡诺图(Karnaugh map)  最小化 Product of Sums/Sum of products      </description>
    </item>
    
    <item>
      <title>微电子基础</title>
      <link>https://zhengzangw.com/notes/microelectronics/basic/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/microelectronics/basic/</guid>
      <description>计算机发展历史  电子管时代：  1940s-1950s ENIAC(1946,ABC公司)，电子数字积分计算器。   晶体管时代：  1950s-1960s 晶体管：一种用以代替真空管的电子信号放大元件。 1947年贝尔实验室制造成功了第一个半导体晶体管 1949年贝尔实验室做出了第一个锗PNP型晶体管。 1956年bardeen,Shockley,Brattain获得诺贝尔物理学奖。 TRADIC(1954):世界上第一台全晶体管计算机。   集成电路时代：  1960s- 1958年，Jack Kilby发明了第一块锗集成电路振荡器。（2000诺贝尔物理学奖） 1970年，Intel推出第一个商用 动态随机存储器(DRAM)1103,容量1 Kbits,标志着大规模集成电路(LSI)出现。 1978年，64kbDRAM出现标志这进入了超大规模集成电路时代。    摩尔定律  定义：IC集成度每一年提高一倍，即技术每两年提升一代，1975年修正：进入80年代后，技术每3年提升一代。 技术基础：不断缩小的晶体管尺寸。  集成电路规模  SSI: &amp;lt;102 MSI: 102~103 LSI: 103~105 VLSI: 105~107 ULSI: 107~109 GLSI: &amp;gt;109  微电子学定义 研究在固体（主要是半导体材料）上构成的微小化电路及系统的电子学分支，主要是研究电子或离子在固体材料中的运动规律及其应用，并利用它实现电磁信号和信息处理功能的电子科学。它以实现电路和系统的集成为目的。微电子学中实现的电路和系统又称为集成电路和集成系统，是微小化的；在微电子学中的空间尺寸通常是以微米（μm，1μm=10 − 6m）和纳米（nm，1nm=10 − 9 m）为单位的。
微电子技术是随着集成电路尤其是超大规模集成电路发展起来的技术。主要包括了电路系统设计，器件物理，工艺技术，材料制备，测试和封装的专门的技术，是微电子学中各项工艺技术的总和。
集成电路  通过一系列加工工艺，将晶体管按照一定的电路互连在一块半导体单晶片上并封装在外壳中来执行特定的电路或系统功能的电路 最基本的单位：晶体管  按器件构造模型分类  双极集成电路：由双极晶体管构成，如PNP型、NPN型，优点是速度快，驱动力强，缺点是集成度不高，功耗大 金属-氧化物-半导体(MOS)集成电路：如NMOS,PMOS,CMOS，优点是集成高，功耗小，随着特征尺寸缩小，速度也快 双极-MOS集成电路：综合上面，有上面的优点，但制作工艺复杂  按制作工艺分类  单片集成电路：电路中所有的元器件都集成在同一块半导体基片上的集成电路。 混合集成电路： 薄膜集成电路，厚膜集成电路  应用领域  数字集成电路：处理数字信号的集成电路，即采用二进制方式进行数字计算和逻辑函数运算的集成电路 模拟集成电路：处理模拟信号的集成电路(连续变化的信号)，分线性集成(运算放大器)和非线性集成(振荡器) 数模混合集成电路：如数模转化器  微电子学器件  定义：可以构成集成电路的最小单元 最具代表性器件：场效应晶体管 微电子学核心研究内容之一就是怎么实现更小尺寸的晶体管 特征尺寸缩小带来的优势  集成电路速度更快。 芯片上集成器件数增大。 集成电路功能提高 晶体管成本降低    集成电路产业  IC 设计 (Design House)  ARM, 高通，NVIDIA，联发科，华为海思   硅片制造，IC制造 (Foundry)  台积电，格罗方德，联华电子，三星，中芯国际   封装，测试  日月光，安靠，长电科技    集成电路芯片制作过程  硅锭 切成硅片 硅片 晶圆制造 晶圆 硅片测试 芯片 切割 成品  </description>
    </item>
    
    <item>
      <title>Stochastic Processes</title>
      <link>https://zhengzangw.com/notes/stochastic-process/preliminaries/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/stochastic-process/preliminaries/</guid>
      <description>Probability Definition of Probability Three Axioms
  $0\leq P(E)\leq 1$
  $P(S)=1$
  For any sequence of eventes $E_1,E_2,\cdots,$ that are mutually exclusive
$$P(\bigcup_{i=1}^\infty E_i)=\sum_{i=1}^{\infty}P(E_i))$$
  Sequence of Events   increasing sequence of events: ${E_n,n\geq 1},E_n\subset E_{n+1}$
$$\lim_{n\rightarrow\infty}E_n=\bigcup_{i=1}^\infty E_i$$
  decreasing sequence of events: ${E_n,n\geq 1},E_n\supset E_{n+1}$
$$\lim_{n\rightarrow\infty}E_n=\bigcap_{i=1}^\infty E_i$$
  for an increasing or decreasing sequences of events
$$\lim_{n\rightarrow\infty}P(E_n)=P(\lim_{n\rightarrow\infty}E_n)$$
  Borel-Cantelli Lemma</description>
    </item>
    
    <item>
      <title>1-极限与连续</title>
      <link>https://zhengzangw.com/notes/calculus/section1/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/calculus/section1/</guid>
      <description>基本概念  上界（下界）：$\exists M\in\mathbb{R},\forall x\in E,x\leq M$  $\sup E(\inf E)$: 上界中最小值 无上界：$\sup E=+\infty$   $\max(\min)$：$x_0\in E,\forall x\in E,x_0\geq x$ $x$ 的 $\delta$-邻域：$U(x;\delta)=(x-\delta,x+\delta)$ $x$ 的 $\delta$-去心邻域：$\check{U}(x;\delta)\backslash{x}$ 聚点：$E\subseteq\mathbb{R},x\in\mathbb{R},\forall\delta&amp;gt;0,\check{U}(x;\delta)\cap E\not=\emptyset$ 孤立点：$E\subseteq\mathbb{R},x_0\in E,x_0$ 非 $E$ 的聚点  $E$ 中点为聚点或孤立点   内点：$E\subseteq\mathbb{R},x_0\in\mathbb{R},\exists\delta&amp;gt;0,U(x_0;\delta)\subseteq E$ 开集：$E\subseteq\mathbb{R}$, $E$ 的点皆为 $E$ 的内点 凸性：$\forall x\in I,\forall y\in I$, 连接$x$与$y$的线段含于 $I$ 闭集：$\mathbb{R}\backslash E$ 为开集  有上界的非空闭子集有最大值   紧集：有界闭集（紧性）  $f$ 为连续函数，$\mathfrak{D}_f$ 为有界闭集，$\mathfrak{R}_f$ 为有界闭集   映射：$f:X\rightarrow Y$  定义域：$\mathfrak{D}_f=X$ 上域：$Y$ 值域（象）：$\mathfrak{R}=f(X)$ 复合 $g\circ f$ 限制 $f|_{X_1}$ 延拓   函数 $f:E\rightarrow \mathbb{R}$  图：$\mathcal{G}_f={(x,f(x))|x\in E}$ 基本初等函数  常函数 指数函数 对数函数 三角函数 反三角函数   初等函数：由基本初等函数出发，有限次四则运算和复合得到  $x^a=e^{a\ln x}$     极值：$x_0\in\mathfrak{D},\exists\delta&amp;gt;0,\forall x\in U(x_0;\delta)\cap\mathfrak{D},f(x)\leq f(x_0)(f(x)\geq f(x_0)$ 临界点：$x_0$ 为内点且 $f&#39;(x_0)=0$ 单调性 凸函数:$\forall x_1\in I,\forall x_2\in I,\forall\lambda\in[0,1]$ 有 $f(\lambda x_1+(1-\lambda)x_2)\leq\lambda f(x_1)+(1-\lambda)f(x_2)$  $f&#39;$ 增   Euler 公式：$e^{x+i\theta}=e^x(\cos\theta+i\sin\theta)$ $\lim_{n\rightarrow+\infty}(1+\frac{1}{n})^n=\lim_{x\rightarrow 0}(1+x)^{\frac{1}{x}}e$ Stirling 公式：$n!</description>
    </item>
    
    <item>
      <title>1-概论</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/1-introduction/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/1-introduction/</guid>
      <description>科学与技术关系的探讨  周光绍  科学：正确反映客观世界现象、物质内部结构和运动规律的系统理论知识 技术：在科学指导下，总结实践经验，各方面的系统知识   白春礼  科学：发现、探索研究事物运动的客观规律 技术：[做什么、怎么做   人工智能  强人工智能：人工智能使探索人脑与意识的科学 弱人工智能：模拟人脑相应功能且得到应用，偏向于技术    何为人工智能  像人一样行动  图灵测试  自然语言处理 知识表示 自动推理 机器学习   完全图灵测试  计算机视觉 机器人学     像人一样思考  领会人脑用途  内省：捕捉思维过程 心理实验 脑成像   认知科学   合理地思考 合理地行动  学科交叉  哲学  图灵测试(1950)  西尔勒中文屋子(1980)：能否从表现来评判智能 人为陷阱：能否真的了解人类的智能水平 缸中之脑(1981) 反向图灵测试(CAPTCHA,2002)   智能的哲学发展  笛卡尔(1596-1650)：可通过可编程机械实现智能 莱布尼茨(1646-1716)：不存在预先设置的机器智能  磨坊论证：知觉的存在是对智能的存在不可或缺的吗？   霍布斯(1588-1679，符号流派哲学先驱)：机械化的心灵观，仅仅限制在理性（推理） 休谟(1711-1776，联结流派哲学先驱)：心智模型是“自底而上”构建的，最底层是感觉，其次是抽象和记忆，再上是想象 康德(1724-1804)：心智模型是知觉的“从上(知性)至下(高阶 知觉)” 和“自下(感性)而上(低阶知觉)”,两者不可或缺 霍布斯·德瑞福斯(1929-)：真实的思维是不可以被程序穷尽，依赖计算力的“智能”不是人类智能 罗德尼·布洛克斯（行为流派先驱）：世界是最大的认知模型，更重要的是如何由嵌入式的方式认知外部世界，而并不需要创造中间符号 乔姆斯基  大脑是“认知”的 大部分智力活动是“先天”的 模式是大脑认知的关键结构       数学 经济学  囚徒困境 投票悖论 冷扑大师：博弈均衡策略求解算法   神经科学 心理学 计算机工程 控制论 自动化 语言学  Spaif-Whorf 假说：语言决定人们对世界的理解   大数据  4V:Volume,Velocity,Variety,Veracity  多源异构数据 海量分布数据 流数据 交互型数据 图数据   4I:Inexact,Incremental,Integrated,Inductive 大数据的表示模型：数据表示如何充分体现大数据的内在规律 大数据的计算模型：超越样本多项式时间复杂度的大数据计算模型  在线学习 近似学习   大数据的决策模型：面向多个行为实体的大数据复杂决策技术（数据分析到博弈推理）    历史发展  孕育期(1943-1955) 达特茅斯会议(1956)  克劳德·香农 约翰·麦卡锡  搜索与剪枝   马文·明斯基  知识表示和推理   奥利弗·赛弗里奇 赫伯特·西蒙 &amp;amp; 阿兰·纽维尔   推理期(1952-1969)  第一次低潮  早期程序对其主题一无所知 求解问题的难解性；组合爆炸 流派之争 Perceptrons  符号学派（逻辑） 连接学派（仿生） 行为学派（控制）       知识期(1970-1980 末)  第二次高潮（符号学派成功） 专家系统 第二次低潮（五代机计划失败）   学习期  第三次高潮（机器学习的成功）   深度期 新一代人工智能五个方向  大数据智能 群体智能 跨媒体智能 混合增强智能 自主无人系统    智能 Agent  理性  依赖于：性能度量，先验知识，可能的行动，感知序列 对环境的先验知识  可以完成的行动：执行器 截止此时的感知序列：信息收集，传感器   期望性能最大化 完美：实际性能最大化   任务环境 = (Performance Measurement,Environment,Actuators,Sensors) PEAS 任务环境的性质  Observable: 传感器是否能在每个时间点上获得完整信息 Multi Agents: 存在其它 Agents Deterministic: 下一状态是否完全决定于当前转态与行为 Episodic Static or Dynamic  Dynamic: Agent 计算时环境会变化 Semi: 环境不变，但性能评价变化   离散/连续 环境已知/未知   Agent 函数：将感知信息映射到行动 Agent 程序：实现 Agent 函数 Agent = 体系结构（执行器，传感器，计算装置） + Agent 程序 Agent 程序  Table Driven Agent Simple Reflex Agent  RULE-MATCH 仅使用当前状态   Model Based Reflex Agent  拥有内部状态（模型） 使用当前状态与内部状态   Agent with Goal  不使用 RULE-MATCH 确定当前状态与内部状态及动作后果，与目标比较后选择执行   Agent with Utility   学习 Agent 表达能力  原子表示：单点 要素化表示：集合 结构化表示：逻辑等    解决问题  CV  人脸识别 姿态识别   NLP  自然语言生成 语音识别 虚拟助理   IR  推荐系统 搜索引擎   交叉  机器人 决策管理 自动驾驶 生物：基因组 医疗：辅助决策、医学信息分析 金融：量化交易、安全、服务 网络安全 教育    </description>
    </item>
    
    <item>
      <title>Math Foundation</title>
      <link>https://zhengzangw.com/notes/quantum-computation/math-foundation/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/math-foundation/</guid>
      <description>&lt;h2 id=&#34;linear-algebra&#34;&gt;Linear Algebra&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vector: $|\psi\rangle$&lt;/li&gt;
&lt;li&gt;Row vector: $\langle\psi|=(\overline{|\psi\rangle})^T$&lt;/li&gt;
&lt;li&gt;Inner product: $\langle\psi|\varphi\rangle=\sum_i\overline{u}_iv_i$
&lt;ul&gt;
&lt;li&gt;$\langle\varphi|A|\psi\rangle$: Inner product between $|\varphi\rangle$ and $A|\psi\rangle$&lt;/li&gt;
&lt;li&gt;$\lVert\psi\rVert=\sqrt{\langle\psi|\psi\rangle}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tensor product: $A=(a_{ij}),B=(b_{ij}),A\otimes B=(c_{(i_1,i_2),(j_1,j_2)})$
&lt;ul&gt;
&lt;li&gt;$H^{\otimes n}=H\otimes H\otimes \cdots \otimes H$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$|\psi\rangle|\varphi\rangle=|\psi\rangle\otimes|\varphi\rangle=|\psi\varphi\rangle=|\psi,\varphi\rangle$
&lt;ul&gt;
&lt;li&gt;$|0^n\rangle=|00\cdots0\rangle$&lt;/li&gt;
&lt;li&gt;$(A\otimes B)(C \otimes D)=(AC)\otimes(BD)$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$M^\dagger=\overline{M}^T$&lt;/li&gt;
&lt;li&gt;Unitary matrix $U$: $U^\dagger U=I$&lt;/li&gt;
&lt;li&gt;Hermitian matrix: $H=U^\dagger DU$, $U$ is unitary and $D$ is a real diagonal matrix(eigenvalues of $H$)&lt;/li&gt;
&lt;li&gt;Positive semidefinite: $H$ is Hermitina and its eigenvalues are nonnegative&lt;/li&gt;
&lt;li&gt;orthonormal basis ${|v_1\rangle,\cdots,|v_d\rangle}$
&lt;ul&gt;
&lt;li&gt;Completeness relation: $\sum_i|v_i\rangle\langle v_i|=I$&lt;/li&gt;
&lt;li&gt;Computational basis in $\mathbb{C}^d$: $|i\rangle=(0,\cdots,1,0,\cdots,0)^T$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;noraml operator: $MM^\dagger=M^\dagger M$
&lt;ul&gt;
&lt;li&gt;Spectral/Eigenvalue decomposition: $M=\sum_{i=1}^d\lambda_i|v_i\rangle\langle v_i|=U\Lambda U^*$
&lt;ul&gt;
&lt;li&gt;$M$ is Hermitian iff $\lambda_i$ are reals&lt;/li&gt;
&lt;li&gt;$M$ is a projector if $M$ is Hermitian and $M^2=M$/$\lambda_i\in{0,1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$f:\mathbb{C}^d\rightarrow\mathbb{C},f(M)=\sum_{i=1}^df(\lambda_i)|v_i\rangle\langle v_i|$&lt;/li&gt;
&lt;li&gt;$Tr(A)=\sum_i A_{ii}=\sum_i \langle i|A|i\rangle$
&lt;ul&gt;
&lt;li&gt;$Tr(AB)=Tr(BA)$&lt;/li&gt;
&lt;li&gt;$Tr(M)=\sum_{i}\lambda_i$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>1. Basic Enumeration</title>
      <link>https://zhengzangw.com/notes/combinatorics/1-basic-enumeration/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/1-basic-enumeration/</guid>
      <description>Product Rule: finite set $|S\times T|=|S||T|$ Sum Rule: finite disjoint set $|S\cup T|=|S|+|T|$ Bijection Rule: finite set $\exists\phi:S\rightarrow T$ onto and 1-1 then $|S|=|T|$  1-1: $\leq$ onto: $\geq$   $[m] = {0,1,2,\cdots,m-1}$ $2^{[m]}={S|S\subseteq [n]}$: Power set ${n\choose k}=|{[n]\choose k}|$  ${S\choose k}={T\subseteq S||T|=k}$   ${n\choose m_1,\cdots,m_k}=\frac{n!}{m_1!\cdots m_k!}$  number of assignments such that $i$-th bin has $m_i$ balls in it number of permutations of a multiset $M$ with $|M|=n$ such that $M$ has $k$ distinct elements whose multiplicities are given by $m_1,m_2,\cdots,m_k$   $(m)_n= {m\choose m-n}$: $m$ lower factorial $n$ Binominal theorem: $(1+x)^n=\sum_{k=0}^n{n\choose k}x^k$ Multinominal theorem: $(x_1+\cdots+x_k)^n=\sum_{m_1+\cdots+m_k=n}{n\choose m_1,\cdots,m_k}x_1^{m_1}\cdots x_k^{m_k}$ $k$-composition of $n$: ${n-1\choose k-1}$  ordered sum of positive integers   week $k$-composition of $n$: ${n+k-1\choose k-1}$  number of nonnegative solutions to $x_1+x_2+\cdots+x_k\leq n$: ${n+k \choose k}$   $k$-multisets on $S$: $({n\choose k})={n+k-1\choose n-1}={n+k-1\choose k}$ ${n\brace k}$: $k$-partitions of an $n$-set, Stirling number of the second kind  ${n\brace k}=k{n-1\brace k}+{n-1 \brace k-1}$ $\left{{n \atop m}\right}={\frac {1}{m!</description>
    </item>
    
    <item>
      <title>1. Basics</title>
      <link>https://zhengzangw.com/notes/conputer-network/1-basics/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/1-basics/</guid>
      <description>因特网  根据硬件和软件组件描述  communication link: 通信链路 packet switch: 分组交换机 packet: 分组，数据分段并加上头部 ISP: Internet Service Provider  PoP(Point of Presence) 多宿(multi-home) 对等(peer): IXP(Internet Exchange Point)       根据基础设施向分布式应用程序提供的服务描述  分布式应用程序 套接字接口   协议：定义了在两个或多个通信实体之间交换的报文的格式和顺序，以及报文发送和/或接受一条报文或其他时间所采取的动作  网络边缘  host/end system: 主机/端系统  客户端：client 服务器：server  数据中心: data center      接入网  家庭接入  DSL(Digital Subscriber Line, 数字用户线)：本地电话公司(CO)为 ISP  DSLAM 高速下行 50kHz - 1MHz 中速上行 4kHz - 50kHz 普通的双向电话信道 0 - 4kHz   电缆(cable Internet access)：利用有线电视公司现有的有线电视基础设施  CMTS(Cable Modem Termination System) HFS   FTTH(Fiber To The Home)  AON(Active Optical Network) PON(Passive Optical Network)   卫星链路 拨号接入   企业接入  以太网 WiFi   广域无线接入  蜂窝网络    网络核心 分组交换  储存转发传输：交换机能够输出第一个比特前，必须接受整个分组 节点时延  节点处理时延 排队时延  流量强度：$\frac{La}{R}$ 丢包   传输时延 传播时延   端到端时延 = $N$ (处理时延+ 传输时延 + 传播时延 ) 吞吐量：$\frac{F}{T}$ bps，瓶颈链路的传输速率 最大聚合带宽：设备所有接口的速率之和  集线器 (hub) 工作在物理层，多接口中继器</description>
    </item>
    
    <item>
      <title>Basics</title>
      <link>https://zhengzangw.com/notes/digital-image-process/0-basics/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/0-basics/</guid>
      <description>数字图像  数字图像：$f(x,y),f$ 为灰度或强度，皆离散 电磁波谱：伽马射线，X 射线，紫外线，可见光，红外线，微波，无线电波  单色光（无色光）  强度：灰度级   彩色光：430nm(紫)~790nm(红)  发光强度：能量总量 W 光通量：观察者从光源感受到的能量 lm(流明数) 亮度：光感知的主观描绘     图像增强：由人的主观感受评判  对比度拉伸 增强   图像复原：以预先制定的目标改善图像  去模糊 利用退化现象的先验知识恢复图像   图像分割：吧图像细分为它的区域或物体  采样 用有限的样本数目去近似无限的现实物理信号（有限近似无限）
 空间分辨度 像素数：每单位距离点数  1 inch = 2.54 cm dpi: 每英寸点数    量化 用离散计算机表示去近似连续的现实物理信号（离散近似连续）
 灰度分辨率  $Q=2^b$: $b$ bit 量化，$Q$ 级灰度   伪轮廓 最佳量化：量化误差最小（均方误差）  $$\delta^2=\sum_{k=1}^K\int_{Z_k}^{Z_{k+1}}(Z-q_k)^2p(Z)dZ$$
前沿学术期刊  TPAMI《IEEE Transactions on Pattern Analysis and Machine Intelligence》 TIP《IEEE Transactions on Image Processing》 CVIU《Computer Vision and Image Understanding 》 TSMCB《IEEE Transactions on Systems, Man and Cybernetics》  前沿学术会议  CVPR (IEEE Conference on Computer Vision and Pattern Recognition) ICCV (International Conference on Computer Vision) ECCV (European Conference on Computer Vision)  </description>
    </item>
    
    <item>
      <title>1-概述</title>
      <link>https://zhengzangw.com/notes/database/1-%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/1-%E6%A6%82%E8%BF%B0/</guid>
      <description>基本概念    Term      数据库(DB) 长期存储在计算机内、有组织的、大量的、共享的数据集合   数据库管理系统(DBMS) 位于用户与操作系统（OS）之间的一层数据管理软件，为用户或应用程序提供访问数据库的方法和接口   数据库管理员(DBA)    数据库系统(DBS) DB+DBMS+DBA+软件平台+硬件平台   数据库技术 研究数据库的结构、存储、设计、管理和使用的一门软件学科   data &amp;amp; infomation 数据是信息的载体，信息则是数据的内涵   数据库应用系统(DBAS) DBS+应用软件+UI+用户 利用数据库系统作应用开发所构成的集成化的独立运行系统       DBMS 功能      数据组织 数据模式定义，数据存储的物理构作   数据操纵 查询、插入、修改和删除   数据维护 完整性、安全性定义与检查   数据控制与保护 并发控制与故障恢复   数据服务 内置函数   数据字典      数据库用户  End users  Casual users(终端查询用户) Naive users(应用程序的使用者)   Application programmers DBA   sub languange  SQL 语言  DDL(Data Definition Language)：数据的模式定义域数据的物理存取构作 DML(Data Manipulation Language): 查删增改等 DCL(Data Control Language): 完整性、安全性定义与检查   使用方式  交互式命令语言 宿主型语言     Architecture of Database System  Two-tier Architechture (两层 C/S)  DB 和 DBMS 运行在数据库服务器中，DBAS 运行在客户机中   三层 C/S  DBAS 运行在应用服务器中(Web 服务器)      DBS 特点  集成性 integration  集多种应用数据于一体，采用统一的数据结构 全局统一的数据模式   高共享性  供多个应用程序使用 在DBS基础上开发新应用程序   低冗余性 独立性  物理独立性：数据的物理结构（包括存储结构、存取方式等）的改变，不影响数据库的逻辑结构，从而不致引起应用程序的变化 逻辑独立性：数据库总体逻辑结构的改变，如修改数据模式、增加新的数据类型、改变数据间联系等，不需要相应修改应用程序   数据的统一管理与控制  完整性检查 安全性保护 并发控制 故障恢复    发展历史 发展历史图</description>
    </item>
    
    <item>
      <title>1-Perceptron</title>
      <link>https://zhengzangw.com/notes/deep-learning/1-perceptron/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/1-perceptron/</guid>
      <description>Perceptron 1957
 模型：$\hat y=\text{sgn}(\omega^\top x)$ 参数学习：错误驱动在线学习算法  $\omega\leftarrow 0$ 对于 $y\omega^\top x&amp;lt;0,\omega\leftarrow \omega+yx$ $L(\omega;x,y)=\max(0,-y\omega^\top x)$   感知机收敛性：$\mathcal{D}={(\mathbf{x}^{(n)},y^{(n)})}_{n=1}^N,R=\max_n|x^{(n)}|$，若 $\mathcal{D}$ 可分，则两类感知机权重更新不超过 $\frac{R^2}{\gamma^2}$  神经元  神经元  净输入：$z=\omega^\top x+b$ 活性值：$a=f(z)$ 激活函数：$f$    激活函数  Sigmoid 型函数：两端饱和函数  Logistic: $\sigma(x)=\frac{1}{1+\exp(-x)}$ Tanh: $\tanh(x)=2\sigma(2x)-1=\frac{\exp(x)-\exp(-x)}{\exp(x)+\exp(-x)}$ 计算开销较大   hard-logistic$(x)=\max(\min(0.25x+0.5,1),0)$ hard-Tanh$(x)=\max(\min(x,1),-1)$ ReLU$(x)=\max(0,x)$  计算高效 生物学合理性：单侧抑制、宽兴奋边界 非零中心化：偏置偏移 死亡 ReLU 问题   LeakyReLU$(x)=\max(x,\gamma x)$ 带参数 ReLU，对于第 $i$ 个神经元：PReLU$_i(x)=\max(0,x)+\gamma_i\min(0,x)$ Exponential Linear Unit: ELU$(x)=\max(0,x)+\min(0,\gamma(\exp(x)-1))$  近似零中心化   Softplus$(x)=\log(1+\exp(x))$ Swish$(x)=x\sigma(\beta x)$ GELU$(x)=xP(X\leq x),P(X\leq x)$ 为高斯累积分布函数 Maxout$(x)=\max_{k\in[1,K]}(z_k),z_k=\omega_k^\top x+b_k$  输入为向量    </description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://zhengzangw.com/notes/machine-learning/1-introduction/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/1-introduction/</guid>
      <description>机器学习  机器学习要素  模型 学习准则 优化算法   数据集：$D={x_1,x_2,\cdots,x_m}$  通常假设全体样本服从一个未知分布 $\mathcal{D}$，且采样 i.i.d   归纳偏好  No Free Lunch Theorem Occam&amp;rsquo;s Razor Ugly Duckling Theorem   all vectors are assumed to be column vectors $N$ number of input, $p$ number of features 训练集 $\bf{X}_{N\times p}$  $i$-th row $x_i^T$: length $p$ $j$-th column $\bf{x}_j$: length $N$ input vector: $X_{p\times 1}$ $X^T=(X_1,X_2,\cdots,X_p)$, $X_i$ is a scalar   $\bf{y}_{N\times 1}$  $Y\in\mathbb{R}$ $\bf{Y}_{N\times l}$, each row has one 1   $(X_1,X_2 )$ : 行并列 $(X_1^T;X_2^T)$ : 列并列 偏差-方差分解：$E(f;D)=\text{bias}^2(x)+\text{var}(x)+\epsilon^2=(\overline{f}(x)-y)^2+E_D((f(x;D)-\overline{f}(x))^2)+E_D((y_D-y)^2)$  评估方法  留出法 cross validation  将数据集分层采样划分为 $k$ 个大小相似的互斥子集，每次用 $k-1$ 个子集的并集作为训练集，余下的子集作为测试集，最终返回 $k$ 个测试结果的均值 $k$ 最常用的取值是 10.</description>
    </item>
    
    <item>
      <title>Propositional Logic (PL)</title>
      <link>https://zhengzangw.com/notes/mathematic-logic/propositional-logic/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/mathematic-logic/propositional-logic/</guid>
      <description>语言  字母表：命题符+联结词+辅助符  命题符(propositional symbol)：$\text{PS}={P_n|n\in\mathbb{N}}$   命题集 $\text{PROP}$ (proposition)：为函数 $C_\neg,C_*$ 下 $\text{PS}$ 的归纳闭包  $C_\neg(A)=(\neg A),C_(A,B)=(AB),*\in{\vee,\wedge,\rightarrow}$   free variable：$\text{FV}(A)={P\in \text{PS}|P 出现在 A 中}$  定理  括号引理：$A$ 为命题，则 $A$ 中左右括号个数相等 构造序列：$A\in \text{PROP}\iff \exists A_0,\cdots,A_n,n\in\mathbb{N},A=A_n$ 且对于任意的 $A_i,i\leq n$ 至少满足下列三条之一  $A_i\in PS$ $\exists k&amp;lt;i,A_i=A_k$ $\exists k,l&amp;lt;i, A_i=(A_k*A_l)$   结构归纳：对 $A$ 的构造长度作归纳，是自然数上的归纳  数学归纳法：  Basis I.H. Ind. Step      语义  真值集 $B={T,F}$  $\neg:H_\neg:B\rightarrow B$ $:H_:B^2\rightarrow B$   赋值：函数 $v:\text{PS}\rightarrow B$ 命题的解释：函数 $\hat v:\text{PROP}\rightarrow B$  $\hat v(P_n)=v(P_n),n\in \mathbb{N}$ $\hat v(\neg A)=H_\neg(\hat v(A))$ $\hat v(A*B)=H_\neg(\hat v(A),\hat v(B))$   满足：$\vDash$  $v \vDash A\iff\hat v(A)=T$ $v\vDash P\iff v(P)=T$ $v\not\vDash \phi \iff v\vDash \neg \phi$ $v\vDash \phi_1 \wedge/\vee \phi_2\iff v\vDash \phi_1 \text{ and/or }\phi_2$ $v\vDash \phi_1 \rightarrow \phi_2\iff v\not\vDash\phi_1\text{ or }v\vDash\phi_2$ tautology: $\vDash A\iff\forall v:v\vDash A$ $A$ 可满足：$\exists v,v\vDash A$ 语义结论：$\Gamma\subset \text{PROP},\Gamma\vDash A\iff\forall v$ 有 $\forall B\in\Gamma,\hat v(B)=T$ 则 $\hat v(A)=T$    定理  $v\upharpoonright \text{FV}(A)$：$v$ 的限制  $v_1\upharpoonright \text{FV}(A)=v_2\upharpoonright \text{FV}(A)$ 则$\hat v_1(A)=\hat v_2(A)$   $n$ 元真值函数：$A\in \text{PROP}, \text{FV}(A)={Q_1,\cdots,Q_n},H_A:B^n\rightarrow B,\forall (a_1,\cdots,a_n)\in B^n, H_A(a_1,\cdots,a_n)=\hat v(A),v$满足$v(Q_i)=a_i(1\leq i\leq n)$.</description>
    </item>
    
    <item>
      <title>1-随机事件</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/1-%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/1-%E9%9A%8F%E6%9C%BA%E4%BA%8B%E4%BB%B6/</guid>
      <description>随机事件  随机试验 $E$ 样本空间 $\Omega={E\text{ 的所有可能结果}}$ 样本点 $e$（基本事件）：$E$的每个结果 随机事件：$A,B,C$ 为 $\Omega$ 的子集  $B\subset A$：$A$ 发生必然导致 $A$ 发生 必然事件：$\Omega$ 不可能事件：$\emptyset$   $A\cup B/A+B$： $A,B$ 至少发生一个 $A\cap B/AB$： $A,B$ 同时发生 $A - B$：$A$ 发生， $B$ 不发生 $\overline{A}$： 对立事件 De Morgan: $\overline{\bigcup A_i}=\bigcap \overline{A_i},\overline{\bigcap A_i}=\bigcup \overline{A_i}$  概率定义与性质  概率定义：  $0\leq P(A)$ $P(\Omega)=1$ （可列可加性）若 $A_1,\cdots$ 两两互不相容，则 $P(A_1\cup\cdots)=P(A_1)\cup\cdots$   概率性质  $P(A-B)=P(A)-P(AB)=P(A\overline{B})$  $A=(A-B)\cup AB$   $P(A\cup B)=P(A)+P(B)-P(AB)$   乘法公式：$P(AB)=P(B)P(A|B)$  条件概率：$P(A|B)=\frac{P(AB)}{P(B)}$   全概率公式：对于划分 $A_1,\cdots,A_n, P(B)=\sum_{k=1}^nP(A_k)P(B|A_k)$ 贝叶斯公式：对于划分 $A_1,\cdots,A_n$, $P(A_i|B)=\frac{P(A_i)P(B|A_i)}{\sum_{k=1}^nP(A_k)P(B|A_k)}$ 互不相容：$P(A\cup B)=P(A)+P(B)$  对立事件：$P(A)+P(B)=1$   独立性：$P(AB)=P(A)P(B)$  $P(\bigcup_iA_i)=1-\prod_i P(\overline{A_i})$   Union Bound: $P(\bigcup A_i)\leq\sum P(A_i)$ $k$-wise independent: $P(A_1\cdots A_k)=P(A_1)\cdots P(A_k)$  pairwise independent: $P(AB)=P(A)P(B)$   mutually independent: $\forall k,k$-wise independent  $X_1,\cdots,X_m$ is mutually independent, then $n=2^m-1$ pairwise indenpent bits can be generated: $Y_j=(\sum_{i\in S_j}X_i)\mod 2$ ($S_j\subseteq \mathbb{Z}_m$)    概型  可靠性分析（独立工作系统）  可靠性：正常工作的概率 串联方式：$P(B)=P(A_1\cdots A_n)$ 并联方式：$P(B)=1-\prod_i P(\overline{A_i})$   古典概型  $P(A)=\frac{m}{n}$   几何概型 独立重复试验概型：$n$ 重伯努利试验  两个结果 $A$ 与 $\overline{A}$ 试验进行 $n$ 次，每次结果   $n$ 重伯努利试验中， $A$ 发生 $k$ 次的概率 $P_n(k)=C_n^kp^kq^{n-k}$ 泊松定理：$\lim_{n\rightarrow\infty}C_n^kp_n^k(1-p_n)^{n-k}=\frac{\lambda^k}{k!</description>
    </item>
    
    <item>
      <title>民歌</title>
      <link>https://zhengzangw.com/notes/music-review/%E5%9B%BD%E5%86%85%E6%B0%91%E6%AD%8C/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/music-review/%E5%9B%BD%E5%86%85%E6%B0%91%E6%AD%8C/</guid>
      <description>第一课  新民歌/原生态民歌 民歌的基本特征  口头性 集体性 流传变异性 短小精悍 鲜明的风格色彩   独唱，对唱（重唱）  同声合唱 混声合唱   分类  体裁  号子：体力劳动过程中编唱，并直接为之服务的民歌  搬运、工程、农事、船渔、作坊号子   山歌：山野劳动中  一般山歌，放牧山歌，田秧山歌   小调   地域  北方 南方      例子  广东民歌《落雨大》 江西民歌《十送红军》 船运号子 云南山歌《弥渡山歌》  第二课  华北、东北色彩区 西北色彩区  山歌  信天游 花儿  男-少儿 女-花儿 大令/小令   山曲、爬山调  起伏大       号子  东北林号子 黄河硪号，夯号 黄河船夫号   时调  在民间休闲娱乐为助兴唱的民歌  反花调 对花      第三课  汉族南方的民歌 号子  农事号子  连枷号子 春米号子   船夫号子 采石号子   山歌  江浙山歌 客家山歌 西南山歌 云南山歌  《小河淌水》 《放马山歌》   川南山歌   小调  北方少数民族  蒙古族  长调民歌 短调民歌  叙事性、抒情性     朝鲜族 180多万  道拉基   达斡尔族，鄂伦春族，赫哲族 维吾尔族  阿拉木汉 马车夫之恋   哈萨克族  第四课  藏族民歌  谐：歌舞  果谐，堆谐，康谐，囊玛，莱谐   鲁：歌曲  卓鲁（牧歌），（山歌）     苗族民歌  山歌（飞歌，央恰） 生活风俗歌曲   白族民歌  白族调 汉调   纳西族民歌 佤族 傣族  </description>
    </item>
    
    <item>
      <title>综述</title>
      <link>https://zhengzangw.com/notes/data-communication/0-%E7%BB%BC%E8%BF%B0/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/0-%E7%BB%BC%E8%BF%B0/</guid>
      <description>通信系统  source $\rightarrow$ transmitter 源系统)$\rightarrow$ transmission system $\rightarrow$(目的系统 reciver $\rightarrow$ destination  单工 (simplex)：电视 半双工 (half duplex)：对讲机 双工 (full duplex)：电话   数字通信系统：数字基带传输  （模拟/数字）信息源$\rightarrow$信源编码$\rightarrow$加密$\rightarrow$信道编码$\rightarrow$数字调制$\rightarrow$信道$\rightarrow$数字解调$\rightarrow$信道译码$\rightarrow$解密$\rightarrow$信源译码$\rightarrow$受信者   模拟通信系统：利用模拟信号来传输信息的通信系统  模拟信息源（模拟消息）$\rightarrow$ 原始电信号（基带信号）$\rightarrow$调制器（已调信号）$\rightarrow$信道$\rightarrow$解调器（基带信号）$\rightarrow$受信者（模拟信号）   混成系统  网络体系结构  TCP/IP 5层模型      内容     应用层 支持各种不同应用程序的逻辑   传输层 提供端到端的传输服务   网际互联层 提供多个网络的路由选择，能够让数据跨越多个互联网络   数据链路层 为与同一个网络相连的两个系统提供网络接入   物理层 负责数据传输设备与传输媒体的物理接口   媒介 传输媒介     套接字：端口值+IP地址+(协议)  流套接字：TCP 数据报套接字：UCP 原始套接字(raw socket)：IP    </description>
    </item>
    
    <item>
      <title>Responsive Web Design</title>
      <link>https://zhengzangw.com/notes/web-develop/responsive-web-design/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/web-develop/responsive-web-design/</guid>
      <description>&lt;h1 id=&#34;basic-html-and-html5&#34;&gt;Basic HTML and HTML5&lt;/h1&gt;
&lt;p&gt;HTML5 tags: header, footer, nav, video, article, section, main&lt;/p&gt;
&lt;h2 id=&#34;text&#34;&gt;Text&lt;/h2&gt;
&lt;p&gt;h1-h6,p,s,u,em,strong,a,time&lt;/p&gt;
&lt;h2 id=&#34;list&#34;&gt;List&lt;/h2&gt;
&lt;p&gt;ul,ol,li&lt;br&gt;
table: &lt;code&gt;&amp;lt;table&amp;gt;&amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;figure&#34;&gt;Figure&lt;/h2&gt;
&lt;p&gt;figure,figcaption,img&lt;br&gt;
i&lt;/p&gt;
&lt;h2 id=&#34;form&#34;&gt;Form&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;form: &lt;code&gt;&amp;lt;form action=&amp;quot;&amp;quot;&amp;gt; &amp;lt;/form&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;text field: &lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot; placeholder=&amp;quot;&amp;quot; required&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;fieldset, legend&lt;/li&gt;
&lt;li&gt;radio/checkbox: &lt;code&gt;&amp;lt;label for=&amp;quot;name&amp;quot;&amp;gt; &amp;lt;input type=&amp;quot;radio&amp;quot; name=&amp;quot;name&amp;quot; checked&amp;gt; Name &amp;lt;/label&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;button: &lt;code&gt;&amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt; &amp;lt;/button&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;others&#34;&gt;Others&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;audio: &lt;code&gt;&amp;lt;audio id=&amp;quot;meowClip&amp;quot; controls&amp;gt;&amp;lt;source src=&amp;quot;audio/meow.mp3&amp;quot; type=&amp;quot;audio/mpeg&amp;quot; /&amp;gt;&amp;lt;source src=&amp;quot;audio/meow.ogg&amp;quot; type=&amp;quot;audio/ogg&amp;quot; /&amp;gt;&amp;lt;/audio&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;accesskey&lt;/li&gt;
&lt;li&gt;tabindex&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>绪论</title>
      <link>https://zhengzangw.com/notes/multimedia/1-introduction/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/multimedia/1-introduction/</guid>
      <description>多媒体  媒体：信息的载体，如数字，文字，声音，图形，图像，动画，视频等 多媒体：融合两种或以上媒体的一种人——机交互式信息交流和传播媒体  多个媒体 交互性 数字化   多媒体技术：通过计算机交互处理多种媒体，使多种信息建立逻辑连接，集成一个系统并具有交互性 多媒体技术本质  音像技术 计算机技术 通信技术    多媒体计算机系统  计算机系统类别  多媒体个人计算机 MPC  声音 IO：麦克风，音响 图像 IO：扫描仪，打印机 视频 IO：摄像头，投影仪   图形工作站：大数据量，快，长时稳定 个人桌面 PC：可以取代上面两个 计算机集群：超级计算机，并行计算复杂问题   计算机硬件  集成声卡  AC97 标准软声卡：CPU 占用率高，CODEC 芯片值负责 D/A 和 A/D 转换，处理工作都交给 CPU 硬声卡   集成显卡与独立显卡 CPU(FPU) 集成协处理器 (1989 486 处理器) CPU 集成内存控制器（北桥）（2003 Athlon 64）   多媒体指令扩展  MMX (Intel 1996) SSE (Intel 1999 Pentium III) SSE2 (Intel 2001) SSE3 (Intel 2004) 3DNow!</description>
    </item>
    
    <item>
      <title>绪论</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/1-introduction/</link>
      <pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/1-introduction/</guid>
      <description>数值分析研究对象与特点  计算方法：在计算机上求解数学问题的理论、方法及其软件实现 现代科学三个组成：科学理论，科学实验和科学计算  误差  误差来源  建立数学模型：模型误差 测量数据：测量误差 构成数值算法：方法误差 数值运行执行  表示数据有限：舍入误差 计算机对无穷过程截断：截断误差     绝对误差：$|e^*|$  精确值：$x^*$ $e^=x-x^$ 绝对误差界：$|e^|&amp;lt;\epsilon^$   相对误差：$e_r=\frac{e^}{|x^|},x^*\neq0$  相对误差界：$e_r^=\frac{\epsilon^}{|x^*|}$   有效位数：$x=\pm 0.a_1a_2\cdots a_n\times 10^m$  四舍五入后绝对误差界限为被保留的数字中最后数位的半个单位：$0.5\times 10^{m-n}$ 有效数字：如果近似值的误差限是某一位上的半个单位，且该位置到 x 的第一位非零数字一共 n 位， 则称近似值 x 有 n 位有效数字 $0.5\times 10^{m-n-1}&amp;lt;|x-x^*|\leq 0.5\times10^{m-n}$ 取 $n$ 位有效数字，则先对 $n+1$ 位四舍五入   误差界运算  $\epsilon(x_1^\pm x_2^)=\epsilon(x_1^)+\epsilon(x_2^)$ $\epsilon(x_1^x_2^)\approx|x_1|\epsilon(x_2^)+|x_2|\epsilon(x_1^)$ $\epsilon(\frac{x_1^}{x_2^})\approx\frac{|x_1|\epsilon(x_2^)+|x_2|\epsilon(x_1^)}{|x_2^*|^2}$ $\epsilon(f(x^))\approx |f&#39;(x^)|\epsilon(x^*)$  $f(x)-f(x^)= f&#39;(x^)(x-x^)+\frac{f&#39;&#39;(\xi)}{2}(x-x^)^2, \xi\in[x,x^*]$      病态问题与条件数  病态：初始数据微小扰动，导致计算结果产生很大影响（反之良态）  即时算法数值稳定，也无法得到好的解（采集数据就有误差）   计算函数值的条件数：$C_p=|\frac{f(x)-f(x^*)}{f(x)}|/|\frac{\Delta x}{x}|=\frac{xf&#39;(x)}{f(x)}$  算法中需要注意的地方   使用数值稳定的算法：输入数据有误差，但在运算过程中摄入误差不增长的算法为数值稳定的</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://zhengzangw.com/notes/rendering/2-concepts/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/rendering/2-concepts/</guid>
      <description>Concepts Geometry Optics  光的直线传播定律 光的反射定律  法向量：$N$ 入射光：$L$ （归一化） 反射光：$R=2(N\cdot L)N-L$   光的折射定律  Snell&amp;rsquo;s law: $\eta_L\sin\theta_L=\eta_T\sin\theta_T$ $T=-N\sqrt{1-\frac{\eta^2_L}{\eta^2_T\sin^2\theta_L}\sin^2\theta_L}-\frac{\eta_L}{\eta_T}[L-(N\cdot L)N]=(\frac{\eta_L}{\eta_T}N\cdot L-\sqrt{1-\frac{\eta_L^2}{\eta_T^2}[1-(N\cdot L)^2]})N-\frac{\eta_L}{\eta_T}L$ Total Internal Reflection   基本假设  Linearity Energy conservation Steady state No polarization No fluorescence or phosphorescence    Radiometry and Color  Radiometry: the science of measuring radiant energy transfer Radiometric Quantities  Energy Radiant power (total flux) $\Phi,P$ 功率 (J/s, W) Irradiance (flux density) $E$: total radiant power per unit area incident onto a surface  Inverse square law: $E=\frac{\Phi}{4\pi r^2}$ Lambert&amp;rsquo;s law: $E=\frac{\Phi\cos\theta}{A}$   Radiosity (flux density) $B$: total radiant power per unit area leaving a surface Intensity $I$: flux density per solid angle $I=\frac{d\Phi}{d\omega}$  isotropic point source: $\Phi=4\pi I$   Radiance $L$: total flux traveling at some point $x$ in a specified direction $\omega$, per unit area perpendicular to the direction of travel  $L(x,\omega)=\frac{d^2\Phi}{dA\cos\theta d\omega}$ 沿光线传输方向，radiance 不变（真空），sensors response is proportional to radiance     Solid Angles $\omega$: the solid angle subtended by an object is the surface area of its projection on to the unit spher  $d\omega=\frac{dA\cos\theta}{r^2}$ 球坐标系：$\sin\theta d\theta d\phi$   Spectrum: 370nm - 730nm  SPD: Spectral Power Distribution photometry: 物理量转换为视觉感知量    BRDF and The Rendering Equation  Bidirectional Reflectance Distribution Function: $f_r(\omega_i\rightarrow\omega_r)\equiv\frac{L_r(\omega_r)}{L_i(\omega_i)\cos\theta_i d\omega_i}$ (辐射率 $L$ 和辐照度 $E$ 的比值，对入射光改变的能力，材质，六维函数) The Reflection Equation(local direct illumination model): $L_r(\omega_r)=\int_{\Omega_i}f_r(\omega_i\rightarrow\omega_r)L_i(\omega_i)\cos\theta_id\omega_i$ The Rendering Equation: $L_o(x,\omega_o)=L_e(x,\omega_o)+\int_{\omega_i\in\Omega_+}f_r(\omega_i,x,\omega_o)L_i(x,\omega_i)\cos\theta_id\omega_i$  迭代计算：$L_o(x,\omega_o)=L_e(x,\omega_o)+\int_{y\in S}f_r(\omega_i,x,\omega_o)L_o(y(x,\omega_i),-\omega_i)V(x,y)G(x,y)dA_y$ Ligiting Simulation = Solving the Rendering Equation  Monte Carlo Methods (Ray tracing, path tracing&amp;hellip;) Finite element methods (Classic radiosity)      </description>
    </item>
    
    <item>
      <title>Data Abstraction</title>
      <link>https://zhengzangw.com/notes/advanced-programming/1-data-abstraction/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/1-data-abstraction/</guid>
      <description>面向对象程序设计  面向对象的观点：自然界是由一组彼此相关并能相互通信的实体（对象）所组成 面向对象的程序设计方法：使用面向对象的观点来描述现实问题，然后用计算机语言来模仿并处理该问题  消息：调用对象的操作 类：对象的特征   基本的程序设计手段  抽象：复杂度控制  过程抽象 数据抽象：使用者只需知道对数据所能实施的操作以及这些操作之间的关系，而不必知道数据的具体表示   封装：信息隐蔽  过程封装 数据封装：把数据和操作作为整体描述，数据的访问只能通过封装体的对外接口来完成   模块化：组织大型程序  过程式：模糊 对象式：对象类   软件复用：缩短开发周期  过程式：子程序库 对象式：类库   可维护性：延长软件寿命  过程式：以功能为中心，强调过程抽象，数据与操作分离 对象式：以数据为中心，强调数据抽象，操作依附数据   软件模型的自然度：缩小解题空间与问题空间之间的语义间隙   面向对象程序设计基本内容  对象/类 继承：在定义一个新类（派生类、子类）时，可以利用已有类（基类、父类）的一些特征描述 多态：某一论域中的一个元素存在多种解释  一名多用：函数名重载，操作重载 类属性：类属函数，类属类型   绑定：确定对多态元素的某个使用是多态元素的那一种形式  静态绑定：编译时刻确定 动态绑定：运行时刻确定     面向对象语言  面向对象是一种程序设计思想，用任何语言都可以实现 采用面向对象语言会使得面向对象程序设计更加容易，语言也能提供更多的面向对象保障    类和对象  数据成员  类定义时，声明数据成员 如果未见到相应的类型定义或相应的类型未定义完，则该数据成员的类型只能是这些类型的指针或引用类型   成员函数  类定义放在头文件（.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://zhengzangw.com/notes/rendering/1-introduction/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/rendering/1-introduction/</guid>
      <description>Rendering   Rendering: The process of generating an image from a model, by means of a computer program
Model -&amp;gt; Rendering -&amp;gt; Image -&amp;gt; Display
 image + model - comp = painting, photography model + comp - image = 3D printing, hydrographic printing, sound rendering image + comp - model = abstract graphics    Realism
 Shadows Reflections Transparency Translucency Textures Complex illumination Realistic Materials    Components</description>
    </item>
    
    <item>
      <title>群的基本概念(问求内容)</title>
      <link>https://zhengzangw.com/notes/modern-algebra/group-basic/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/modern-algebra/group-basic/</guid>
      <description>群的定义  代数运算: 任一个由 $A\times A$ 到 $A$ 的映射（闭合）  代数系统 $(A,\cdot)$：非空集合上定义代数运算   半群（semigroup）：满足结合律  $a_1a_2\dots a_n$的结果与括号的添加方式无关 半群 $G$ 构成群 $\iff G$ 满足可除性条件：$\forall a,b\in G, ax=b,ya=b$ 在 $G$ 中都有解 消去律成立的有限半群为群   幺半群（monoid）：满足结合律，有单位元 群：非空集合 $G$ 上定义一个代数运算满足  结合律：$a(bc)=(ab)c$ 单位元（幺元）：$\exists e, \forall a\in G, ea=a$ $\forall a\in G, \exists b\in G, a\cdot b=b\cdot a=1$   Basic Properties of Groups  uniqueness of identities uniqueness of inverse  $(ab)^{-1}=b^{-1}a^{-1}$ $(a^{-1})^{-1}=a$   uniqueness of solution to $ax=b(xa=b)$ cancellation laws: $ab=ac\Rightarrow b=c,ba=ca\Rightarrow b=c$   Visualization  Describe a group in Cayley table Cayley graph: $\Gamma=\Gamma(G,S),S$ generates $G$  $s\in S$ assigned a color $c_s$ $\forall g\in G,s\in S,$ edge $(g,gs)$ is assigned $c_s$     交换群（Abel 群）  满足交换律的半群，$a_1a_2\dots a_n$ 可任意颠倒顺序 若 $G$ 中任一元素阶为 1 或 2，则 $G$ 为 Abel 群 $(ab)^n=a^nb^n$   有限群：$|G|=n&amp;lt;\infty$，称为 $n$ 阶群  循环群  The smallest subgroup contains $a$: $\langle a\rangle$  abelian   $o(g)$：元素 $g$ 的阶, 满足 $g^k=1$ 的最小正整数 $k$  若不存在，则 $g$ 为无限阶元素 $g^k=1\Rightarrow o(g)|k$ $o(g)=|\langle g\rangle |$   定理  循环群的子群仍是循环群  $o(g^m)=|\langle g^m\rangle|=|\langle g^{(m,o(g))}\rangle|=\frac{o(g)}{(m,o(g))}$   素数阶群为循环群       循环群阶 $\cong$ 子群 子群数量 生成元 生成元数量     $\infty$ $\mathbb{Z}$ $\langle a^n\rangle$ $\infty$ $g^{\pm1}$ 2   $n$ $\mathbb{Z}_n$ $\langle g^{\frac{n}{s}}\rangle,s\vert n$ $d(n)$ ${g^{k}\vert (k,n)=1,0\leq k&amp;lt;n}$ $\varphi(n)$    子群  子群：$H\subseteq G$且 $H$ 按 $G$ 的乘法构成群，则 $H\leqslant G$。 若$H\not= G$ 则 $H&amp;lt;G$ 子群的验证定理： 以下命题等价  $H\leqslant G$ $e\in H$ 且 $\forall a\in H,a^{-1}\in H$ 且 $\forall a,b\in H, ab\in H$ $\forall a,b\in H, ab^{-1}\in H$   集合的运算  $X^{-1}={x^{-1}:x\in Z}$ $XY={xy:x\in X,y\in Y}$ 对于子群 $H$，$H^{-1}=H, HH=H$   定理：群$G$若干子群交仍是$G$的子群 生成子群：$\langle S\rangle = \cap_{S\subseteq H\subseteq G}H = {x_1^{m_1}\cdots x_k^{m_k}:x_i,m_i\in Z}$  $\langle g\rangle={g^k|k\in Z}$：包含 $g$ 的最小子群 有限生成群：$|\langle S\rangle | &amp;lt; \infty$ 循环群：$\langle g\rangle$ ，$g$ 为生成元    陪集  陪集：右陪集 $aH={ah|a\in G, h\in H}$, 左陪集 $Ha={ha|a\in G,h\in H}$  若$aH\not=bH$, 则 $aH\cap bH=\emptyset$  $x\in aH\iff aH=xH\iff x^{-1}a\in H$   $aH\approx H\approx Ha$ 指标（指数）：$[G:H]=|{aH:a\in G}|=|{Hb:b\in G}|$ 陪集分拆：$G=\bigsqcup aH$   拉格朗日定理：$|G|=|H|*[G:H]$  $\lvert H\rvert\vert\lvert G\rvert$ 欧拉定理：$n$ 阶群 $G$ 中，$a^{|G|}=e$ 非 Abel 群最小阶数为 6   $H\leqslant G,K\leqslant G$  $K\leqslant H\leqslant G$， $[G:K] = [G:H][H:K]$ $HK\leqslant G\iff HK=KH$ $HK$ 是 $[K:H\cap K]$ 个两两不相交的 $H$ 右陪集的并 $|H||K| = |HK||H\cap K|$ （Poincare）$[G:H\cap K]\leq [G:H][G:K]$ 等号成立当且仅当$HK=G$    正规子群  共轭关系（等价关系）：$x\sim h\iff\forall g\in G, gxg^{-1}=h$  正规子群是 $G$ 中共轭类之并   中心：$Z(G)$：$\forall h\in Z(G), g\in G, ghg^{-1}=h$  只有一个元素的共轭类之并 $G$ 中所有元素都交换的元素   正规子群：$\forall g\in G, gH=Hg$, 则$H\trianglelefteq G$  等价定义  $\forall g\in G$, $gHg^{-1}=H$ $\forall h\in H, \forall g\in G, ghg^{-1}\in H$ $H$ 任意两个左陪集的乘积仍是左陪集   ${e}\trianglelefteq G,G\trianglelefteq G$ Abel 群的任何子群都是正规子群 $H\trianglelefteq G, K\leqslant G$, 则$HK=KH\trianglelefteq G$ $H\leqslant K\leqslant G,H\trianglelefteq G$, 则$H\trianglelefteq K$ $\cap$ 封闭   Factor(quotient) Groups $G/N$: ${aN,a\in G}$ under $(aN)(bN)=abN,N\trianglelefteq G$  $|G/N|=[G:N]$   $H$ 在 $G$ 中的正规化子：$N_G(H)={g\in G:gH=Hg}$ $H$ 在 $G$ 中的正规核：$H_G=\cap_{g\in G}gHg^{-1}$ 单群：没有非平凡正规子群的群  阿贝尔单群即为素数阶循环群    同态与同构  同态（homomorphism）：映射 $f:G_1\rightarrow G_2$ 满足 $f(gh)=f(g)f(h)$  $\sigma(e)=\overline{e}$ $\sigma(a^{-1})=\sigma(a)^{-1}$ $H_1\leq G_1\Leftrightarrow\sigma(H_1)\leq G_2$  $G$ 包含 $\text{Ker}(\sigma)$ 的子群与 $\text{Im}(\sigma)$ 的子群一一对应   $\text{Ker}(\sigma)\leqslant H\leqslant G$，则 $H\trianglelefteq G\iff \sigma(H)\trianglelefteq\sigma(G)$ $\text{Ker}(\sigma)\leqslant H\trianglelefteq G$，则 $G/H \cong \sigma(G)/\sigma(H)$ $o(\phi(x))|o(x)$   同态像：$\text{Im} \phi={h\in G_2:\exists g\in G_1,f(g)=h}$ 同态核：$\text{ker} \phi={g\in G_1:f(g)=\overline{e}}$ 自然同态：$\phi:G\rightarrow G/K$ is $\forall a\in G,\sigma(a)=aK$ 同态基本定理(First Isomorphism Theorem): $\psi:G\rightarrow H$  $\text{Im}(\psi)\leqslant H$ $\text{Ker}(\psi)\trianglelefteq G$ $G/\text{Ker}(\psi)\cong \text{Im}(\psi):\eta$  $\psi=\eta\phi$     单同态（嵌入映射）：f 为单射 满同态：f 为满射 自同构：$G$ 到自身的同构 同构(Isomorphism): 双射 $f:G_1\rightarrow G_2$ 满足 $f(gh)=f(g)f(h)$  $G_1\cong G_2$ $f^{-1}$ is isomorphism 同构为所有群集合上的等价关系   Cayley 定理：任何群 $G$ 同构于一个置换群  left regular representation: $g\rightarrow \lambda_g$, $\lambda_g:G\rightarrow G,\lambda_g(a)=ga$   第一同构定理(Correspondence Thoerem)：$N\trianglelefteq G$  ${K:K\leq G/N}\leftrightarrow{H:N\leqslant H\leqslant G}$ $N\leqslant H\leqslant G$, 则$H/N\trianglelefteq G/N \iff H\trianglelefteq G$ (Third Isomorphism Theorem)$N\leqslant H\trianglelefteq G$，则$(G/N)/(H/N)\cong G/H$   第二同构定理：(Second Isomorphism Theorem)  已知 $N\trianglelefteq G, H\leqslant G$ $(H\cap N)\trianglelefteq H$ $H/(H\cap N)\cong HN/N$   Dedekind 律：$K\leqslant H\leqslant G$ 且 $L\leqslant G$， 则 $H\cap KL=K(H\cap L)$ 引理：$K\trianglelefteq H \leqslant G$, $L\leqslant G$  $(K\cap L)\trianglelefteq (H\cap L), (H\cap L)/(K\cap L) \cong (K(H\cap L)/K)$ $L\trianglelefteq G$，则 $KL\trianglelefteq HL,K(H\cap L)\trianglelefteq H,HL/KL\cong H/(K(H\cap L))$   第三同构定理（Zassenhaus）：$L_1\trianglelefteq H_1\leqslant G,L_2\trianglelefteq H_2\leqslant G$  $(H_1\cap L_2)L_1\trianglelefteq (H_1\cap H_2)L_1$ $(H_2\cap L_1)L_2\trianglelefteq (H_1\cap H_2)L_2$ $(H_1\cap H_2)L_1/(H_1\cap L_2)L_1\cong (H_1\cap H_2)L_2/(H_2\cap L_1)L_2$    直积  External Direct Products: $G=G_1\times G_2\times \dots\times G_n$  $(g_1,\cdots,g_n)\in\prod G_i,o(g_i)=r_i,o((g_1,\cdots,g_n))=lcm(g_1,\cdots,g_n)$ $\prod_{i=1}^k\mathbb{Z}{n_i}\cong\mathbb{Z}{n_1\cdots n_k}\iff\gcd(n_i,n_j)=1$ $G_i^\star ={\langle e_1,\dots,x,\dots,e_n\rangle:x\in G_i}\cong G_i\unlhd G$  $G_1^\star G_2^\star \dots G_n^\star =G$ $G_1^\star \dots G_{i-1}^\star G_{i+1}^\star \dots G_n^\star \cap G_i^\star ={e}$   定理：以下三条等价  $G_1^\star \dots G_{i-1}^\star G_{i+1}^\star \dots G_n^\star \cap G_i^\star ={e}$ $x\in G$ 至多可以用一种方式表成 $x_1\dots x_n$ $e=x_1\dots x_n$，必有 $x_1=\dots=x_n=e$     Cancellation: $G\times K\cong H\times K, |K|&amp;lt;\infty\Rightarrow G\cong K$ Internal Direct Product: $G=G_1G_2\dots G_n:G_1,\dots,G_n\unlhd G;G_1^\star \dots G_{i-1}^\star G_{i+1}^\star \dots G_n^\star \cap G_i^\star ={e}$  $H,K\unlhd G$，$|H||K|=|G|,H\cap K={e}$，则 $G\cong H\times K$ $G/K=H,G/H=K$   统称直积  If $G = H \times K$, then $\exists H&#39; \simeq H,K&#39; \simeq K$ such that $G$ is the internal direct product of $H&#39;$ and $K&#39;$.</description>
    </item>
    
    <item>
      <title>1. Shell Basic</title>
      <link>https://zhengzangw.com/notes/command-line/1-shell-basic/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/1-shell-basic/</guid>
      <description>帮助 man mkdir tldr mkdir type cd which ffmpeg shellcheck script.sh # brew install shellcheck history 1 # history from 1 File System # 查看 ls -R tree -L 1 # brew install tree # 跳转 cd # = cd $HOME cd - # 放回之前目录 cd $OLDPWD broot nnn j -s # autojump dirs -v # 查看栈 popd # 出栈 popd +n # 从栈顶向栈底计算，删除 pushd # = cd - pushd +n # 切换到第 n 个，循环方式 # 操作 cp source_file target_file mv source_file target_file rm target_file mkdir -p # Create missing ones basename .</description>
    </item>
    
    <item>
      <title>1. Time-saving</title>
      <link>https://zhengzangw.com/notes/advanced-algorithm/1-time-saving/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-algorithm/1-time-saving/</guid>
      <description>Problems  Min-Cut $\in\text{P}$ Max-Cut $\in\text{NPH}$ Polynomial Identity Testing (univariate) $\in$co-$\text{NPH}$  Input: a polynomial $f\in\mathbb{F}$ of degree $d$ Determine whether $f\equiv0$   PIT:  Input: two $n$-variate polynomials $f,g\in\mathbb{F}[x_1,x_2,\cdots,x_n]$ of degree $d$ Determine: $f\equiv g$   Set Cover $\in\text{NPH}$:  Input: $m$ subsets $S_1,\cdots,S_m\subseteq U$ of a universe of size $n$ Output: $C\subseteq{1,2,\cdots, m}$ such that $U=\bigcup_{i\in C}S_i$ $\text{freq}(x)=|{i|x\in S_i}|$   Hitting Set Problem $\in\text{NPH}$  Input: $n$ subsets $S_1,\cdots,S_m\subseteq U$ of a universe of size $m$ Output $C\subseteq U$ that $C$ intersects with every set $S_i$ $\text{freq}(x)=|S_i|$ equivalent to Set Cover   Vertex Cover Problem $\in\text{NPH}$  Input: an undirect graph $G(V,E)$ Output: the smallest $C\subseteq V$ such that $\forall e\in E$ is incident to at least one vertex in $C$ set cover with frequency $2$   Minimum Makespan on Identical Parallel Machine $\in\text{NPH}$  Input: $n$ positive integers $p_1,p_2,\cdots,p_n$ nad a positive integer $m$ Output: an assignment $\sigma:[n]\rightarrow[m]$ which minimizes $C_{\max}=\max_{i\in [m]}\sum_{j:i=\sigma(j)}p_j$   Partition Problem $\in\text{NPH}$  Input: $S={x_1,\cdots,x_n}$ Output: Whether there is a partition of $S$ into $A$ and $B$ such that $\sum_{x\in A}x=\sum_{x\in B}x$   算法设计  $\text{P}$: Randomize to accelerate $\text{NPH}$  sampling: random approximation greedy/local search: approximation      Min-Cut Deterministic Algorithm  Max-flow min-cut Theory: $(|V|-1)\times$ max-flow time Stoer–Wagner Algorithm(multi-graphs): $O(EV+V^2\log V)$ Ken-ichi Kawarabayashi and Mikkel Thorup(simple graph, STOC 2015): near-linear time complexity  Karger&amp;rsquo;s Contraction Algorithm  Contraction: merge two vertices into a new vertex Karger&amp;rsquo;s Algorithm(1993): $\text{ZPP}$  Running time: $O(V^2)$ $P_c=\frac{2}{V(V-1)}$ w.</description>
    </item>
    
    <item>
      <title>中东</title>
      <link>https://zhengzangw.com/notes/islam-culture/%E4%B8%AD%E4%B8%9C/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/islam-culture/%E4%B8%AD%E4%B8%9C/</guid>
      <description>（政治）地理概念，以欧洲人为中心视角，近中远东，随时间有所变化，二战后逐渐形成今天的地方
 海湾阿拉伯国家合作委员会：石油，君主国  阿联酋，阿曼，巴林，卡塔尔，科威特，沙特阿拉伯   阿拉伯联盟 伊斯兰合作组织，伊斯兰发展银行  </description>
    </item>
    
    <item>
      <title>1-线性方程组</title>
      <link>https://zhengzangw.com/notes/linear-algebra/1-%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/linear-algebra/1-%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84/</guid>
      <description>Guass 消元  数域：$\mathbb{F}\in\mathbb{C}$  $0\in\mathbb{F},1\in\mathbb{f}$ $\forall a,b\in\mathbb{F},a\pm b\in\mathbb{F}, ab\in{F},\frac{a}{b}\in\mathbb{F}(b \not=0)$   矩阵$A=(a_{ij})_{mn}$  阶数 $m*n$ 方程组的增广矩阵    $$ \left[ \begin{matrix} a_{11} &amp;amp; \cdots &amp;amp; a_{1n} &amp;amp; | &amp;amp;b_1\newline \vdots &amp;amp; \ddots &amp;amp; \vdots &amp;amp; | &amp;amp; \vdots\newline a_{n1} &amp;amp; \cdots &amp;amp; a_{n1} &amp;amp; | &amp;amp; b_n \end{matrix} \right] \tag{3} $$
 矩阵三初等行变换  $r_i\leftrightarrow r_j$ $kr_i + r_j \rightarrow r_j$ $kr_i \rightarrow r_i$   梯阵  若有零行在底 主元（某行从左向右第一非零元）为 1 主元列指标随 i 严格递增   约化行梯阵  某一列有行主元则其余元素为 0 的梯阵   高斯消元 $N=(\alpha_i)$为基础解系，则$X=Ny$ $AX=0$, 解空间与原空间垂直  线性空间  线性空间：$\mathbb{F}^n,\mathbb{F}_n$ 线性无关  $\sum_{i=1}^mk_i\alpha_i=0$,则$k_i=0$ 线性相关的延长组线性相关，线性无关的缩短组线性无关   线性表示  $\beta=\sum_{i=1}^mk_i\alpha_i$ 线性相关$\Leftrightarrow$任一向量可由其它线性表示 $\alpha_1,\cdots,\alpha_l$线性无关，可由$\beta_1,\cdots,\beta_m$线性表示，则$l\leq m$   $\mathbb{F}^n$的基  线性无关 生成$\mathbb{F}$ (三选一)个数等于维数   维数：基的个数$dim\mathbb{F}$ 子空间：  非空子集为子空间当且仅当其对加、数乘封闭 生成子空间    线性方程组的解之结构  齐次线性方程组：记方程的解系为$H$,为$\mathbb{F}$子空间，H 的基为基础解系。以未知数$x_{j_1},\cdots,x_{j_p}$为参数，令其中一个为 1 其余为零得到的$X_1,\cdots,X_p$为基础解系 仿射空间：$\alpha+W$  仿射空间关系：重合或不交   方程组解的关系  若$Y,Z$为方程$AX=b$的解，则$Y-Z$为方程$AX=0$的解 若$Y$为$AX=b$的解，$X$为$AX=0$的解，则$X+Y$为$AX=b$的解  若$AX=b$的解集为$S$,$AX=b$的解集为$H$，$Y\in S$, 则$S=Y+H$。 若$b=0$，则$S\cap H=\emptyset$   $Y$为$AX=b$特解，$X$为$AX=0$的通解，则$Y+X$为$AX=b$的通解    </description>
    </item>
    
    <item>
      <title>Mechanics</title>
      <link>https://zhengzangw.com/notes/physics/physics-mechanics/</link>
      <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/physics/physics-mechanics/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;物理学&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;物质
&lt;ul&gt;
&lt;li&gt;microscopic: elementary particles （大数粒子组成体系中个别粒子的行为）&lt;/li&gt;
&lt;li&gt;mesoscopic(介观)&lt;/li&gt;
&lt;li&gt;macroscopic：大数粒子组成的体系整体行为&lt;/li&gt;
&lt;li&gt;cosmological&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;运动：机械运动、热运动、微观粒子运动等（基于时间和空间）&lt;/li&gt;
&lt;li&gt;相互作用：由场传递，引力、弱相互作用、电磁相互作用、强相互作用&lt;/li&gt;
&lt;li&gt;orders, symmetry, symmetry-breaking, conservation laws or invariance&lt;/li&gt;
&lt;li&gt;物理学发展历史
&lt;ul&gt;
&lt;li&gt;19 世纪中叶前：实验科学&lt;/li&gt;
&lt;li&gt;20 世纪初：狭义和广义相对论，量子力学&lt;/li&gt;
&lt;li&gt;20 世纪中叶：实验+理论科学&lt;/li&gt;
&lt;li&gt;如今三足鼎立：实验物理、理论物理、计算物理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基本理论
&lt;ul&gt;
&lt;li&gt;牛顿力学/经典力学&lt;/li&gt;
&lt;li&gt;热力学&lt;/li&gt;
&lt;li&gt;电磁学&lt;/li&gt;
&lt;li&gt;相对论&lt;/li&gt;
&lt;li&gt;量子力学&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;科学研究方法
&lt;ul&gt;
&lt;li&gt;观测、实验、模拟得到事实和数据&lt;/li&gt;
&lt;li&gt;用已知原理分析事实和数据&lt;/li&gt;
&lt;li&gt;（理论）形成假说和理论用以解释&lt;/li&gt;
&lt;li&gt;（理论）预言新的事实和结果&lt;/li&gt;
&lt;li&gt;（理论）用新的事例修改和更新理论&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基本量（操作性定义）：长度、质量、时间、电流、热力学温度、物质的量、发光强度&lt;/li&gt;
&lt;li&gt;非决定论性质
&lt;ul&gt;
&lt;li&gt;微观客体量子力学不确定性关系&lt;/li&gt;
&lt;li&gt;多粒子系统中个别粒子统计不确定性&lt;/li&gt;
&lt;li&gt;非线性动力系统中的不可预言性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;kinematics&#34;&gt;Kinematics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;diplacement: $\Delta\vec r=\vec r(t+\Delta t)-r(\vec t)$&lt;/li&gt;
&lt;li&gt;velocity: $\overline{\vec v}=\frac{\Delta\vec r}{\Delta t}$&lt;/li&gt;
&lt;li&gt;speed: $\overline{v}=\frac{\Delta s}{\Delta t}$&lt;/li&gt;
&lt;li&gt;acceleration: $\vec a=\frac{d\vec v}{dt}$&lt;/li&gt;
&lt;li&gt;angular velocity vector: $\vec \omega =\frac{d\vec\theta}{dt} = \dot{\varphi}\vec k$&lt;/li&gt;
&lt;li&gt;velocity in circular motion: $\dot{\vec \rho}=\vec \omega\times\vec\rho$&lt;/li&gt;
&lt;li&gt;Oscillation: temporal periodicity and spatial repetitiveness&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>2. AEP</title>
      <link>https://zhengzangw.com/notes/information-theory/2-aep/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/information-theory/2-aep/</guid>
      <description>Convergence of random variables  In probability (convergence in probability): $P(|X_n-X|\leq\epsilon)\rightarrow 1$ In mean square: $E(X_n-X)^2\rightarrow 0$ With probability 1 (almost surely convergence): $P(\lim_{n\rightarrow\infty}X_n=X)=1$ (2)$\rightarrow$(1), (3)$\rightarrow$(1) Law of Large Numbers: $X_1,\cdots,X_n\sim p(x)$  Strong: $P(\lim_{n\rightarrow\infty} \overline X_n=E(X_1))=1$ Weak: $\overline X_n\rightarrow E(X_1)$ in probability    Asymptotic Equipartition Property  AEP: $X_1,X_2,\cdots X_n$ are i.i.d. $\sim p(x)$, then $-\frac{1}{n}\log p(X_1,X_2,\cdots, X_n)\rightarrow H(X)$  $2^{-nH(X)+\epsilon}\leq p(X_1,X_2,\cdots,X_n)\leq 2^{-n(H(X)-\epsilon)}$   typical set $A_\epsilon^{(n)}$ is the set of sequences $(x_1,\cdots, x_n)\in\mathcal{X}^n$ with property $2^{-nH(X)+\epsilon}\leq p(X_1,X_2,\cdots,X_n)\leq 2^{-n(H(X)-\epsilon)}$  $P(A_\epsilon^{(n)})\geq 1-\epsilon$ for $n$ sufficiently large (The typical set has probability nearly 1) $|A_\epsilon^{(n)}|\leq 2^{n(H(X)+\epsilon)}$ (All elements are nearly qeuiprobable) $|A_\epsilon^{(n)}|\geq (1-\epsilon)2^{n(H(X)-\epsilon)}$ (elements nearly $2^{nH}$)   High Probability Set: $B_\delta^{(n)}\subset\mathcal{X}^n$ be the smallest set with $P(B_\delta^{(n)})\geq 1-\delta$  if $P(B_\delta^{(n)})\geq 1-\delta$, then $\frac{1}{n}\log|B_\delta^{(n)}|&amp;gt;H-\delta&#39;$ for n sufficiently large   Data Compression  Encode: $E(\frac{1}{n}l(X^n))\leq H(X)+\epsilon$  $n\log|\mathcal{X}|+1+1$ for $(A_\epsilon^{(n)})^c$ $n(H+\epsilon)+1+1$ for $A_\epsilon^{(n)}$   For any scheme with rate $r&amp;lt;H(X),P_e\rightarrow 1$    Joint Typicality Jointly typical sequences $A_\epsilon^{(n)}$</description>
    </item>
    
    <item>
      <title>Research Interest</title>
      <link>https://zhengzangw.com/about/interest/</link>
      <pubDate>Mon, 07 Dec 2020 02:47:43 +0800</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/about/interest/</guid>
      <description>My current research interest includes: Machine Learning (transfer learning, continual learning), Computer Vision (self-supervised learning), and High-Performance Computing (large-batch training, optimizer).</description>
    </item>
    
    <item>
      <title>2-FNN</title>
      <link>https://zhengzangw.com/notes/deep-learning/2-fnn/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/2-fnn/</guid>
      <description>FNN  前向神经网络/全连接神经网络/多层感知机 前向传播  $z^{(l)}=W^{(l)}a^{(l-1)}+b^{(l)}$ $a^{(l)}=f_l(z^{(l)})$   通用近似定理（Universal Approximation Theorem,1989)  $\phi(\cdot)$ 是一个非常数、有界、单调递增的连续函数，$J_D$ 是一个 $D$ 维的单位超立方体 $[0,1]^D$，$C(J_D)$ 是定义在 $J_D$ 上的连续函数集合 $\forall f\in C(J_D),\exists M\in\mathbb{Z},v_m,b_m\in\mathbb{R},\omega_m\in\mathbb{R}^D$, 有函数 $F(x)=\sum_{m=1}^Mv_m\phi(\omega_m^\top x+b_m)$ $|F(x)-f(x)|&amp;lt;\epsilon,\forall x\in J_D,\epsilon$ 为很小正数 在 $\mathbb{R}^D$ 有界闭集上依然成立   $𝕀_i(t)$: 第 $i$ 个元素为 $t$ 其余为 $0$ 的行向量 反向传播算法  $\delta_i^{(l)}=\frac{\partial L}{\partial z^{(l)}}=\frac{\partial L}{\partial z^{(l+1)}}\frac{\partial z^{(l+1)}}{\partial a^{(l)}}\frac{\partial a^{(l)}}{\partial z^{(l)}}=\delta_{i+1}(W^{l+1})^\top\text{diag}(f&#39;(z^{(l)}))\in\mathbb{R}^{M_l}$ $dL=\text{tr}(\frac{\partial L}{\partial z^{(l)}}dz^{(l)})=\text{tr}((a^{(l-1)})^\top\delta^{(l)}dW)\Rightarrow\frac{L(y,\hat y)}{\partial W^{(l)}}=\delta^{(l)}(a^{(l-1)})^\top$   自动梯度计算  数值微分 符号微分 自动微分：$f:\mathbb{R}^N\rightarrow\mathbb{R}^M$  前向模式：$N$ 反向模式：$M$     优化  非凸优化问题 梯度消失问题 梯度弥散问题    </description>
    </item>
    
    <item>
      <title>可测函数</title>
      <link>https://zhengzangw.com/notes/real-function-theory/%E5%8F%AF%E6%B5%8B%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/real-function-theory/%E5%8F%AF%E6%B5%8B%E5%87%BD%E6%95%B0/</guid>
      <description>函数  连续函数：$f:\mathbb{R}\rightarrow\mathbb{R},\forall x_0\in\mathbb{R},\forall\epsilon&amp;gt;0,\exists\delta&amp;gt;0,U(x_0,\delta)\subset f^{-1}(f(x_0)-\epsilon,f(x_0)+\epsilon)$ 连续函数：$f:X\rightarrow\mathbb{R}$，开集的原像是开集  可验证开区间的原像是开集 可验证 $(a,b)$ 是开集   研究函数：$f:E\rightarrow\mathbb{R},E\subseteq\mathbb{R}^n$ 可测且 Borel 集的原像是可测集  减少需要验证的集合 研究无穷的函数    可测函数  广义实值函数 $f:E\rightarrow\mathbb{R}\cup{+\infty,-\infty}$  $+\infty$ 大于所有实数，$-\infty$ 小于所有实数   有限函数：$f:E\rightarrow\mathbb{R}$ 有界函数：有界函数是有限函数 可测函数：$f:E\rightarrow\mathbb{R}\cup{+\infty,-\infty}$ 可测，如果 $\forall a,{x\in E:f(x)&amp;gt;a}\doteq E[f&amp;gt;a]$ 可测  等价于：$\forall a,E[f\leq a]$ 可测 等价于：$\forall a,E[f\geq a]$ 可测 Borel 集的原像是可测集   可测函数四则运算仍为可测函数 ${f_n(x)}$ 是 $E$ 上至多可数个可测函数，则上下确界可测  连续函数无此性质 上下极限可测   $f$ 的正部和负部可测  $f^+(x)=\max(f(x),0)$ $f^-(x)=\min(f(x),0)$   可测函数例  $f=C\in\mathbb{R}$ 连续函数 单调函数 简单函数：广义实值函数在可数个互不相交可测集上的限制分别为常值函数  Dirichlet     可测函数的限制是可测函数  简单函数逼近  $E$ 是 $\mathbb{R}^n$ 可测集  $f(x)$ 在 $E$ 上非负可测，则存在非负简单函数 ${\varphi_k(x)}$，$\forall x\in E,\varphi_k(x)\leq\varphi_{k+1}(x),\lim_{k\rightarrow\infty}\varphi_k(x)=f(x)$ $f(x)$ 在 $E$ 上可测，则存在简单函数 ${\varphi_k(x)},\forall x\in E,\lim_{k\rightarrow\infty}\varphi_k(x)=f(x)$  当 $f(x)$ 有界，一致收敛      可测函数列收敛  逐点收敛：${f_k},\forall x\in E,\forall \epsilon&amp;gt;0,\exists N\in\mathbb{N},\forall k\geq N,|f_k(x)-f(x)|&amp;lt;\epsilon$ 一致收敛：${f_k},\forall \epsilon&amp;gt;0,\exists N\in\mathbb{N},\forall x\in E,\forall k\geq N,|f_k(x)-f(x)|&amp;lt;\epsilon$  等价：$\lim_{k\rightarrow\infty}\sup_{x\in E}|f_n(x)-f(x)|=0$ 非一致收敛例：$f_k(x)=x^k,E=[0,1]$ 一致收敛连续函数极限为连续函数   几乎处处（almost everywhere, a.</description>
    </item>
    
    <item>
      <title>2-排序与数字统计</title>
      <link>https://zhengzangw.com/notes/problem-solving/2-sorting-and-order/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/2-sorting-and-order/</guid>
      <description>排序 插入排序 for (int j=2; j&amp;lt;A.size(); ++j){ auto key = A[j]; for (int i = j-1; i&amp;gt;0 &amp;amp;&amp;amp; A[i]&amp;gt;key; --i) A[i + 1] = A[i]; A[i + 1] = key; }  循环不变量：每次循环开始前，子数组 A[1..j-1] 有序 worst: $\Theta(n^2)$ average: $\Theta(n^2)$  归并排序 void merge_sort(vector&amp;lt;int&amp;gt;&amp;amp; A, int l, int r){ if (l &amp;lt; r){ int mid = (l+r)/2; merge_sort(vector&amp;lt;int&amp;gt;&amp;amp; A, l, mid); merge_sort(vector&amp;lt;int&amp;gt;&amp;amp; A, mid, r); merge(A, l, mid, r); // O(r-l)  } }  worst case: $\Theta(n\lg n)$ average case: $\Theta(n\lg n)$  堆排序 build_max_heap(A) for i in range(A.</description>
    </item>
    
    <item>
      <title>Data Flow Analysis</title>
      <link>https://zhengzangw.com/notes/static-program-analysis/2-data-flow-analysis/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/static-program-analysis/2-data-flow-analysis/</guid>
      <description>Applications How Data Flows on CFG? How application-specific Data Flows through the Nodes (BB) and Edges (control flows) of CFG (a program)
 may analysis: over-approximation must analysis: under-approximation input and output statses Transfer Function  forward analysis: $\text{OUT}[s]=f_s(\text{IN}[s])$ backward analysis: $\text{IN}[s]=f_s(\text{OUT}[s])$   Control Flow  $\text{IN}[B]=\bigwedge_{P\text{ a predecessor of }B}\text{OUT}[P]$   Key  Domain, Direction, May/Must, Boundary, Initialization, Transfer function, Meet    Reaching Definitions Analysis  definition of a variable: a statement that assigns to a value whether the a definition d is reachable at program point p usage  detect possible undefined variables   $\text{OUT}[B]=\text{gen}_B\cup(\text{IN}[B]-\text{kill}_B)$  Live Variables Analysis  whether the value of variable v at program point p could be used along som path in CFG starting at p usage  register allocations   $\text{OUT}[B]=\bigcup_{\text{S a successor of B}}\text{IN}[B]$ $\text{IN}[B]=\text{use}_B\cup(\text{OUT}[B]-\text{def}_B)$  Available Expressions Analysis  whether an expression must be constant at a point x op y is available if  all paths from the entry to p must pass through the evalution of x op y after the last evaluation of x op y, there is no redefinition of x or y   must-analysis  Constant Propagation  Given a variable $x$ at program point $p$, determine whether $x$ is guaranteed to hold a constant value at $p$ $\text{OUT}[B]=(x,v)$ nondistributivity  Lattice  Partial Order: poset $(P,\subseteq),\subseteq$ is binary relation that defines a partial ordering over $P$, $\subseteq$ has the following properties:  reflexity: $\forall x\in P,x\subseteq x$ antisymmetry: $\forall x,y\in P,x\subseteq y\wedge y\subseteq x\Rightarrow x = y$ transtivity: $\forall x,y,z\in P,x\subseteq y\wedge y\subseteq z\Rightarrow x\subseteq z$   upper bound $u$: $\forall x\in S, x\subseteq u, S\subseteq P$ lower bound $1$: $\forall x\in S, 1\subseteq x$ least upper bound(lub or join) $\cup S\in P$: $\forall u, \cup S\subseteq u$  two elements: $a\cup b$   greatest lower bound(glb or meet) $\cap S$: $\forall 1, 1\subseteq\cap S$  two elements: $a\cap b$ lub and glb is unique   lattice: $\forall a,b\exists a\cup b,a\cap b$ semilattice: $\forall a,b\in P$  only $a\cup b$ exists, $(P,\subseteq)$ is called a join semilattice only $a\cap b$ exists, $(P, \subseteq)$ is called a meet semilattice   complete lattice: $\forall S\subseteq P,\exists\cup S,\cap S$  greatest element $\top=\cup P$ least element $\perp=\cap P$   Every finite lattice is a complete lattice Product Lattice: $L_i=(P_i,\subseteq_i),L^n=(P,\subseteq)$  $P=P_1\times\cdots\times P_n$ $(x_1,\cdots, x_n)\subseteq (y_1,\cdots, y_n)\iff (x_1\subseteq y_1)\wedge\cdots\wedge (x_n\subseteq y_n)$   A product lattice is a lattice if a product lattice $L$ is a product of complete lattices, then $L$ is also complete monotonicity: $f:L\rightarrow L,\forall x,y\in L,x\subseteq y\Rightarrow f(x)\subseteq f(y)$ fixed-point theorem: if $f:L\rightarrow L$ is monotonic and $L$ is finite, then the least fixed point of $f$ can be found by iterating $f^k(\perp)$ until a fixed point is reached, greatest fixed point of $f$ can be found by iterating $f^k(\top)$ height of a lattice $h$: the length of the longest path from Top to Bottom in the lattice distributed $F$: $F(x\cup y)=F(x)\cup F(y)$  Foundation   Iterative Algorithm (IN/OUT equation system)</description>
    </item>
    
    <item>
      <title>Lexical Analysis</title>
      <link>https://zhengzangw.com/notes/compiler/2-lexical-analysis/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/2-lexical-analysis/</guid>
      <description>词法分析器的作用  读入字符流，组成词素，输出词法单元  过滤空白、换行、制表符、注释 将词素添加到符号表 逻辑上独立于语法分析，但通常和语法分析处于同一趟   独立词法分析  简化设计 提高编译器效率 增强编译器的可移植性   概念  词法单元 Token：&amp;lt;单元名，属性&amp;gt; 模式 Pattern：描述了一类 Token 可能具有的形式 词素 Lexeme：源程序中的字符序列    词法单元的规约（正则表达式）  概念  字符表：一个有穷符号的集合 串：符号的有穷序列 语言：给定字母表上串的可数集合 前缀，后缀，子串 连接：$xy$ 指数运算：$x^n$   语言运算  $L\cup M$ $LM$ $L^*=\cup_{i=0}^\infty L^i$ $L^+=\cup_{i=1}^\infty L^i$   正则表达式  基本部分  $L(\epsilon)={\epsilon}$ $L(a)={a}$   归纳部分  $L((r)|(s))=L(r)\cup L(s)$ $L((r)(s))=L(r)L(s)$ $L((r)^)=L(r)^$ $L((r))=L(r)$   运算优先级 $*$ 连接 $|$ 扩展  $r+$ = $rr^*$ $r?</description>
    </item>
    
    <item>
      <title>2. 图形设备输出原理</title>
      <link>https://zhengzangw.com/notes/computer-graphics/2-resterscan/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-graphics/2-resterscan/</guid>
      <description>图形输出颜色模型 标准颜色模型 XYZ 模型  XYZ 颜色模型  加色空间：三基色 XYZ 为虚颜色 一组彩色匹配函数：描述任意光谱色所需每种基色的量 $F = X+Y[Y]+Z[Z]$  $X,Y,Z$ 匹配 $F$ 色需要的基色的权 $,[Y],[Z]$: 三维加色空间向量     CIE-XYZ （国际照明委员会 CIE 1931）  色度：平面 $X+Y+Z=1$ 亮度值：分量 $Y$ 规范化基色权向量得到 $(x,y,z)$ 在平面 $X+Y+Z=1$ 上 色度坐标 $(x,y)$: 原点与点 $(x,y,z)$ 连接线上所有颜色，决定色彩和纯度 一种颜色的完整描述 $(x,y,Y)$   CIE-XYZ 色度图：将 $X+Y+Z=1$ 平面投影到 $XY$ 平面上  舌头装曲线：边界和内部表示所有可见光色度值 边界上的点：纯彩色 C 点：白色位置，约为 $(\frac{1}{3},\frac{1}{3},\frac{1}{3})$，为平均日光近似标准 紫红线：不属于光谱 不可能有一个三角形包含所有颜色   速度图颜色特性  互补色：位于 C 两侧且通过 C 的直线上两点 主波长：与 C 连线交于非紫红线上点   颜色模型：在摸个色彩空间中方便地生成指定颜色  颜色计算模型 Lab 模型  CIE Lab 模型描述正常视力的人能看到的颜色  亮度成分 色度成分 $[-120,+120]$  a 成分：红色到绿色的变化 b 成分：黄色到蓝色的变化     与设备无关 俗语宽阔  显示设备模型 RGB 模型  加色模型，单位立方体  打印设备模型 CMY 模型  减色模型 CMYK 模型 $(C, M, Y)=(1,1,1)-(R,G,B)$  用户交互模型 HSV 模型  HSV 模型  色彩 H: 0 为红色，互补色 180 度 饱和度 S：水平轴，白色纯度为 0，S=1 为纯彩色 明度值 V：垂直轴，锥顶点为黑色   加白色：S 减小，V 不变 加黑色：V 减小，S 不变 同时加白色和黑色：同时减小 V 和 S，可指定各种色调  Tektronix 公司 HLS 模型  色彩 H：0 位蓝色 亮度 L：垂直轴，L=0 为嘿，L=1 为白，L=0.</description>
    </item>
    
    <item>
      <title>Preprocessing</title>
      <link>https://zhengzangw.com/notes/data-mining/2-preprocessing/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-mining/2-preprocessing/</guid>
      <description>预处理流程  General  Data cleaning Data reduction Data Integration Data transformation    Data cleaning  incomplete: mainly from data collection  忽略属性 手动填充 使用全局量 属性均值 相同类属性均值 最可能值   噪音：mainly from data collection，数据平滑技术（smooth）  分箱（binning）  partition: equi-depth, equi-width smoothing: means, median, boundaries   regression: fit into a mathematical function clustering: organize similar values into groups or clusters data editing  exploiting local smoothness exploiting global consistency with a noise tolerant model     不一致：mainly from data integreation  knowledge engineering tools    Data Integration  Schema Integration  entity identification problem: family name vs.</description>
    </item>
    
    <item>
      <title>Electrocircuit</title>
      <link>https://zhengzangw.com/notes/microelectronics/electrocircuit/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/microelectronics/electrocircuit/</guid>
      <description>电路与电路模型   电路：电气器件构成，并具有一定功能
  电路模型：一个实际电路可以由多个理想元件的组合来模拟，这样的电路称为电路模型
  电路元件：电路中最基本的组成单元
 集总参数：当实际电路的大小远小于电路工作时电磁波的波长时，可以把元件作用集总在一起，用一个或有限个 R,L,C 来表示，这样的电路参数就是集总参数 集总参数元件假定：在任何时候流入二端元件的一个端子的电流一定等于从另一端子流出的电流，两个端子之间的电压值为单值量    电流：带电粒子的有序运动形成电流
 单位时间通过导体横截面的电荷量称为电流强度简称电流：$\frac{dq}{dt}$ 电流的大小和方向都不随时间改变，称为直流电流 习惯上把正电荷移动的方向规定为电流的方向    电压：电路中任意两点之间的电压等于这两点之间的电位差，等于单位正电荷有 A 点经任意路径到达 B 点时，该电荷获得或失去的能量 $\frac{dw}{dq}$
 习惯上把电位下降的方向规定为电压方向    （非）关联参考方向：电流方向和电压方向（不）一致
  电功率：$w=\int^{q(t)}_{q(t_0)}udq=\int_0^t u(t)i(t)dt$
 当$U，I$为关联参考方向时，$p=ui&amp;gt;0$表示元件吸收功率，若$p=ui&amp;lt;0$则表示元件释放功率 当$U，I$为非关联参考方向时，$p=ui&amp;gt;0$表示元件释放功率，若$p=ui&amp;lt;0$则表示元件吸收功率    电阻：（电导）$S=1/\Omega$
 线性电阻：在电压和电流取关联参考方向时，在任何时候它两端的电压和经过它的电流服从欧姆定律    电容：$q=Cu$，单位 $F$ 法拉
 库夫特性：$C=\frac{q}{u}$ 电容阻断直流电：$i=C\frac{du}{dt}$ 电容吸收的能量以电场能量的形式储存在元件中，电容是储能元件，不产生能量，无源元件    电感：磁通 $\Phi_L$ （韦伯，Wb），磁通链 $\Psi_L=n\Phi_L$。线性非时变电感元件 $\Phi_L=Li(t)$，$L$ 自感/电感，单位 $H$ 亨利</description>
    </item>
    
    <item>
      <title>Poisson Process</title>
      <link>https://zhengzangw.com/notes/stochastic-process/poisson-process/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/stochastic-process/poisson-process/</guid>
      <description>Poisson Process Counting Process  $N(t)\geq 0$ $N(t)\in\mathbb{N}$ $s&amp;lt;t,N(s)\leq N(t)$ $s&amp;lt;t,N(t)-N(s)$ equals the number of events that have occurred in the interval $(s,t]$  Definition 1 of Poisson Process   $N(0)=0$
  independent increments
  $\forall s,t\geq 0$
$$P(N(t+s)-N(s)=n)=e^{-\lambda t}\frac{(\lambda t)^n}{n!},n=0,1$$
  Definition 2 of Poisson Process  $N(0)=0$ The process has stationary and independent increments $P(N(t+h)-N(t)=1)=\lambda h+o(h)$ $P(N(t+h)-N(t)\geq 2)=o(h)$  Sequence of interarrival times   ${X_n,n\geq 1}$: $X_n$ denotes the time of the $n$th event</description>
    </item>
    
    <item>
      <title>2-一元微积分</title>
      <link>https://zhengzangw.com/notes/calculus/section2/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/calculus/section2/</guid>
      <description>积分  Riemann 和  $P:a=x_0&amp;lt;\cdots&amp;lt;x_n=b$ 为 $[a,b]$ 的分隔 特殊点选取 $\xi$： $\xi_i\in[x_{i-1},x_i]$，定义域${1,2,\cdots,n}$，自变量 $i$，函数值 $\xi_i$ $\Delta x_i= x_i-x_{i-1}$ $S(f,P,\xi)=\sum_{i=1}^nf(\xi_i)\Delta x_i,\lVert P\rVert=\max{|\Delta x_i||1\leq i\leq n}$   Riemann 可积：$\forall\epsilon&amp;gt;0,\exists\delta&amp;gt;0,\forall P,\lVert P\rVert&amp;lt;\delta,\forall\xi,|S(f,P,\xi)-I|&amp;lt;\epsilon$  $I=\int_a^b f(x)dx$ 有界性：$f$ Riemann 可积则 $f$ 在 $[a,b]$ 上有界 唯一性 线性 单调性 非负性 三角不等式：$|\int_a^b fdx|\leq\int_a^b|f|dx$ $f$ 在 $[a,b]$ 上有界且至多有有限个间断点，则 $f$ 在 $[a,b]$ 上可积   积分计算  换元积分法  $\int f(\varphi(x))\varphi&#39;(x)dx=\int f(u)du$ $\int_a^b f(\varphi(x))\varphi&#39;(x)dx=\int_a^bf(\varphi(x))d\varphi(x)=\int_{\varphi(a)}^{\varphi(b)}f(u)du$  $f(u)$ 在 $I$ 上连续，$\varphi(x)$ 在 $[a,b]$ 上连续可微 $f(u)$ 在 $I$ 上可积，$\varphi(x)$ 在 $[a,b]$ 上可微且单调，$\varphi&#39;(x)$ 在 $[a,b]$ 上可积   第二换元积分法：$u=\varphi(x),\alpha=\varphi(a),\beta=\varphi(b),\int_\alpha^\beta f(u)du=\int_a^bf(\varphi(x))\varphi&#39;(x)dx$   分布积分法  $\int f(x)dg(x)=f(x)g(x)-\int g(x)df(x)$ $\int_a^b f(x)g&#39;(x)dx = f(x)g(x)|_a^b-\int_a^b f&#39;(x)g(x)dx$   公式  $\int x^{-1}=\ln |x|+C$ $\int a^x=\frac{a^x}{\ln a}+C$ $\int \frac{dx}{\sqrt{x^2+a}}=\ln|x+\sqrt{x^2+a}|+C$   有理积分  有理函数：$R(x)=\frac{P(x)}{Q(x)}$，$P,Q$ 为实系数多项式 部分分式分解：待定系数法 有理指数函数：$R(a^x)$ 有理三角积分：$R(\cos x,\sin x)$     无穷积分  $f$ 定义在 $[a,+\infty]$ 上，$\forall c\in[a,+\infty]$，$f$ 在 $[a,c]$ 上 Riemann 可积，若 $\lim_{c\rightarrow+\infty}\int_a^c f(x)dx=A$ 则 $\int_a^{+\infty} f(x)dx=A$  收敛：$A\not=\pm\infty$ 发散：$A=\pm\infty$ 或极限不存在   $\exists d\in\mathbb{R},\int_{-\infty}^df(x)dx,\int_d^{+\infty}f(x)dx$ 皆收敛，$\int_{-\infty}^{+\infty}f(x)dx = \int_{-\infty}^df(x)dx+\int_d^{+\infty}f(x)dx$   瑕积分  瑕点：$\forall c\in (a,b),f$ 在 $[a,c]$ 上可积，在 $b$ 附近无界 $f$ 定义在 $[a,b)$ 上，$\lim_{c\rightarrow b^-}\int_a^cf(x)dx=A$ 则 $f$ 在 $[a,b]$ 上的瑕积分为 $A$, $\int_a^bf(x)dx=A$   非负的积分: $f$ 在 $[a,+\infty]$ 上非负，$\forall c&amp;gt;a,f$ 在 $[a,c]$ 上可积  $\int_a^{+\infty}f(x)dx$ 有值且非负 $\int_a^{+\infty}f(x)dx$ 收敛当且仅当 $\int_a^{+\infty}f(x)dx&amp;lt;+\infty$ 比较判别法 I：$f\geq g$  $\int_a^{+\infty}f(x)dx$ 收敛，则 $\infty_a^{+\infty}g(x)dx$ 收敛 $\int_a^{+\infty}g(x)dx$ 发散，则 $\infty_a^{+\infty}f(x)dx$ 发散   比较判别法 II  $\lim_{x\rightarrow+\infty}\frac{f(x)}{g(x)}=c&amp;lt;+\infty,\int_a^{+\infty}g(x)dx$ 收敛，则 $\int_a^{+\infty}$ 收敛 $\lim_{x\rightarrow+\infty}\frac{f(x)}{g(x)}=c&amp;gt;0,\int_a^{+\infty}g(x)dx$ 发散，则 $\int_a^{+\infty}$ 发散     绝对收敛：$\int_a^{+\infty}|f(x)|dx$ 收敛  绝对收敛则收敛    导数  $f$ 在 $x=x_0$ 处可导（可微）：$\lim_{x\rightarrow x_0}\frac{f(x)-f(x_0)}{x-x_0}=A$  唯一性，局部性 可导$\Rightarrow$连续 线性 Leibniz 法则：$(fg)&#39;(x_0)=f&#39;(x_0)g(x_0)+f(x_0)g&#39;(x_0)$ 链法则：$(f\circ g)&#39;(x_0)=f&#39;(g(x_0))g&#39;(x_0)$ 参数求导法：$\frac{dy}{dx}|{x=x(t_0)}=\frac{\frac{dy}{dx}|{t=t_0}}{\frac{dx}{dt}|_{t=t_0}}$ $(a^x)&#39;=a^x\ln a$ $(\log_a|x|)&#39;=(x\ln a)^{-1}$ 单侧导数 初等函数导函数是初等函数   $f^{(m)}(x_0)$：$m$阶导数  光滑：任意阶可微 任意阶 Leibniz 法则：$(fg)^{(m)}(x_0)=\sum_{i=0}^mC_m^if^{(m-i)}(x_0)g^{(i)}(x_0)$   $f$ 在 $x=x_0$ 处可导 $\iff x\rightarrow x_0,f(x)-f(x_0)=A(x-x_0)+o(|x-x_0|)$  $A=f&#39;(x_0)$ $R(x)$ 为余项    微分  线性函数 $f:\mathbb{R}\rightarrow\mathbb{R}$  $f(\omega_1+\omega_2)=f(\omega_1)+f(\omega_2)$ $\forall k\in\mathbb{R},f(k\omega)=kf(\omega)$   $dx$: 恒等函数 $dx(\omega)=\omega$ $df(x_0)$：$f(x)$ 在 $x=x_0$ 处可导，函数 $df(x_0):\mathbb{R}\rightarrow\mathbb{R}$  $df(x_0)=f&#39;(x_0)dx$ $df(x,\omega)=df(x)(\omega)=f&#39;(x)\omega$ 线性 Leibniz 法则 链法则    微积分基本定理  微积分基本定理:  $f$ 在 $[a,b]$ 上连续则 $F(x)=\int_a^xf(t)dt$ 在 $[a,b]$ 上可微，且$F&#39;=f$  $\frac{d}{dx}\int_a^xf(t)dt=f(x)$ $F$ 为 $f$ 的原函数 $\int f(x)dx=F(x)+C$   $f$ 在 $[a,b]$ 上可积，则 $F$ 在 $[a,b]$ 上连续，且若 $f(x)$ 在 $x_0$ 处连续，$F&#39;(x_0)=f(x_0)$   Newton-Leibniz 公式：$F$ 在 $[a,b]$ 上连续可微，则 $\int_a^b\frac{d}{dx}F(x)dx=F(b)-F(a)=F|^b_a$ Rolle 中值定理：$f$ 在 $[a,b]$ 上连续，在$(a,b)$上可导，$f(a)=f(b)$ 则 $\exists\xi\in[a,b],f&#39;(\xi)=0$ Lagrange 中值定理：$F$ 在 $[a,b]$ 上连续，在$(a,b)$上可微，则$\exists\xi\in(a,b),F(b)-F(a)=F&#39;(\xi)(b-a)$ L&amp;rsquo;Hospital 法则：  $\frac{0}{0}:\lim_{x\rightarrow a^+}f(x)=\lim_{x\rightarrow a^+}g(x)=0,\lim_{x\rightarrow a^+}\frac{f&#39;(x)}{g&#39;(x)}=A$ 则 $\lim_{x\rightarrow a^+}\frac{f(x)}{g(x)}=A$ $\frac{\infty}{\infty}:\lim_{x\rightarrow a^+}g(x)=\pm\infty,\lim_{x\rightarrow a^+}\frac{f&#39;(x)}{g&#39;(x)}=A$ 则 $\lim_{x\rightarrow a^+}\frac{f(x)}{g(x)}=A$ $0\cdot\infty=\frac{0}{\frac{1}{\infty}}$ $0^0=e^{0\ln 0}=e^{0\cdot\infty}$ $\infty^0=e^{0\ln \infty}=e^{0\cdot\infty}$ $1^\infty=e^{\infty\cdot0}$ $(+\infty)-(+\infty)=\ln\frac{0}{0}=\frac{1}{0}-\frac{1}{0}$   Taylor 公式：$f$ 定义在 $(a,b)$ 上，$x_0\in(a,b),f$ 在 $x_0$ 处 $n$ 阶可导，则  $f(x)=\sum_{i=0}^n\frac{f^{(i)}(x_0)}{i!</description>
    </item>
    
    <item>
      <title>2-搜索</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/2-search/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/2-search/</guid>
      <description>无信息搜索  问题定义：初始状态，可能行动，转移模型，目标测试，路径耗散 参数  分支因子 $d$：每个状态有 $d$ 个后继 最优解代价 $C^*$ 每个行动代价至少为 $\epsilon$ 任一结点最大深度   性能度量  完备性：有解则一定能找到 最优性：能找到最优解 时间复杂度 空间复杂度       标准 宽度优先 一致代价 深度优先 深度受限 迭代加深 双向     完备性 $b&amp;lt;\infty$ $b&amp;lt;\infty$ No No $b&amp;lt;\infty$ $b&amp;lt;\infty$   最优性 单步代价相同 Yes No No Yes 双向为宽度优先   时间复杂度 $O(b^d)$ $O(n^{1+\frac{C^*}{\epsilon}})$ $O(b^m)$ $O(b^l)$ $O(b^d)$ $O(b^{d/2})$   空间复杂度 $O(b^d)$ $O(n^{1+\frac{C^*}{\epsilon}})$ $O(bm)$ $O(bl)$ $O(bd)$ $O(b^{d/2})$    启发式搜索  a heuristic is a robust technique for the design of randomized algorithms for Optimziation Problems  not able to guarantee the efficiency and the qulity of the computed feasible solution   评价函数: $f(n)$ 已花费的代价：$g(n)$ 启发函数：$h(n)=$结点$n$到目标结点最小代价的估计值  贪婪优先搜索 $f(n)=h(n)$</description>
    </item>
    
    <item>
      <title>Postulates of Quantum Mechanics</title>
      <link>https://zhengzangw.com/notes/quantum-computation/postualates/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/postualates/</guid>
      <description>Postulates  Associated to any isolated physical system is a complex vector space with inner product known as state space of the system. The system is completely describled by its state vector/density operator, which is a unit vector in the systems state  state vector: $|\psi_i\rangle$ density operator: $\rho=\sum_ip_i|\psi_i\rangle\langle\psi_i|$   The evolution of a closed quantum system is described by a unitary transformation  $|\psi&#39;\rangle=U|\psi\rangle$ $\rho&#39;=U\rho U^\dagger$   Quantum measuerments are described by a collection ${M_m}$ of measurement operator ($m$ is number of possible outcome).</description>
    </item>
    
    <item>
      <title>2. Generating Functions</title>
      <link>https://zhengzangw.com/notes/combinatorics/2-generating-function/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/2-generating-function/</guid>
      <description>ordinary generating function(OGF) define by $a_n$: $G(x)=\sum_{n\geq0}a_nx^n$ coefficient: $[x^k]G(x)$ $\mathbb{C}[]$: ring of formal power series with complex coefficient Combination: 3 red, 4 blue, and 5 green  $(1+x+x^2+x^3)(1+x+x^2+x^3+x^4)(1+x+x^2+x^3+x^4+x^5)$ coefficient $x^k$ gives the number of way to select $k$ balls   Fibonacci number  $F_n=\frac{1}{\sqrt{5}}(\phi^n-\hat\phi^n),\phi=\frac{1+\sqrt{5}}{2},\hat\phi=\frac{1-\sqrt{5}}{2}$ $G(x)=\frac{x}{1-x-x^2}=\frac{x}{(1-\phi x)(1-\hat\phi x)}=\frac{\alpha}{1-\phi x}+\frac{\beta}{1-\hat\phi x}$   General Methodology  Give a recursion that computes $a_n$ Give the generating function and manipulate the right hand side of equation so that it becomes some other expression involving $G(x)$  shift: $x^kG(x)=\sum_{n\geq k}g_{n-k}x^n$ addition: $F(x)+G(x)=\sum_{n\geq 0}(f_n+g_n)x^n$ convolution: $F(x)G(X)=\sum_{n\geq 0}\sum_{k=0}^nf_kg_{n-k}x^n$ differentiation: $G&#39;(x)=\sum_{n\geq0}(n+1)g_{n+1}x^n$   Solve the resulting equation to derive an explicit formula for $G(x)$ Expand $G(x)$ into a power series and read off the coefficient of $x^n$  Taylor expansion: $G(x)=\sum_{n\geq 0}\frac{G^{(n)}(0)}{n!</description>
    </item>
    
    <item>
      <title>Spatial Domain</title>
      <link>https://zhengzangw.com/notes/digital-image-process/1-spatial-domain/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/1-spatial-domain/</guid>
      <description>像素关系  相邻像素  四邻域 四对角邻域 八邻域   定义邻接性的灰度值集合：$V$  二值/非二值 $V$ 可以把灰度级化成两个等价类   邻接性  4 邻接：$p\in N_4(p)$ 且 $p,q$ 的灰度值都属于 $V$ 8 邻接：$p\in N_8(p)$ 且 $p,q$ 的灰度值都属于 $V$ $m$ 邻接（混合邻接）：$p,q$ 的灰度值都属于 $V$  $q\in N_4(p)$ 或 $N_4(p)\wedge N_(q)$ 内无灰度值属于 $V$ 消除二义性     连通性：通路  起点终点相同：闭合通路 连通集/连通分量   区域：连通的像素子集 $R$  邻接区域：两个连通的区域 前景：$\bigcup R_k$ 背景：$(\bigcup R_k)^c$   边界：区域中与背景 8 连通的点的集合 边缘：导数值超过阈值的像素  局部 概念 二值图像：边界=边缘   距离  欧式 $D_r$ 曼哈顿距离 $D_4$ 棋盘距离 $D_8=\max(|x-s|,|y-t|)$    算术/逻辑/集合操作增强 主要以像素对像素为基础在两幅或多幅图像间进行</description>
    </item>
    
    <item>
      <title>2-数据模型</title>
      <link>https://zhengzangw.com/notes/database/2-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/2-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</guid>
      <description>数据模型的定义  数据模型：数据特征的抽象  数据结构（数据模式） 数据操作 数据约束   四个世界  现实世界 概念世界 信息世界 计算机世界    概念模型 实体联系模型(E-R)  实体(Entity)：实体名+实体型  实体集：具有共性的实体所构成的集合，实体集名+实体型+关键字 关键字：可用于区分同一个实体集中不同实体的 ‘最小属性集合’   属性(Attribute)：属性名+域  域：某一属性可取的值的集合 实体型：所有属性的属性名 实体值：所有属性上的取值所构成的属性值的集合 具有共性的实体：实体型相同的实体   联系：联系名+属性+函数对应关系  1:1, 1:m, m:n 二元联系，多元联系，单个实体集内部联系   E-R 图  实体集：长方形 属性：椭圆 联系：菱形 连接：无向线段  实体集与属性 联系与属性 实体集与联系     E-R 模型设计  实体 or 属性 实体 or 联系 二元 or 三元 Event 可抽象为实体    EE-R  IS-A 联系：超集-子集关系，单向箭头  继承性，传递性 覆盖约束  所有子实体集的并集等价于超实体集 一个实体至少隶属于某一个子实体集   不相交约束  任意两个子实体集都是互不相交的 一个实体至多隶属于某一个子实体集     Weak Entity：需要依赖其它实体而存在的实体  多对一关系：弱实体到联系有向箭头   属性划分  Identifier/key/candidate key Descriptor composite attribute：属性到属性无向线段 multi-value attribute：双实线   属性基数 $(x,y)$  $x$: 是否必选 1/0 $y$: 是否单值 1/N   实体在联系中的参与基数 card=(min-card, max-card)  min-card 1/0: 1 if all dots in the entity E have AT LEAST one line coming out  1: mandatory participation 0: optional participation   max-card 1/N: 1 if all dots in the entity E have AT MOST one line coming out  1: single-valued N: multi-valued      面向对象模型(OO)  对象(Object)  OID 对象标识符 静态特性/属性  多值   动态特性/方法/操作   类  具有相同属性方法的对象集合 类对象 元类：所有类对象的集合 实例：类中的对象 IS-A, IS-PART-OF   消息：Type A.</description>
    </item>
    
    <item>
      <title>Linear Model</title>
      <link>https://zhengzangw.com/notes/machine-learning/2-linearmodel/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/2-linearmodel/</guid>
      <description>多元线性回归  $f(x)=\omega^Tx+b$ 决策平面：$f(x;\omega)=0$  有向距离：$\gamma=\frac{f(x;\omega)}{|\omega|}$   最小二乘法  $\hat\omega^*=\arg\min_{\hat\omega}(y-X\hat\omega)^T(y-X\hat\omega)=(X^TX)^{-1}X^Ty$   广义线性模型：$y=g^{-1}(w^Tx+b)$  对数几率回归  单位跃阶函数（Heaviside function): 理想但不连续  $$y=\begin{cases}0,&amp;amp; z&amp;lt;0\newline 0.5,&amp;amp; z=0\newline 1,&amp;amp;z&amp;gt;0\end{cases}$$
 对数几率函数 (logistic function/Sigmoid function)  $g=\ln\frac{y}{1-y}$  几率：$\frac{y}{1-y}$，反映了 $x$ 作为正例的相对可能性   $g^{-1}=S(x)=\frac{1}{1+e^{-x}}$  $S(x)&#39;=S(x)(1-S(x))$     对数几率回归：用线性模型逼近真实标记的几率  $\ln\frac{p_1}{p_0}=\hat x\beta=(x,1)(\omega; b)$  二分类：$y_ia+(1-y_i)b=a^{y_i}b^{1-y_i}$   Maxmimum likelihood method  $l(\beta)=\sum_{i=1}^m\ln p(y_i|x_i;\beta_i)=\sum_{i=1}^my_i\ln (g(\hat x_i\beta)+(1-y_i)\ln (1-g(\hat x_i\beta)))$ $l&#39;=\sum_{i=1}^m(y_i-g(\hat x_i\beta))\hat x_i^T=X^T(Y-g(\beta^TX))$ $l&#39;&#39;=\sum_{i=1}^m\hat x_i\hat x_i^Tp_1(\hat x_i;\beta)(1-p_1(\hat x_i;\beta))$   交叉熵作损失函数梯度下降   梯度下降：$\theta_{t+1}=\theta_{t}-\alpha\frac{\partial L}{\partial \theta}$  Softmax 回归  $p(y=c|x)=\text{softmax}(\omega_c^Tx)=\frac{\exp(\omega_c^Tx)}{\sum_{c&#39;=1}^C\exp(\omega_{c&#39;}^Tx)}=\frac{\exp(W^Tx)}{1_C^T\exp(W^Tx)}$  LDA  给定训练集数据，设法将样例投影到一条直线上，使得同类样例投影点尽可能接近，异类投影点尽可能远离 协方差矩阵：$\Sigma=\frac{1}{n-1}(X-\mu I)(X-\mu I)^T$  $\Sigma_{ij}=\sigma(x_i,x_j)$ 投影后：$\omega^T\Sigma\omega$        两类 一般     Within-class scatter matrix $S_\omega=\Sigma_0+\Sigma_1$ $S_w=\sum_{i=1}^N\Sigma_i$   Between-class scatter maxtrix $S_b=(\mu_0-\mu_1)(\mu_0-\mu_1)^T$ $S_b=\sum_{i=1}^{N}m_i(\mu_i-\mu)(\mu_i-\mu)^Y$   全局散度矩阵 $S_t=S_b+S_w$ $\sum_{i=1}^m(x_i-\mu)(x_i-\mu)^T$   优化目标 $\max_\omega\frac{\omega^TS_b\omega}{\omega^TS_w\omega}$ $\max_W\frac{tr(W^TS_bW)}{tr(W^TS_wW)}$   闭式解 $w=S_w^{-1}(\mu_0-\mu_1)$ $S_w^{-1}S_b$ 前 $k$ 大广义特征向量    </description>
    </item>
    
    <item>
      <title>First Order Logic (FOL)</title>
      <link>https://zhengzangw.com/notes/mathematic-logic/first-order-logic/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/mathematic-logic/first-order-logic/</guid>
      <description>语言  字母表  逻辑符集合  变元集 $V$ 联结词、辅助词、(等词) 量词 $\forall,\exists$   非逻辑符集合 $\mathscr{L}$  常元集合 $\mathscr{L}_c$ 函数集合 $\mathscr{L}_f$, $\mu(f)&amp;gt;0$ 为 $f$ 的元数 谓词集合 $\mathscr{L}_P$, $\mu(P)\geq0$ 为 $f$ 的元数     项 $T$：变元符 $\cup$ 常元符 $\cup f(v_1,\cdots)$  自由变元  $\text{\text{FV}}(x)={x}$, $\text{\text{FV}}(c)={}$ $\text{\text{FV}}(f(t_1,\cdots))=\bigcup_{i=1}^n\text{\text{FV}}(t_i)$   闭项：$\text{\text{FV}}(t)=\emptyset$ 替换：$s[\frac{t}{x}]$   公式 $\Psi$：${t_1\doteq t_2}$ $\cup$ $P(t_1,\cdots)$ $\cup$ 公式在联结词、量词下的组合  自由变元  $\text{\text{FV}}(t_1\doteq t_2)=\text{\text{FV}}(t_1)\cup\text{\text{FV}}t_2$ $\text{\text{FV}}(P(t_1,\cdots))=\bigcup_{i=1}^n\text{\text{FV}}(t_i)$ 联结词取并 $\text{\text{FV}}(Qx.A)=\text{FV}(A)\backslash{x}$   句子：$\text{\text{FV}}(A)=\emptyset$ 替换：$A[\frac{t}{x}]$  $(Qx.</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>https://zhengzangw.com/notes/web-develop/javascript/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/web-develop/javascript/</guid>
      <description>&lt;h1 id=&#34;basic-knowledge&#34;&gt;Basic Knowledge&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;数据类型
&lt;ul&gt;
&lt;li&gt;number
&lt;ul&gt;
&lt;li&gt;isInteger&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;string
&lt;ul&gt;
&lt;li&gt;.length&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;boolean&lt;/li&gt;
&lt;li&gt;object
&lt;ul&gt;
&lt;li&gt;Object.freeze()&lt;/li&gt;
&lt;li&gt;get&lt;/li&gt;
&lt;li&gt;set&lt;/li&gt;
&lt;li&gt;construct&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;array
&lt;ul&gt;
&lt;li&gt;filter(item, index, array)&lt;/li&gt;
&lt;li&gt;map&lt;/li&gt;
&lt;li&gt;spread operator: &amp;hellip; return comma seperated array&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;symbol&lt;/li&gt;
&lt;li&gt;undefined&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;未声明的变量使用时自动在全局定义&lt;/li&gt;
&lt;li&gt;===, !==&lt;/li&gt;
&lt;li&gt;let : 不能多次声明
&lt;ul&gt;
&lt;li&gt;When you declare a variable with the let keyword inside a block, statement, or expression, its scope is limited to that block, statement, or expression&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;ldquo;use strict&amp;rdquo;; : 必须声明&lt;/li&gt;
&lt;li&gt;const : read-only
&lt;ul&gt;
&lt;li&gt;objects (including arrays and functions) assigned to a variable using const are still mutable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Anonymous Functions: arrow function syntax
&lt;ul&gt;
&lt;li&gt;function() {}&lt;/li&gt;
&lt;li&gt;() =&amp;gt; {}&lt;/li&gt;
&lt;li&gt;() =&amp;gt; &amp;ldquo;value&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;require&lt;/li&gt;
&lt;li&gt;import&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>2-随机变量及其概率分布</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/2-%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/2-%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F/</guid>
      <description>随机变量：定义在样本空间上的函数 $X=X(e),e\in\Omega$ 分布函数：$F(x)=P(X\leq x) (-\infty&amp;lt;x&amp;lt;\infty)$  单调不减 $F(x)=F(x+0)$ $0\leq F(x)\leq 1$ $F(-\infty)=0$ $F(\infty)=1$ $P(a&amp;lt;X\leq b)=F(b)-F(a)$   离散随机变量  0-1 分布 二项分布：$X\sim B(n,p)$  $P(X=k)=C_n^kp^kq^{n-k}$ 最大值  $(n+1)p\in \mathbb{Z}$ 则 $k=(n+1)p-1/(n+1)p$ $(n+1)p\not\in\mathbb{Z}$ 则 $k=[(n+1)p]$   $E(X)=np$ $D(X)=np(1-p)$   泊松分布 $X\sim P(\lambda)$  $P(X=k)=\frac{\lambda^k}{k!}e^{-\lambda}$ $E(X)=\lambda$ $D(X)=\lambda$ 泊松分布可加性 $X\sim P(a),Y\sim P(b),X+Y\sim P(a+b)$   几何分布 $X\sim g(p)$  $p_k=P(X=k)=(1-p)^{k-1}p$ $E(X)=\frac{1}{p}$ $D(X)=\frac{1-p}{p^2}$   超几何分布 $X\sim H(n,M,N)$  合格率：$p=\frac{M}{N}$ $P(X=k)=\frac{C_M^kC_{N-M}^{n-k}}{C_N^n}$ $\lim_{N\rightarrow\infty}\frac{M}{N}=p$, $\lim_{N\rightarrow\infty}\frac{C^k_MC^{n-k}_{N-M}}{C^n_N}=C_n^kp^k(1-p)^{n-k}$     连续性随机变量  $F(x)=\int_{-\infty}^xp(x)dt$  $p(x)\geq0$ $\int_{-\infty}^\infty=1$   均匀分布： $p(x)=\frac{1}{b-a} (a&amp;lt;x&amp;lt;b)$, $X\sim U[a,b]$  $D(X)=\frac{(b-a)^2}{12}$   指数分布： $p(x)=\lambda e^{-\lambda x} (x\geq0)$, $X\sim E(\lambda)$  $E(X)=\frac{1}{\lambda}$ $D(X)=\lambda^{-2}$   $\Gamma$ 分布 $X\sim G(\lambda,r)$  $p(x)=\frac{\lambda^{r}}{\Gamma(r)}x^{r-1}e^{-\lambda x}$ $E(X)=\frac{r}{\lambda}$ $D(X)=r\lambda^{-2}$   正态分布： $p(x)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}}$, $X\sim N(\mu,\sigma^2)$  $x=\mu,p(x)=\frac{1}{\sqrt{2\pi}\sigma}$ 拐点 $x=\mu\pm\sigma$ 标准正态分布密度函数 $\phi(x)$, 分布函数 $\Phi(x)$  $\Phi(-x)=1-\Phi(x)$ $\alpha$ 分位点 $u_{\alpha}$: $P(X&amp;gt;u_\alpha)=\alpha$ 即 $\Phi(u_\alpha)=1-\alpha$   $Z=\frac{X-\mu}{\sigma}\sim N(0,1)$  $P(a\leq X\leq b)=\Phi(\frac{b-\mu}{\sigma})-\Phi(\frac{a-\mu}{\sigma})$   $3\sigma$ 原理：超出这个范围的可能性小于 $0.</description>
    </item>
    
    <item>
      <title>外国民歌</title>
      <link>https://zhengzangw.com/notes/music-review/%E5%A4%96%E5%9B%BD%E6%B0%91%E6%AD%8C/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/music-review/%E5%A4%96%E5%9B%BD%E6%B0%91%E6%AD%8C/</guid>
      <description>第五课  外国民歌  朝鲜民歌 《阿里郎》《小白船》 日本民歌  盂兰盆节（中元节，鬼节） 拉网小调 樱花   印度尼西亚 100多民族  星星索 哎哟妈妈   土耳其民歌  厄尔嘎兹   缅甸民歌  海鸥   意大利  我的太阳 重归苏莲托 桑塔露琪亚 好朋友   英国  夏日最后的玫瑰 友谊天长地久（离歌）      第六课  德国 俄罗斯  三套车 伏尔加船夫曲 德涅泊尔   南斯拉夫（-2003） 斯洛伐克民歌  牧童   美国  铃儿响铃铛 克里门泰因 红河谷   巴西 古巴  鸽子    歌剧  哈巴涅拉 我亲爱的爸爸 斗牛士之歌  </description>
    </item>
    
    <item>
      <title>数据传输理论</title>
      <link>https://zhengzangw.com/notes/data-communication/1-%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%90%86%E8%AE%BA/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/1-%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%90%86%E8%AE%BA/</guid>
      <description>数据：传达某种意义或信息的实体  模拟数据：连续的值 数字数据：离散的值   信号：数据的电气或电磁表示方式  模拟信号：连续变化的电磁波 数字信号：电压脉冲序列，在导向媒体传输  大规模集成电路 数据完整性好 容量利用率高 安全保密 易于储存      傅里叶分析  正弦波：$s(t)=A\sin(2\pi ft+\phi)$  波长：$\lambda=vT$   周期信号的傅里叶级数：$x(t)=\frac{A_0}{2}+\sum_{n=1}^\infty[A_n\cos(2\pi nf_0t)+B_n\sin(2\pi nf_0t)]$  直流分量：$A_0=\frac{2}{T}\int_0^Tx(t)dt$ 基频：$f_0=\frac{1}{T}$ 谐频：$kf_0$ $A_n=\frac{2}{T}\int^T_0x(t)\cos(2\pi nf_0t)dt$ $B_n=\frac{2}{T}\int^T_0x(t)\sin(2\pi nf_0t)dt$ $P=\frac{1}{4}A_0^2+\frac{1}{2}\sum(A_i^2+B_i^2)$   方波信号：$s(t)=\frac{4A}{\pi}\sum_{2\not\vert k}\frac{\sin(2\pi kft)}{k}$ 频谱 spectrum: 所包含的频率范围 绝对带宽 absolute bandwidth: 频谱的宽度 有效带宽(3dB带宽)：绝大部分能量集中的相当窄的频带范围 $f_1-f_0$ 数据率：单位时间内在数据传输系统设备之间传送的比特数 $R_b=\frac{1}{T_b}=\frac{2}{T}$  $T_b$：发送1比特的时间 其它项不变，带宽加倍数据率加倍 给定带宽可以根据接收器在噪声和其它损伤的情况下鉴别能力来支持不同的数据率   误码率  传输损伤 衰减 (attenuation)  强度衰减  放大器（模拟） amplifier 转发器（数字） repeater   衰减失真（模拟）  频率越高，衰减越严重（传输损耗越大，覆盖范围越小，绕射能力越弱，但高频资源丰富） 衰减均衡技术 放大器：放大高频倍数更高    失真 (distortion)  衰减失真 时延失真  靠近中心频率的地方其传播速度趋于最快 码间串扰（数字）    噪声 (noise) 噪声是传输系统性能的主要制约因素</description>
    </item>
    
    <item>
      <title>媒体类型</title>
      <link>https://zhengzangw.com/notes/multimedia/2-multimedia/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/multimedia/2-multimedia/</guid>
      <description>数字音频  声音文件  CD: 业界标准 WAV: 储存 MID, RMI: 合成音乐 MP3: 着重压缩 ra, rm, rmvb, WMA: 网络传输   电脑音乐创作  编曲 -&amp;gt; 合成 -&amp;gt; 后期制作 CakeWalk, Vegas Audio, CoolEdit, Auto Score 语音合成引擎 VOCALOID 2 打谱软件 Overture   媒体关联  文本-语音转换 声音可视化   声音信号  听觉 20~20000 Hz 发出 80~3400 Hz 话音信号 300~3000 Hz 听阈：声音弱到刚好能听到（频率相关） 痛阈（频率相关）        基音域 泛音域 伴随噪声域     钢琴 27.</description>
    </item>
    
    <item>
      <title>插值法</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/2-%E6%8F%92%E5%80%BC%E6%B3%95/</link>
      <pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/2-%E6%8F%92%E5%80%BC%E6%B3%95/</guid>
      <description>研究背景  函数表示法  解析式表示法 图像法 表格法   插值法：用简单函数为各种离散数组建立连续模型 多项式插值问题  精确函数 $y=f(x)$ 非常复杂或未知，在节点 $x_0,\cdots,x_n$ 处测得函数值 $y_i=f(x_i)$ 构造 $p(x)\approx f(x)$ 满足条件 $p(x_i)=f(x_i) (i=0,\cdots,n)$ $p(x)$ 为 $f(x)$ 的插值函数  代数多项式：Weierstrass 定理 三角多项式 有理分式     最佳逼近多项式  $|f|{\infty}=\max{a\leq x\leq b}|f(x)|$ $|f|_1 = \int_a^b|f(x)|dx$ $|f|_2 = (\int_a^b|f^2(x)|dx)^{\frac{1}{2}}$ $(f(x),g(x))=\int_a^b\rho(x)f(x)g(x)dx$, $\rho(x)$ 为给定的权函数 $\Pi_n$：次数不超过 $n$ 的多项式集合 最佳一致逼近多项式：$\overline{p}n(x)$：$|f(x)-\overline{p}n(x)|\infty=\min{p_n(x)\in\Pi_n}|f(x)-p_n(x)|_\infty$ 最佳平方逼近多项式：$|f(x)-\overline{p}_n(x)|2^2=\min{p_n(x)\in\Pi_n}|f(x)-p_n(x)|_2^2$   研究问题  唯一性 构造方法 误差估计    Lagrange Polynomial   求 $n$ 次多项式</description>
    </item>
    
    <item>
      <title>Operation Overloading</title>
      <link>https://zhengzangw.com/notes/advanced-programming/2-operation-overloading/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/2-operation-overloading/</guid>
      <description>操作符重载   只能重载 C++语言中已有的操作符
 不可臆造新的操作符 不能改变操作数个数 不改变原操作符的优先级和结合性    可以重载 C++中除下列操作符外的所有操作符：. .* ?: :: sizeof
  重载方法
 类的非静态成员函数  class Complex { public: Complex operator + (const Complex &amp;amp;x) const{ Complex temp; temp.real = real + x.real; temp.imag = imag + x.imag; return temp; } };  全局函数  class Complex { friend Complex operator +(const Complex &amp;amp;c1, const Complex &amp;amp;c2); }; Complex operator + (const Complex &amp;amp;c1, const Complex &amp;amp;c2){ Complex temp; temp.</description>
    </item>
    
    <item>
      <title>群论</title>
      <link>https://zhengzangw.com/notes/modern-algebra/group/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/modern-algebra/group/</guid>
      <description>群作用的基本概念  群 $G$ 在集合 $X$（$G$-集） 上的（左）作用$\circ$： $G$ 为群， $X$ 为非空集合，若 $\forall g\in G, x\in X, !\exists g\circ x\in X$ 且  $\forall x\in X(e\circ x=x)$ $g_1\circ(g_2\circ x) = (g_1g_2) \circ x$   定理：$G$ 在 $X$ 上的群作用与 $G$ 到 $S(X)$ 的同态构成双射 轨道：$O_x=Gx={g\circ x:g\in G}$，是 $X$ 上的等价类  $X/G={O_x|x\in G}$ 若$O_x=X$，则 $G$ 在 $X$ 上可迁 $X=\bigsqcup O_x$   稳定化子(stabilizers)：$G_x=\text{stab}(x)={g\in G: g\circ x=x}\leqslant G$  $[G:G_x]=|O_x|$   作用核：$\text{ker}(X)=\cap_{x\in X}G_x={g\in G:\forall x\in X, g\circ x=x}$  $\text{ker}(X)\trianglelefteq G$ 且 $G/\text{ker}(X)$ 可嵌入到 $S(X)$ 中   $g$-不动点(invariant set)：$X_g=\text{fix}(g)={x\in X:g\circ x=x}$ 不动点：$\text{fix}(G)=\cap_{g\in G}X_g={x\in X: \forall g\in G(g\circ x=x)}$ Burnside引理: $|X/G|=\frac{1}{|G|}\sum_{g\in G}|X_g|$ 定理：非不动点个数可表达成 $|G|$ 的一些素因子相加（可重复） $|O_x|=1\iff x\in \text{fix}(G)$  Pólya Theory of Counting  $M_\pi(x_1,x_2,\cdots,x_n)=\prod_{i=1}^k x_{l_i}$ cycle index of $G$: $P_G(x_1,x_2,\cdots,x_n) = \frac{1}{|G|}\sum_{\pi\in G}M_\pi(x_1,x_2,\cdots,x_n)$ pattern inventory: $F_G(y_1,y_2,\cdots,y_m)=\sum_{v}a_vy_1^{n_1}y_2^{n_2}\cdots y_m^{n_m}$  $v=(n_1,n_2,\cdots,n_m),\sum_{i=1}^m = n$   Pólya&amp;rsquo;s enumeration formula: $F_G(y_1,y_2,\cdots,y_m)=P_G(\sum_{i=1}^my_i,\sum_{i=1}^my_i^2,\cdots,\sum_{i=1}^my_i^n)$  $p$群与 Sylow 定理  $p$群：$p^\alpha$阶群 定理：  $p$群作用在$X$上，则$|X|\equiv|Fix(G)| (\bmod p)$  $p\not|\ |X|$, 则必有不动点   $p$群中心$Z(G)$有非单位元 $p^2$阶群为$Abel$ 群   $ord_p(a)=n$：$p^n\ ||\ a$ Sylow $p$子群：$|H| = p^{ord_p|G|}$ $G$ 必有$p(p\ |\ |G|)$阶元 Sylow 定理：  Sylow 第一定理（存在性）：$G$ 必有Sylow $p$子群 Sylow 第二定理（关系）：$H$为有限群 $G$ 的一个Sylow $p$子群，则 $G$ 的任一个 $p$子群 $K$ 都被包含在某个与 $H$ 共轭的子群中  ${G$ 的Sylow $p$子群$}={aHa^{-1}:a\in G}$ $p$为有限群 $G$ 的 Sylow $p$子群，则 $p\trianglelefteq G\iff p$是唯一的 Sylow $p$子群 (Fratinni) $H$ 是群 $G$ 的有穷正规子群，$P$是 $H$ 的 Sylow $p$-子群，则 $G=HN_G(P)$   Sylow 第三定理（数量）：$|G|=p^\alpha m$，则  $n_p|m$ $n_p\equiv 1(\bmod p)$ $n_p=[G:N_G(H)],H$为任一Sylow $p$子群      群作用的例子  $G$ 为群，$H$ 为子群。$h\in H,x\in X=G$, $h\circ x=hx$  $O_x=Hx$，轨道分解即为右陪集分解 $stab(x)={e}$ $|Hx|=|O_x|=[H:stab_x]=|H|$   $X=G, \forall g\in G,x \in X, g\circ x=gxg^{-1}$  $O_x=C(x)$ 为 $x$ 所在的共轭类 $stab(x)=C_G(x)={g\in X: gx=xg}$ 为中心化子 $ker(X)=Z(X)$ 为中心 $G/Z(G)\cong Inn(G)$ 可嵌入 $S(G)$ 中   $H\leqslant G,X=G/H$（所有左陪集）$g\circ (xH)=gxH$  $O_x=X$ $stab(x)=xHx^{-1}$ $[G:xHx^{-1}]=|X|=[G:H]$ $ker(X)=H_G$ 为 $H$ 在 $G$ 中的正规核 $G/H_G$ 可嵌入 $S(G/H)$  $[G:H][H:H_G] = |G/H_G|\ |\ |S(G/H)|=[G:H]!</description>
    </item>
    
    <item>
      <title>2. Shell Script</title>
      <link>https://zhengzangw.com/notes/command-line/2-shell-script/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/2-shell-script/</guid>
      <description>内建命令 man builtin source ~/.zshrc read -p &amp;#34;Enter some information &amp;gt; &amp;#34; name url age cd 变量 字母数字及下划线组成，并且变量名的第一个字符不能为数字 赋值时，变量和等号之间不要有空格，等号和值之间也不要有空格，否则 shell 不会认为变量被定义
echo $(ls) # output -&amp;gt; string echo `ls` # output -&amp;gt; string diff &amp;lt;(ls) &amp;lt;(ls ..) # output -&amp;gt; tmp file # declare declare -r a # 只读 local a # 局部变量 declare -i a=5 # 对数字声明 declare -a arr=(a b c) # 对数字声明 # 函数 -f declare -x # 通过环境输出变量 #- 开启 + 关闭 # Variable foo=bar # No space a=5 # same to a=&amp;#39;5&amp;#39; a=$b+$c # 存在 + 号的字符串 url=https://zhengzangw.</description>
    </item>
    
    <item>
      <title>2. Application Layer</title>
      <link>https://zhengzangw.com/notes/conputer-network/2-application-layer/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/2-application-layer/</guid>
      <description>可供使用的运输服务  可靠数据传输/容忍丢失 吞吐量 定时 安全性  HTTP HyperText Transfer Protocol
端口 80/8080/3128/8081/9080, TCP
   术语      无状态 每个事务都独立进行   用户代理进程 发起请求的客户进程   源服务器 期望得到资源的所在服务器（如Web服务器）   代理服务器（Web 缓存） 转发的代理：安全中介，不同版本的HTTP   网关 安全中介，非HTTP服务器   隧道    非持续连接 每个请求/响应单独发送   持续连接 单独 TCP 连接    请求报文 GET /somedir/page.html HTTP/1.1 Host: www.someschool.edu Connection: close User-agent: Mozilla/5.0 Accept-language: fr [Entity-Body] 请求行(get, head, post, delete, put)</description>
    </item>
    
    <item>
      <title>2. Space-saving</title>
      <link>https://zhengzangw.com/notes/advanced-algorithm/2-space-saving/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-algorithm/2-space-saving/</guid>
      <description>Problems  Checking Identity  $\text{EQ}(a,b)=[a=b]$ (bit-string $x\in{0,1}^n$) Communication cost   checking distinctness  Input: $A,B\in{1,2,\cdots,n}$ Determine whether $A=B$(multiset equivalence)   counting distinct elements  Data: Stream Model, $n$ is unknown and elements is presented one at a time Input: a sequence $x_1,x_2,\cdots,x_n\in\Omega$ Output: an estimation of $z=|{x_1,x_2,\cdots,x_n}|$   Set Membership  Data: a set of elements $x_1,\cdots,x_n\in\Omega$ Input: $x\in\Omega$ Output: $[x\in\Omega]$   Frequency Estimation  Data: a sequence of elements $x_1,\cdots,x_n\in\Omega$ Input: $x\in\Omega$ Output: $f_x=|{i|x_i=x}$|    Fingerprint  use Fingerprint to design One-sided-error Monte Carlo algorithm  $\text{FING}(\cdot)$: function easy to compute and compare $X=Y,\text{FING}(X)=\text{FING}(Y)$ $X\not=Y,P(\text{FING}(X)=\text{FING}(Y))$ is small    Communication Protocol  Theorem (Yao 1979): Any deterministic communication protocol computing EQ on two $n$-bit strings costs $n$ bits of communication in the worst-case.</description>
    </item>
    
    <item>
      <title>2-矩阵</title>
      <link>https://zhengzangw.com/notes/linear-algebra/2-%E7%9F%A9%E9%98%B5/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/linear-algebra/2-%E7%9F%A9%E9%98%B5/</guid>
      <description>矩阵运算  可逆：$AB=BA=I$  求矩阵的逆  $[A|I]\rightarrow[I|A^{-1}]$ 有零行，不可逆     trace: $tr(A)=\sum_{i=1}^na_{ii}$  行列变换  分块矩阵 初等行列变换  初等阵  $P(i,j)$ $P(j,i(k))$ $P(i(k))$   对 A 作 k 个初等变换得到 B  $B=AQ_1Q_2\cdots Q_k$      秩  行秩=列秩 $rank(A_{m*n})\leq min(m,n)$ $rank(PA)\leq rank(A)$ 取等 if P 可逆 $rank(AQ)\leq rank(A)$ 取等 if Q 可逆 求秩: 高斯消元 可逆$\Leftrightarrow$满秩 线性方程组可解$\Leftrightarrow$$rank(A)=rank([A|b])$ $null(A) = dimH$ $rank(A) + null(A) = n$ 子阵：A 的某$k$行与某$l$列的交点，得$k*l$子阵  若$rank(A)\geq k$,则$\exist B$为$A$的 k 阶子方阵且$B$可逆 若$rank(A)&amp;lt;l$,则$\forall B$为$A$的 l 阶子方阵且$B$不可逆    行列式   排列</description>
    </item>
    
    <item>
      <title>Thermal Physics</title>
      <link>https://zhengzangw.com/notes/physics/physics-thermal/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/physics/physics-thermal/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《大学物理》卢德鑫
NJU: University Physics I - 卢德鑫&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;temperature&#34;&gt;Temperature&lt;/h1&gt;
&lt;h2 id=&#34;basic-concept&#34;&gt;Basic Concept&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;phase: homogeneous part of system&lt;/li&gt;
&lt;li&gt;equilibrium state: a state of a system in which macroscopic variables have definite values that remain constant as long as the external conditions are unchanged&lt;/li&gt;
&lt;li&gt;relaxation time: $\tau$, the time system needs to adjust itself to follow the change of the surrounding.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Chapter 2</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/chapter2/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/chapter2/</guid>
      <description> 进制转换 定点表示  机器数：编码后的表示 真值 原码表示 补码表示：$X_c=(M+X)\pmod M$  -：取反加一（与数据类型无关）  -2147483648 : 0x80000000     反码表示 移码：表示浮点数   浮点表示  $X=(-1)^SMR^E$  $M$: mantissa $E$: exponent $R$: radix   IEEE 754  FLOAT: 1+8+23 DOUBLE: 1+11+52 Intel FPU: 1+15+(1)+63 偏置常数 B: $2^{n-1}-1$ 分类  0: -0/+0 非规格化数：$(-1)^s * 0.f *(1-B)$ 全1阶码全0尾数：$\infty$ 全1阶码非全0尾数：NaN（分静止的和通知的）  最高有效位为1：静止的   规格化数：$(-1)^s1.f2^{e-B}$       浮点运算的舍入  右规时，直接截断 IEEE754 至少两位附加位（guard,round,sticky） 就近舍入到偶数   整数表示  有符号: $-2^{n-1}\sim(2^{n-1}-1)$ 整数常量（无后缀）  C90 : int - $*$ - unsigned long int C99 : int - $*$ - long long int     BCD码 数据宽度  字长 word size：指明指针数据的标称大小（决定虚拟地址空间最大大小） KMGTPEZY 小端：MSB在大地址中 #pragma pack(n) 设置对齐方式 __attribute__((n)) 设置单独的对齐方式，大于n的数据结构按n对齐    </description>
    </item>
    
    <item>
      <title>2-软件过程模型</title>
      <link>https://zhengzangw.com/notes/software-enginerring/2-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/2-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B/</guid>
      <description>经典软件工程方法 问题定义 -&amp;gt; 需求 -&amp;gt; 分析 -&amp;gt; 设计 -&amp;gt; 编码 -&amp;gt; 测试 -&amp;gt; 维护
software process  the way we produce software, 以人为主体  evolution model waterfall model Iterative-and-incremental Process Models    waterfall model evolution-tree life-cycle model at the end of each episode we have a baseline: a complete set of artifacts
artifact: a constituent component of a software product
Iterative-and-incremental Process Models  Incrementation(增量): 指对于产品的功能上、模块上的增加 Iteration(迭代): 指增量部分仍然使用相同的流程来开发  generic process framework  framework activities  Communication Planning Modeling Construction Deployment   umbrella activities：普适性活动，是所有框架性活动都会涉及到的  project tracking and control risk management quality assurance configuration management technical reviews    software life-cycle model  a description of the steps that should be performed when building a software product，从软件自身来看 core workflows in life-cycles  Requirements workflow Analysis workflow Design workflow Implementation workflow Test workflow    Code-and-Fix life-cycle model waterfall life-cycle model or classic life cycle</description>
    </item>
    
    <item>
      <title>勒贝格积分</title>
      <link>https://zhengzangw.com/notes/real-function-theory/%E5%8B%92%E8%B4%9D%E6%A0%BC%E7%A7%AF%E5%88%86/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/real-function-theory/%E5%8B%92%E8%B4%9D%E6%A0%BC%E7%A7%AF%E5%88%86/</guid>
      <description>非负简单函数的 Lebesgue 积分  简单函数：$f(x)=\sum_{i=1}^sc_iX_{E_i}(x), c_i\geq 0$ def. $\int_E f(x)dx=\sum_{i=1}^sc_im(E_i)$ $\int_{A\cup B}f(x)dx=\int_Af(x)dx+\int_Bf(x)dx$ ${A_n}{n=1}^{\infty}$ 为 $E$ 一列可测子集，$A_1\subset A_2\subset\cdots$，$E=\sum{n=1}^\infty A_n=\lim_{n\rightarrow \infty} A_n$，则 $\int_{\lim_{n\rightarrow A_n}}f(x)dx=\lim_{n\rightarrow\infty}\int_{A_n}f(x)dx$ 线性：$\int_E(\alpha f(x)+\beta g(x)) dx = \alpha\int_E f(x)dx+\beta\int_E g(x)dx$  非负可测函数的 Lebesgue 积分  def. $\int_Ef(x)=\sup{\int_E\varphi(x)dx,\varphi(x)\leq f(x)},\varphi$ 为非负简单函数 $f(x)\leq g(x),\int_E f(x)dx\leq\int_E g(x)dx$ def. 勒贝格可积（L-可积）:$\int_Ef(x)&amp;lt;+\infty$ L-可积则 $m(E(f=+\infty))=0$ $\int_{A\cup B}f(x)dx=\int_Af(x)dx+\int_Bf(x)dx$ 线性 Levi 单调性定理：${f_n}$ 递增，$x\in E,\forall n,f_n(x)\leq f_{n+1}(x),\lim_{n\rightarrow+\infty}f_n(x)=f(x)$，则$\lim_{n\rightarrow}\int_Ef_n(x)=\int_Ef(x)dx$  逐项积分（无穷级数、积分交换）   Fatou 引理：$\int_S\underline{\lim_{n\rightarrow\infty}}f_nd\mu\leq\underline{\lim_{n\rightarrow\infty}}\int_Sf_nd\mu$ 零测集不影响积分  可测函数的 Lebesgue 积分  def. $f$ 可测且积分确定时，在 $E$ 上的 L-积分为 $\int_E f(x)dx=\int_E f^+(x)dx -\int_Ef^-(x)$  积分确定：$f^+,f^-$ 至少一个有限 L 可积：两个都有限 L(E)：L 可积函数全体   可数可加性：$E=\cup_{n=1}^{+\infty}E_n$ 不相交，$\int_Ef(x)=\sum_{n=1}^{\infty}\int_{E_n}f(x)dx$ $f\in L(E)\iff|f|\in L(E)$ 与 Riemann 积分不同 绝对连续性：$f\in L(E),\forall \epsilon&amp;gt;0,\exists\delta&amp;gt;0$，当 $m(A)&amp;lt;\delta$ 则 $|\int_Af(x)dx|\leq\int_A|f(x)|dx&amp;lt;\epsilon$ $g\in L(E),g\geq 0,|f|\leq g$ 则 $f\in L(E)$ 线性  控制收敛定理  非负 + 单调：Levi 单调性定理 非负，下极限的积分$\leq$积分的下极限：Fatou 引理 勒贝格控制收敛定理: ${f_n}$ 是 $E$ 上的可测函数，$\lim_{n\rightarrow\infty}f_n(x)=f(x)$ a.</description>
    </item>
    
    <item>
      <title>3. Entropy Rate</title>
      <link>https://zhengzangw.com/notes/information-theory/3-entropy-rate/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/information-theory/3-entropy-rate/</guid>
      <description>Stationary Process  stationary: $P(X_1=x_1,X_2=x_2,\cdots,X_n=x_n)=P(X_{1+l}=x_1,X_2=x_{2+l},\cdots,X_{n+l}=x_n)$  Gaussian process Stationary Markov Chain   Stationary Distribution of MC  $p(X_{n+1})=p(X_n)$ $p(x_{n+1})=\sum_{x_n}p(x_n)P_{x_nx_{n+1}}$ net probability flow across any cut set is zero    Entropy Rate  entropy rate of a stochastic process: $H(\mathcal{X})=\lim_{n\rightarrow\infty}\frac{1}{n}H(X_1,X_2,\cdots,X_n)$  $H(X_n,\cdots,X_1)=\sum_{i=1}^nH(X_i|X_{i-1},\cdots,X_1)$   (a) For a stationary stochastic process, $H(X_n|X_{n-1},\cdots,X_1)$ is nonincreasing and has a limit  $H&#39;(X)=\lim_{n\rightarrow\infty}H(X_n|X_{n-1},\cdots,X_1)$ exists   (b) Cesaro Mean: $a_n\rightarrow a,b_n=\frac{1}{n}\sum_{i=1}^na_i,b_n\rightarrow a$ For a stationary stochastic process, $H(\mathcal{X})=H&#39;(\mathcal{X})$ (a,b)  Markov Chain: $H(\mathcal{X})=H(X_2|X_1)=-\sum_{ij}\mu_iP_{ij}\log P_{ij}$   Some results  Second Law of Thermodynamics: model the isolated system as a Morkov chain with transitions obeying the physical laws governing the system $D(\mu_n|\mu_n&#39;)$ decreases with $n$ $H(X_n|X_1)$ increases Shuffles increase entropy: $H(TX)\geq H(X)$    Functions of Markov Chain  $X_1,\cdots,X_n,\cdots$ be a stationary Markov chain, $Y_i=\phi(X_i)$ $H(Y_n|Y_{n-1},\cdots,Y_1,X_1)\leq H(\mathcal{Y})\leq H(Y_n|Y_{n-1},\cdots,Y_1)$ $\lim H(Y_n|Y_{n-1},\cdots,Y_1,X_1)= H(\mathcal{Y})= \lim H(Y_n|Y_{n-1},\cdots,Y_1)$  </description>
    </item>
    
    <item>
      <title>News</title>
      <link>https://zhengzangw.com/about/news/</link>
      <pubDate>Mon, 07 Dec 2020 02:47:43 +0800</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/about/news/</guid>
      <description>[2022.11] Got one paper accepted to AAAI 2023. Thanks to all my collaborators! [2021.8] The NJU-CSE-Flyers Handbook 2021 has been published. [2021.7] Happy to start my intership in ByteDance. [2021.6] Graduated from Nanjing University！Thanks and good lucks to all my teachers and classmates. [2021.4] Got one first-authored paper accepted to ICMR&#39;21 Challenge. Thanks to all my collaborators. [2021.3] I will join HPC-AI @ NUS to start my Ph.D. degree under the supervision of Presidential Young Prof.</description>
    </item>
    
    <item>
      <title>3-CNN</title>
      <link>https://zhengzangw.com/notes/deep-learning/3-cnn/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/3-cnn/</guid>
      <description>卷积  卷积：$Y=W*X,y_{ij}=\sum_{u=1}^U\sum_{v=1}^V\omega_{uv}x_{i-u+1,j-v+1}$ 互相关：$Y=W\otimes X=\text{rot180}(W)*X$  $Y\in\mathbb{R}^{M-U+1,N-V+1}$ 深度学习中常用互相关代替卷积   卷积层输出长度（神经元数量）：$\frac{M-K+2P}{S}+1$  输入神经元 $M$ 步长 $S$ 卷积大小 $K$ 零填充：输入向量两端补 $P$ 个零   卷积分类  窄卷积：$S=1,P=0$ 宽卷积：$S=1,P=K-1,W\tilde\otimes X=W\otimes\tilde{X}$ 等宽卷积：$S=1,P=\frac{(K-1)}{2}$   卷积数学性质 $Y=W\otimes X$  $\text{rot180}(W)\tilde{\otimes}X=\text{rot180}(X)\tilde{\otimes}W$ $\frac{\partial f(Y)}{\partial W}=\frac{\partial f(Y)}{\partial Y}\otimes X$ $\frac{f(Y)}{\partial X}=\text{rot180}(W)\tilde{\otimes}\frac{\partial f(Y)}{\partial Y}$   其它卷积方式  转置卷积（反卷积）：从低维到高维的映射 微步卷积：$S&amp;lt;1$ 或在每两个向量元素间插入 $D$ 个 0，可得 $(D+1)\times(M-1)+K$ 维的向量 空洞卷积（卷积膨胀）：卷积核间增加空洞，增大感受野    CNN  FNN 处理图像信息  参数过多  $100\times100\times3$ 则第一隐藏层每个神经元有 $30000$ 参数 权重矩阵有 $M_l\times M_{l-1}$ 个参数   局部不变性特征   卷积层：$z^{(l)}=\omega^{(l)}\otimes a^{(l-1)}+b^{(l)}$  局部连接：卷积层中每个神经元只和前一层中某个局部窗口内的神经元相连构成局部连接网络 权重共享：$\omega^{(l)}$ 对所有神经元相同，一个卷积核只捕捉输入数据中的一种特定的局部特征 共 $K+1$ 个参数   卷积层  输入特征映射组：$\mathcal{X}\in\mathbb{R}^{M\times N\times D}$ 三维张量，切片 $X^d\in\mathbb{R}^{M\times N}$ 为一个输入特征映射 输出状态映射组：$\mathcal{Y}\in\mathbb{R}^{M&#39;\times N&#39;\times P}$ 三维张量，切片 $Y^p\in\mathbb{R}^{M&#39;\times N&#39;}$ 卷积核：$\mathcal{W}\in\mathbb{R}^{U\times V\times P\times D}$，切片 $W^{p,d}\in\mathbb{R}^{U\times V}$ 为一个二维卷积核 $Z^p=W^p\otimes X+b^p=\sum_{d=1}^DW^{p,d}\otimes X^d+b^p$ $Y^p=f(Z^p)$   汇聚层  最大汇聚：$y_{m,n}^d=\max_{i\in R_{m,n}^d}x_i$ 平均汇聚：$y_{m,n}^d=\frac{1}{|R_{m,n}^d|}\sum_{i\in R_{m,n}^d}x_i$   反向传播算法  $\delta^{(l,p)}=\frac{\partial L}{\partial Z^{(l,p)}}$ 汇聚层：$\delta^{(l,p)}=\frac{\partial L}{\partial Z^{(l,p)}}=f&#39;_l(Z^{(l,p)}\odot\text{up}(\delta^{(l+1,p)})$ 聚集层：$\delta^{(l,d)}=f&#39;l(Z^{(l,d)})\cdot\sum{P=1}^P(\text{rot180}(W^{(l+1,p,d)}\tilde\otimes\delta^{(l+1,p)}))$    Backbones  LeNet-5(1998)  连接表 输出层为 RBF 函数   AlexNet(2012)  GPU 训练 局部响应归一   Inception  Inception 模块：不同卷积核得到结果再深度上堆叠作为输出 Inception v1 (GoogLeNet, 2015) Inception v3 (2016)   ResNet  残差连接：$h(x)=x+(h(x)-x)$ ResNet-50   VGG  </description>
    </item>
    
    <item>
      <title>Association</title>
      <link>https://zhengzangw.com/notes/data-mining/3-association/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-mining/3-association/</guid>
      <description>Quantitative Discriminant Rule  general form: $\forall X,$target_class$(X)\Leftrightarrow$ contition$_1(X)[t:w_1,d:\omega_1]\vee\cdots\vee$ condition$_n(X)[t: w_n, d:\omega_n]$ Discriminant rule: sufficient condition of the target class  d-weight = $\frac{\text{count}(q_a\in C_{\text{target}})}{\sum_{i=1}^N\text{count}(q_a\in C_i)}$ d-weight: discriminability of each disjunct in the rule important   Characteristic rule: necessary condition  $\sum t_i=100%$    Association   Association rules: $A\Rightarrow B$[support, condifence]
  Support
$$\text{support}(A\Rightarrow B)=P(A,B)=\frac{\text{# of tuples includes }A,B}{\text{# of total tuples}}$$
  Confidence (t-weight)</description>
    </item>
    
    <item>
      <title>3-数据结构</title>
      <link>https://zhengzangw.com/notes/problem-solving/3-data-structure/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/3-data-structure/</guid>
      <description>Dynamic sets  operations  Search(S, k) Insert(S, x) Delete(S, x) Min/Max(S) Successor(S, x) Precessor(S, x)   data structure augmentation  choose an underlying data structure determine addtional information to maintain verify it can be maintained develop new operations    优先队列  operation  Insert(S, x) Max(S) extract_max(S) increase_key(S, x, k) not good for Search    线性数据结构  Stack Queue Linked list  堆  property  max-heap property: A[Parent(i)]$\geq$A[i]   procedure  max-heapify $O(\lg n)$ build-max-heap $O(n)$ max-heap-insert/extract/increase $O(\lg n)$    def max_heapify(A, i): # l, r are already max-heaps l = 2 * i r = 2 * i + 1 if l &amp;lt;= A.</description>
    </item>
    
    <item>
      <title>Interprocedural Analysis</title>
      <link>https://zhengzangw.com/notes/static-program-analysis/3-interprocedural-analysis/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/static-program-analysis/3-interprocedural-analysis/</guid>
      <description>Call Graph (CHA)  Call Graph Construction for OOPLs  Classic hierarchy analysis (CHA) Pointer analysis (k-CFA)   Dispatch(c, m) = m&#39; if c contains non-abstract method m&#39; that has the same name and descriptor as m  else = Dispatch(c&#39;, m), c&#39; is superclass of c   Resolve(a.foo())  virtual call: Dispatch self and subclass    Interprocedural Control-Flow Graph  ICFG: represents structure of the whole program  ICFG = CFGs + call &amp;amp; return edges node transfer + edge transfer    </description>
    </item>
    
    <item>
      <title>函数逼近与曲线拟合</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/3-%E5%87%BD%E6%95%B0%E9%80%BC%E8%BF%91%E4%B8%8E%E6%9B%B2%E7%BA%BF%E6%8B%9F%E5%90%88/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/3-%E5%87%BD%E6%95%B0%E9%80%BC%E8%BF%91%E4%B8%8E%E6%9B%B2%E7%BA%BF%E6%8B%9F%E5%90%88/</guid>
      <description>预备知识 内积与范数  内积：$f(x),g(x)\in C[a,b],\rho$ 是 $[a,b]$ 上的权函数，$(f,g)=\int_a^b\rho(x)f(x)g(x)dx$  非负函数 $\rho$ 为权函数需满足  $\int_a^b|x|^n\rho(x)dx$ 存在（总质量） $\forall g(x)$ 非负，$\int_a^bg(x)\rho(x)dx=0$ 则在 $(a,b)$ 上 $g(x)\equiv0$   物理上表示密度函数 内积公理  $(f,g)=(g,f)$ $(cf,g)=c(f,g)$ $(f_1+f_2,g)=(f_1,g)+(f_2,g)$ $(f,f)\geq 0$ 且 $f=0\iff(f,f)=0$   内积空间：$C[a,b]$ 在上述内积下形成内积空间 欧式长度：$|f|_2=\sqrt{(f,f)}$   函数范数  $|f|\infty=\max{a\leq x\leq b}|f(x)|$ $|f|_2=\sqrt{\int_a^bf^2(x)dx}$   范数性质  $|(f,g)|_2\leq|f|_2|g|_g$ Cauchy-Schwarz Inequality $|f+g|_2\leq|f|_2+|g|_2$ 三角不等式 $|f+g|_2^2+|f-g|_2^2=2(|f|_2^2+|g|_2^2)$    函数系  线性无关函数系（基函数系）：$\sum_{i}a_i\phi_i(x)=0\iff a_0=\cdots=a_{n-1}=0$ 时才成立 $f,g$ 在 $[a,b]$ 上带权 $\rho(x)$ 正交：$(f,g)=\int_a^b\rho(x)f(x)g(x)dx=0$ 正交函数系：函数系 $\varphi_0,\cdots,\varphi_n(x),(\varphi_j,\varphi_k)=\int_a^b\rho(x)\varphi_j(x)\varphi_k(x)dx=A_k[j=k]$ 标准正交函数系：$A_k=1$ 三角函数系：$1,\cos x,\sin x,\cos 2x,\sin 2x,\cdots$ 是 $[0,2\pi]$ 上关于权函数 $1$ 的正交函数系 $H_n=\text{span}{1,x,\cdots,x^n},[0,1],\rho(x)=1$  函数逼近   Weierstrass 定理</description>
    </item>
    
    <item>
      <title>Creative</title>
      <link>https://zhengzangw.com/notes/literature-management-and-information-analysis/creative/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/literature-management-and-information-analysis/creative/</guid>
      <description>头脑风暴 六顶思考帽  白色：资料与信息  只提供客观事实和数字：信息源+信息，还需要什么信息，如何获取信息   黑色：逻辑与批判  批判思维，识别缺点   黄色：积极与乐观  探寻优点，证明可行   绿色：创新与冒险  寻求解决问题方法，寻求创意，头脑风暴   红色：直觉与情感  感觉、直觉和预感   蓝色：系统与控制  会议主持人：考虑的不是问题本身，而是如何讨论问题    </description>
    </item>
    
    <item>
      <title>3-软件需求与分析</title>
      <link>https://zhengzangw.com/notes/software-enginerring/3-%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/3-%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82/</guid>
      <description>软件需求  软件需求：用户解决问题或达到目标所需的条件或权能，或系统或系统部件要满足合同、标准、规范或其它正式规定文档所需具有的条件或权能的文档说明 需求层次  邻域需求（业务需求）：应用邻域的要求 用户需求：表达高层的概要的需求 系统需求：描述系统应该提供的服务及其约束   秋千图  需求工程 (RE)  目标：创建和维护系统的需求文档 需求开发  可行性研究：经济、技术、法律 需求获取/定义：访谈、会议、参观、实践  客户权利 客户义务   需求分析：从用户处获得需求、形成与用户需求相一致的、可供阅读的软件需求规格说明书的过程  结构化方法 面向对象模型 原型方法   需求调查   需求管理技术与工具  需求确认 需求验证（需求评审） 需求变更控制   文档  需求文档  BRD（Business Requirement Document）商业需求文档：内容主要涉及市场分析，销售策略，盈利预测等，通常面向的对象是公司负责人、投资人和股东 MRD: 这是立项后开发前产出的文档，目的是指出产品的市场定位和特色功能。通常面向的对象是公司领导，商务、运营、市场人员等 PRD（Product Requirement Document）产品需求文档   需求分析报告：面向用户  内容：功能与行为需求、非功能需求、设计约束（如硬件、软件、网络等环境）、开发周期等 IEEE/ANSI 830-1998 GB/T 8586-2008   需求规格说明书 SRS：面向设计开发人员    需求规格文档（基于原型的）  小红书 PRD PMP 产品需求文档作用  传达产品开发需求 保证各部门沟通有理有据 产品质量控制有具体标准   工具  Word + Axure Axure8 + 标注   原型图避免涉及到颜色，只需要黑、白、灰、红 内容  产品简介（+商业需求文档） 版本说明 开发周期 历史版本 修订历史 思维导图：产品结构图、信息结构图、流程图等 全局说明：展示整个产品的设计规范 交互原型 用例文档   需求量化 需求复用  </description>
    </item>
    
    <item>
      <title>语法分析</title>
      <link>https://zhengzangw.com/notes/compiler/3-syntax-analysis/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/3-syntax-analysis/</guid>
      <description>上下文无关文法  语法描述  上下文无关文法 CFG BNF   上下文无关文法  终结符号 非终结符号 开始符号 产生式   推导：$A\rightarrow\gamma$，则 $\alpha A\beta\Rightarrow \alpha\gamma\beta$  最左推导：$\alpha$ 中不包含非终结符 $\overset{*}{\Rightarrow}_{\text{lm}}$ 零步或多步推导：$\overset{*}{\Rightarrow}$ 一步或多步推导：$\overset{+}{\Rightarrow}$ 句型 $\alpha$：$S\overset{*}{\Rightarrow} \alpha$ 句子：不包含非终结符号的句型 语言：$L(G)={\omega|S\overset{*}{\Rightarrow}\omega}$    CFG 处理   二义性：如果一个文法可以为某个句子生成多棵语法分析数，则该文法二义
  设计文法
 消除二义性：无较好方法；优先级，结合性消除 消除左递归：$A\overset{+}{\Rightarrow} A\alpha$  立即左递归：$A\rightarrow A\alpha$   提取左公因子    消除左递归
  立即左递归的消除
如果有 $A\rightarrow A\alpha_1|\cdots|A\alpha_m|\beta_1|\cdots|\beta_n$
变换为 $A\rightarrow \beta_1 A&#39;|\cdots|\beta_n A&#39;$ 和 $A&#39;\rightarrow \alpha_1 A&#39;|\cdots|\alpha_m A&#39;|\epsilon$</description>
    </item>
    
    <item>
      <title>3. 图元生成算法</title>
      <link>https://zhengzangw.com/notes/computer-graphics/3-primitives/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-graphics/3-primitives/</guid>
      <description>线画图元生成算法  输出图元 (Output Primitive)  线画图元：矢量表示 填充图元：点阵表示   输出图元生成：图像的设备级算法 点  随机扫描：电子束定位于指定位置 光栅扫描：根据帧缓冲器设置电子脉冲强度   线  随机扫描：按 $x$ 和 $y$ 方向线性增量改变水平和垂直偏转电压 光栅扫描：绘制两端点间的离散点   线画图元生成：线段通过像素绘制 扫描转换：按光栅扫描显示原理对数学表示的线段离散取样的方法 像素网格坐标：对象与像素中心对准，像素点区域坐标在像素点中心 屏幕网格坐标：物体边界与像素边界对准，像素点坐标有像素区域左下角整数网格坐标指定  数值差分析算法 DDA  $y=kx+b$ $|k|\leq 1$：取 $\Delta x=1$，$y_{i+1}=y_i+k$，坐标取整 $|k|&amp;gt;1$: 取 $\Delta y=1$，$x_{i+1}=x_i+\frac{1}{k}$ 优点：加法计算速度快 缺点：像素位置需取整  累积误差 取整操作和浮点预算耗时    直线图元生成算法 Bresenham  $y=mx+b$  屏幕坐标：$x_{k+1}=x_k+1,y_{k+1}=y_k+1$ 像素位置 $x_{k+1}$ 处线段的数学点坐标：$y=m(x_k+1)+b$ 垂直偏移  $d_1=y-y_k=m(x_k+1)+b-y_k$ $d_2=y_{k+1}-y=y_{k+1}-m(x_k+1)-b$   距离差：$d_1-d_2=2m(x_k+1)-2y_k+2b-1$ $\Delta x(d_1-d_2)=2\Delta yx_k-2\Delta xy_k+c$   决策参数：$p_k=\Delta x(d_1-d_2)=2\Delta yx_k-2\Delta xy_k+c$  $p_k&amp;gt;0,d_2&amp;lt;d_1$，选择 $(x_{k+1},y_{k+1})$ $p_k&amp;lt;0,d_2&amp;gt;d_1$，选择 $(x_{k+1},y_{k})$   增量计算：$p_{k+1}=p_k+2\Delta y-2\Delta x(y_{k+1}-y_k)$ 增量选择  $|m|&amp;lt;1$：沿 $x$ 方向 $|m|&amp;gt;1$：沿 $y$ 方向 直线生成方向与坐标轴同：坐标增量为正 直线生成方向与坐标轴反：坐标增量为负 水平线和垂直线直接装载    void Bresenham(int x_0, int y_0, int delta_x, int delta_y){ //|m|&amp;lt;1,直线生成方向与坐标轴同  int p = 2*delta_y-delta_x; int x = x_0, y = y_0; Draw(x, y); for (int k=1;k&amp;lt;=delta_x;++k){ x += 1; if (p&amp;lt;0){ p += 2*delta_y; } else { y += 1; p += 2*delta_y-2*delta_x; } Draw(x,y); } } 曲线图元生成算法 中点圆算法  $f(x,y)=x^2+y^2-r^2$  $y_{k+1}=y_k-1$ 平移：圆心 $(x_c,y_c)$ 对称：$x=0$ 到 $x=y$ 八分之一   决策参数：$p_k=f(x_{k+1},\frac{y_k+y_{k+1}}{2})=f(x_{k+1},y_k-\frac{1}{2})$  $p_k&amp;gt;=$：圆周外/上，$y_{k-1}$ $p_k&amp;lt;0$：圆周内，$y_k$    void drawCircle(int x_c, int y_c, int r){ int x = 0, y = r; int p =5/4-r; while (x&amp;gt;=y){ x += 1; if (p&amp;lt;0) { p += 2*x+1; } else { y -= 1; p += 2*x+1-2*y; } P = getSymmetryPoints(x,y); moveToCenter(P, x_c, y_c); drawSet(P); } } 椭圆生成算法  $f(x,y)=r_y^2x^2+r_x^2y^2-r_x^2r_y^2$ 斜率：$\frac{dy}{dx}=-\frac{2r_y^2x}{2r_x^2y}$  第一象限分为斜率&amp;lt;-1 和&amp;gt;-1 两个区域，分别为区域 1 和区域 2   $p1=f(x_{k+1},y_k-\frac{1}{2})=r_y^2(x_k+1)^2+r_x^2(y_k-\frac{1}{2})^2-r_x^2r_y^2$  $p1&amp;lt;0,y_{k+1}=y_k$ $p\geq 0,y_{k+1}=y_k-1$   $p2=f(x+\frac{1}{2},y_k-1)=r_y^2(x_k+\frac{1}{2})^2+r_x^2(y_k-1)^2-r_x^2r_y^2$  $p2&amp;gt;0,x_{k+1}=x_k$ $p2\leq0,x_{k+1}=x_k+1$    其它曲线  圆锥曲线，三角和指数函数，概率分布，多项式核样条函数 直接逼近法 直线拟合法 中点法 利用对称性  线画图元生成的帧缓冲器地址计算  单色系统  $\text{addr}(x,y)=\text{addr}(0,0)=y(x_{\max}+1)+x$ $\text{addr}(x+1,y)=\text{addr}(x,y)+1$ $\text{addr}(x+1,y+1)=\text{addr}(x,y)+x_{\max}+2$   彩色系统：乘以像素位数 $n$  线画图元生成的并行处理算法  将直线分割成多个子段，每个子段用 Bresenham 算法，同时生成线段  子段分割分配：按处理器数目分段；宽度可能不同 扫描线/像素列像素分配：顺序算法可能较慢 区域像素分配    线画图元生成的反走样技术  走样：低频取样不充分造成信息失真 将直线段看做具有一定长度的矩形，根据与像素的相交区域确定像素亮度级 直线段过取样  像素亮度等级 = 像素区域内子像素总数   区域取样：像素亮度正比于像素与有限宽线的重迭区域（线宽被覆盖的像素数目） 线亮度差矫正  水平和垂直线：最低亮度 45 度线：最高亮度   加权区域采样  像素亮度对直线段的贡献程度正比于相交区域与像素中心的距离   加权掩膜：指定子像素相对重要性值的数组 过滤技术：连续加权曲面或过滤函数覆盖像素 硬件反走样（像素位移）：移动像素区域的显示位置  填充图元生成算法  顶点表示  扫描填充：求出位于内部的各个像素 扫描线求交：多边形边界转换为像素 区域连通性：多边形内部转换为有效连通区域   点阵表示  区域填充：从区域的一个内点出发，将颜色扩展到整个区域 区域连通性：区域内部像素有效连通 内外点测试：起始种子为内点   填充格式  颜色边界空心区域 实心区域 图案区域    扫描转换算法   顶点表示 -&amp;gt; 点阵表示</description>
    </item>
    
    <item>
      <title>伊斯兰</title>
      <link>https://zhengzangw.com/notes/islam-culture/%E4%BC%8A%E6%96%AF%E5%85%B0/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/islam-culture/%E4%BC%8A%E6%96%AF%E5%85%B0/</guid>
      <description>清真 = 伊斯兰
伊斯兰宗教观  绝对顺从造化万物的独一真神安拉 人必须凭依自己的智慧 人性本善，无原罪 今世的生活，为安拉打理世界，金钱是考验，后世是经历审判的  思想中心  万物非主，唯有安拉；穆罕默德是安拉的使者 直接向安拉祈祷 今世普慈众生  五个功课  念：作证词 礼：每日五次礼拜  朝麦加，清洁   斋：每年一个月，不吃不喝，日出前到日落后，谨言慎行  伊斯兰历九月 主命斋 副功斋   课：四十分之一  天课 zakat 不能济助直系亲属   朝：一生一次麦加（身体健康，经济能力，路途平安）  绕天房七圈 伊斯兰历12月    六个基本观念  归信安拉 归信天使（土火光）  加百列   归信经典 归信使者 归信末日  世界结束与毁灭，复活与接受公平的审判   归信前定  伊斯兰餐饮  禁食：未按教规屠宰，未经屠宰，血，猪，驴，祭拜，两栖动物，酒，麻醉品，非法取得的 halal  伊斯兰律法 沙利亚法，shareiah
 政教不分离，有冲突 责任  区分成年   保障 五要素  信仰 生命 智慧 伦常 财产   宗师宗派  艾布哈尼法 莎菲尔 马力克 翰百里   四大法源  古兰经 圣训 众议 类比   法学阶段  使者穆罕默德 四大贤 众贤 伊斯兰法学 法学宗派 纯粹模仿   政治理念分歧  sunni 逊尼 遵循正道者 80-85% shia 什叶 追随者，追随大贤阿里  伊朗，伊拉克南部，叙利亚与黎巴嫩     乳母制度 男女区分  伊斯兰政治观  乌麦亚王朝 661-750 大马士革  14代 西班牙繁荣   756 西班牙 阿拉伯王朝 700年统治 蒙古人攻陷巴格达 1258  哈里发制度毁灭 伊斯兰各地发展   十字军东征 11 12世纪 1096-1291 法兰克人战争  1 法国 1006-1009 2 3 4 5   奥斯曼帝国 1299 趁蒙古大军退出崛起的突厥势力  1453 攻克君士坦丁堡 16 17世纪达到顶峰   一战 洛桑条约  1924 废除哈里发 库尔德民族被牺牲 图瓦雷格族   反抗运动  瓦哈比运动 赛努西运动 埃及 穆斯林兄弟会 60年代 独立建国 法国殖民阿尔及利亚 1830-1962   伊斯兰国  对西方，伊斯兰统治者，教育不满 阿富汗战争留下的游击队   圣战：本意为奋斗努力  伊斯兰经济  沙漠：岩盐 20世纪中期取代骆驼商队  </description>
    </item>
    
    <item>
      <title>3-级数</title>
      <link>https://zhengzangw.com/notes/calculus/section3/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/calculus/section3/</guid>
      <description>级数：形式和：$\sum_{n=1}^{+\infty}a_n=a_1+a_2+\cdots$ 部分和：$S_n=\sum_{k=1}^na_k$ 收敛 $\sum_{n=1}^{+\infty}a_n=A$：$\lim_{n\rightarrow+\infty}S_n=A$ 发散：不收敛 Cauchy 准则：收敛 $\iff\forall\epsilon&amp;gt;0,\exists N\in\mathbb{R},\forall m&amp;gt;N,\forall n&amp;gt;N,m&amp;gt;n$ 有 $|\sum_{k=n+1}^ma_k|&amp;lt;\epsilon$ 线性：收敛时满足 非负项级数：$a_n\geq 0$  $\sum_{n=1}^{+\infty}$ 有值非负，收敛 $\iff&amp;lt;+\infty$ 比较判别法 I： $a_n\geq b_n\geq 0$  $\sum_{n=1}^{+\infty}a_n$ 收敛，$\sum_{n=1}^{+\infty}b_n$ 收敛 $\sum_{n=1}^{+\infty}b_n$ 发散，$\sum_{n=1}^{+\infty}a_n$ 发散   比较判别法 II  $\lim_{n\rightarrow+\infty}\frac{a_n}{b_n}=c&amp;lt;+\infty$，且 $\sum_{n=1}^{+\infty}b_n$ 收敛，$\sum_{n=1}^{+\infty}a_n$ 收敛 $\lim_{n\rightarrow+\infty}\frac{a_n}{b_n}=c&amp;gt;0$，且 $\sum_{n=1}^{+\infty}b_n$ 发散，$\sum_{n=1}^{+\infty}a_n$ 发散   比值法（D&amp;rsquo;Alembert）  $\lim_{n\rightarrow+\infty}\frac{a_{n+1}}{a_n}=q&amp;lt;1$，则 $\sum_{n=1}^{+\infty}a_n$ 收敛 $\lim_{n\rightarrow+\infty}\frac{a_{n+1}}{a_n}=q&amp;gt;1$，则 $\sum_{n=1}^{+\infty}a_n$ 发散   根式法（Cauchy）  $\lim_{n\rightarrow+\infty}\sqrt[n]{a_n}=q&amp;lt;1$, 收敛 $\lim_{n\rightarrow+\infty}\sqrt[n]{a_n}=q&amp;gt;1$, 发散   积分法：$f$ 在 $[k,+\infty]$ 上可积，$f|_{(n,n+1)}\geq a_n$  $\sum_{n=k}^{+\infty}a_n\leq\int_k^\infty f(x)dx$     交错级数 Leibniz 判别法：${|a_n|}$ 单调且极限为 $0$，则 $\sum_{n=1}^{+\infty}$ 收敛 绝对收敛：$\sum_{n=1}^{+\infty}|a_n|$ 收敛  绝对收敛则收敛 条件收敛：收敛但非绝对收敛   重排: $\sum_{n=1}^{+\infty}a_{\varphi(n)}$  Riemann 定理：$\forall A,\sum_{n=1}^{+\infty}a_n$ 为实级数且条件收敛，则存在重排 $\sum_{n=1}^{+\infty}b_n=A$ $\sum_{n=1}^{+\infty}a_n$ 收敛则可对相继项加括号 $\sum_{n=1}^{+\infty}a_n$ 绝对收敛则可重排 Cauchy 定理：$\sum_{n=1}^{+\infty}a_n,\sum_{n=1}^{+\infty}b_n$ 绝对收敛, 则 $a_mb_n$ 可任意方式排成级数皆绝对收敛于值 $(\sum_{n=1}^{+\infty}a_n)(\sum_{n=1}^{+\infty}b_n)$   幂级数：$\sum_{n=0}^{+\infty}a_n(z-z_0)^n$ 中心为 $z_0$  Abel 定理：$\exists0\leq\rho\leq+\infty,|z|&amp;lt;\rho,\sum_{n=0}^{+\infty}a_nz^n$ 绝对收敛，$|z|&amp;gt;\rho,\sum_{n=0}^{+\infty}a_nz^n$ 发散  收敛半径：$\rho$ 收敛域：使 $\sum_{n=0}^{+\infty}a_n(x-x_0)^n$ 收敛的所有 $x\in\mathbb{R}$ 构成的集合 Cauchy-Hadmard 公式：若 $\lim_{n\rightarrow+\infty}|\frac{a_{n+1}{a_n}}|=L$ 或 $\lim_{n\rightarrow+\infty}\sqrt[n]{|a_n|}=L$，则$\rho=\frac{1}{L}$   幂级数函数：$f(x)=\sum_{n=0}^{+\infty}a_n(x-x_0)^n$，定义域为收敛域  Abel: 幂级数函数在收敛域上连续 逐项求导：$f(x)$ 在收敛域光滑，$f^{(m)}(x)=\sum_{n=0}^{+\infty}a_n\frac{d^m}{dx^m}(x-x_0)^n$  $a_n=\frac{f^{(n)}}{n!</description>
    </item>
    
    <item>
      <title>3-推理（演算）</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/3-deduction/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/3-deduction/</guid>
      <description>推理  推理规则  完备性 completeness 可靠性 soundness   推理算法 = 推理规则 + 搜索算法  完备的推理算法 = 完备推理规则 + 完备搜索算法   反证法：证明 $a\vDash b$，只需证 $a\wedge\neg b$ 不可满足 单元归结：$\frac{l_1\vee\cdots\vee l_k, m}{l_1\vee\cdots\vee l_{i-1}\vee l_{j+1}\vee\cdots\vee l_k}$  $l_k$ 与 $m$ 为互补文字   全归结：$\frac{l_1\vee\cdots\vee l_k, m_1\vee\cdots\vee m_k}{l_1\vee\cdots\vee l_{i-1}\vee l_{j+1}\vee\cdots\vee l_k\vee m_1\cdots}$  归并：去除文字的多余副本   归结推理：$\frac{l_1\vee\cdots\vee l_k, m_1\vee\cdots\vee m_k}{l_1\vee\cdots\vee l_{i-1}\vee l_{j+1}\vee\cdots\vee l_k\vee m_1\cdots[x/\theta]},\text{UNIFY}(l_i,\neg m_j)=\theta$ 基本归结定理：如果子句集是不可满足的，那么这些子句的归纳闭包包含空子句 Horn 子句：至多只有一个正文字的子句  限定子句：恰有一个正文字的子句  每个限定子句可以写成蕴含式   目标子句：没有正文字的子句 Horn 子句在归结下封闭   转为和取反式(CNF)  命题逻辑处理  消去 $\Leftrightarrow,\Rightarrow$ 否定内移   变量标准化，量词左移 Skolem 化：消除存在量词 $(\exists x)(A(x))$ 置换为 $A(c)$ 删除全称量词 将$\wedge$分配到$\vee$中   一阶逻辑的命题化技术 (1960s)  $\forall$ 消除 + Skolem 化（$\exists$ 消除）  有限：可满足时等价 无限：Jacques Herbrand 存在最大嵌套深度   一阶逻辑的蕴含问题是半可判定的  不存在算法否定蕴含不成立的语句     置换：$\theta={t_1/x_1,t_2/x_2,\cdots,t_n/x_n}$  置换的复合：$\theta\circ\lambda$   数据库语义：没提到的为假 画面问题：作为动作的结果，什么变什么不变  规约（消解，归结，resolution） 使用最少的合一次数在一个子句数据库中发现矛盾</description>
    </item>
    
    <item>
      <title>Quantum Algorithm</title>
      <link>https://zhengzangw.com/notes/quantum-computation/quantum-algorithm/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/quantum-algorithm/</guid>
      <description>Query value of function  $U_f:|x,y\rangle\rightarrow|x,y\oplus f(x)\rangle$  $f:{0,1}^n\rightarrow{0,1}$ 对应的矩阵为置换阵 $2^n\times 2^n$   Quantum Parallelism: $U_f H^{\oplus n}|0^n\rangle=\frac{1}{\sqrt{2^n}}\sum_x|x,f(x)\rangle$ Store the query in phase: $O_f|x\rangle=(-1)^{f(x)}|x\rangle$  $U_f|x,-\rangle=(-1)^{f(x)}|x\rangle|-\rangle$   Deutsch Algorithm  Question: Given a function $f:{0,1}\rightarrow{0,1}$, decide whether $f(0)=f(1)$ $|0\rangle \rightarrow H \rightarrow O_f \rightarrow H \rightarrow M(|0\rangle,|1\rangle)$   Deutsch-Joszsa Algorithm  Question: Given a function $f:{0,1}^n\rightarrow{0,1}$, it is either constant or balanced($|f^{-1}(0)|=|f^{-1}(1)|=2^{n-1}$). $|0\rangle^{\otimes n}\rightarrow H^{\otimes n}\rightarrow O_f\rightarrow H^{\otimes n}\rightarrow M(|0^n\rangle)$    Quantum Teleportation Super-dense Coding one qubit encode two bits (tight)</description>
    </item>
    
    <item>
      <title>3. Dimension Reduction</title>
      <link>https://zhengzangw.com/notes/advanced-algorithm/3-dimension-reduction/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-algorithm/3-dimension-reduction/</guid>
      <description>Metric Embedding  Metric Space: $(X,d),X$ is a set and $d$ is a distance on $X$ Embedding: $\phi:X\rightarrow Y$ on two metric space $(X,d_X),(Y,d_Y)$  Distortion $\alpha\geq 1$: $\forall x,y\in X,\frac{1}{\alpha}d(x,y)\leq d(\phi(x),\phi(y))\leq\alpha d(x,y)$ Dimension Reduction: $x_1,\cdots,x_n\in\mathbb{R}^d,y_1,\cdots,y_n\in\mathbb{R}^k$    JLT Embedding  Johnson-Lindenstrauss Theorem(JLT, 1984): it is always possble to embed $n$ points in arbitrary dimension to $O(\log n)$ dimension with constant distortion in Euclidian Space  $\forall0&amp;lt;\epsilon &amp;lt;1,\forall S\subset \mathbb{R}^{d},|S|=n,\exists k=O(\epsilon ^{-2}\log n),\phi :\mathbb{R} ^{d}\rightarrow \mathbb{R}^{k}$ such that $\forall x,y\in S,(1-\epsilon )|x-y|^{2}\leq |\phi (x)-\phi (y)|^{2}\leq (1+\epsilon )|x-y|^{2}$ (linear embedding): $\phi(x)=Ax$ (2016) Lower Bound: $\Omega(\epsilon^{-2}\log n)$   Contruction  projection onto uniform random $k$-dimensional subspace of $\mathbb{R}^d$ (1999) random matrix with i.</description>
    </item>
    
    <item>
      <title>3. Sieve methods</title>
      <link>https://zhengzangw.com/notes/combinatorics/3-sieve-methods/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/3-sieve-methods/</guid>
      <description>PIE  PIE(Priciple of Inclusion-Exclusion)  $A_I=\bigcap_{i\in I}A_i$ $|\bigcup_{i=1}^nA_i|=\sum_{I\subseteq{1,\cdots,n},|I|\geq 1}(-1)^{|I|-1}|A_I|$ $|\bigcap_{i=1}^n\overline{A_i}|=\sum_{I\subseteq{1,\cdots,n}}(-1)^{|I|}|A_I|$   Sieve methods: 计算恰好具备某种性质的 $\Rightarrow$ 计算不具有一系列坏性质的  Define $|U|$ Define &amp;lsquo;bad&amp;rsquo; properties $A_i$ Use PIE count the number    Surjections  Count Surjections $f:N\rightarrow M$ $U={f:[n]\rightarrow[m]}, |U|=m^n$ $A_i={f:[n]\rightarrow[m]\backslash{i}},|A_i|=(m-1)^n$ $A_I={f:[n]\rightarrow[m]\backslash I},|A_I|=(m-|I|)^n$ $|\bigcap_{i=1}^n\overline{A_i}|=\sum_{I\subseteq{1,\cdots,n}}(-1)^{|I|}|A_I|=\sum_{j=0}^m(-1)^j{m\choose j}(m-j)^n=m!{n\brace m}$  Derangements  fixed point $i$: $i\in{1,2,\cdots,n},\pi(i)=i$ derangement of ${1,2,\cdots,n}$ is $\pi$ that has no fixed points $U=S_n,|U|=n!$ $A_i={\pi|\pi(i)=i}$, $|A_i|=(n-1)!$ $|A_I|=(n-|I|)!$ $\sum_{I\subseteq[n]}(-1)^{|I|}|A_I|=n!\sum_{k=0}^n\frac{(-1)^k}{k!}\approx\frac{n!}{e}$  Permutations with restricted positions  $B\subseteq [n]\times[n]$ $G_\pi(V,E)={(i,\pi(i))|i\in [n]}$ $N_0=|{\pi|B\cap G_\pi=\emptyset}$ (Non-attacking rooks) $r_k:|{S\in{B\choose k}|\forall(i_1,j_1),(i_2,j_2)\in S,i_1\not= i_2,j_1\not=j_2}$ $N_0=\sum_{k=0}^n(-1)^kr_k(n-k)!</description>
    </item>
    
    <item>
      <title>Frequency Domain</title>
      <link>https://zhengzangw.com/notes/digital-image-process/2-frequency-domain/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/2-frequency-domain/</guid>
      <description>傅里叶变换 冲激  冲激  单位冲激($0$ 处)：$\delta(t)=[t=0]\infty,\int_{-\infty}^{\infty}\delta(t)dt=1$ 单位冲激($t_0$ 处)：$\delta(t-t_0)\infty$ 采样性质：$\int_{-\infty}^{\infty}f(t)\delta(t)dt=f(0)$   离散冲激  离散单位冲激：$\delta(x-x_0)=[t=0]$ 采样性质：$\sum_{x=-\infty}^\infty f(x)\delta(x-x_0)=f(x_0)$   冲激串: $s_{\Delta T}(t)=\sum_{n=-\infty}^{\infty}\delta(t-n\Delta T)$  $S_{\Delta T}(\mu)=\frac{1}{\Delta T}s_{\frac{1}{\Delta T}}$   采样: $f(t)s_{\Delta T}(t)=\sum_{n=-\infty}^{\infty}f(t)\delta(t-n\Delta T)$ 周期化：$f(t)\star s_{\Delta T}(t)$  (Continuous) Fourier Tranform 连续函数 $f(t)$ $\overset{\mathcal{F}}{\leftrightarrow}$ 连续函数 $F(\mu)$
 FT  $$F(\mu)=\mathcal{F}(f)=\int_{-\infty}^{\infty}f(t)e^{-i2\pi\mu t}dt=\int_{-\infty}^\infty f(t)[\cos(2\pi\mu t)-i\sin(2\pi\mu t)]dt$$
 IFT  $$f(t)=\mathcal{F}^{-1}(F)=\int_{-\infty}^{\infty}F(\mu)e^{i2\pi\mu t}d\mu$$
 性质  对称性：$\mathcal{F}(F(t))=f(-\mu)$ 线性: $\mathcal{F}(\alpha f+\beta g)=\alpha\mathcal{F}(f)+\beta\mathcal{F}(g)$ 平移性：  $\mathcal{F}(f(t-\tau))=F(\mu)e^{-i2\pi\mu\tau}$   微分关系：$\mathcal{F}(f&#39;(x))i\mu=\mathcal{F}(f(x))$ 卷积定理  $(f(t)\star h(t))(x)=\int_{-\infty}^\infty f(x-t)h(t)dt$ $\mathcal{F}(f(t)\star h(t))=H(\mu)F(\mu)$ $\mathcal{F}(f(t)h(t))=H(\mu)\star F(\mu)$     盒状函数：$f(t)=A[|x|&amp;lt;=\frac{W}{2}]$  $F(\mu)=AW\frac{\sin(\pi\mu W)}{\pi\mu W}=AW\text{sinc}(\mu W)$    Fourier Series 连续周期函数 $\overline{f}(t)$ $\overset{\mathcal{FS}}{\leftrightarrow}$ 离散函数 $F[k]$</description>
    </item>
    
    <item>
      <title>3-关系数据库系统</title>
      <link>https://zhengzangw.com/notes/database/3-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/3-%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/</guid>
      <description>衡量准则 完全关系型，基本关系型，半关系型
 信息准则：信息能在逻辑一级唯一地用“表”中的值显示表示 确保访问准则：逻辑方式依靠表名、关键字名与列名的组合来访问数据库汇总的每一个原子数据 空值的关系处理准则：处理空值的能力 基于资源管理的动态联机目录：数据字典与用户数据具有相同的表示形式与操作方式 统一易用的数据子语言：至少有一种数据子语言支持：数据定义，视图定义，数据操控空，完整性约束，授权机制，事务处理能力 视图更新准则：通过视图不仅可以查询，还可以执行对数据的增、删、改等操作 高级的插入、删除及修改操作：一条命令可以操作多个元组 物理数据独立性 逻辑数据独立性 数据完整性准则 分布独立性：数据分布的改变不影响原有的应用程序 无损害原则：对提供低级数据子语言的要求  关系模型 由关系构建的模型
关系数据结构  二维表  Frame：表框架有 $n$ 个 Attribute 组成  表的元数：$n$ Domain：属性的取值范围   Tuple：由 $n$ 个元组分量组成  表的基数：$m$     关系：满足以下性质的的二维表  First Normal Form Rule  元组分量原子性   Access Rows by Content Only Rule  元组次序无关 属性次序无关   The Unique Row Rule  元组唯一   元组个数有限 属性名唯一性 分量值域同一性   关系框架：关系名+所有属性名 $R(A_1,A_2,\cdots,A_n)$ 键  Superkey: a set of columns that has the uniqueness property Key: a minimal superkey Foreign Key: 表 A 中的属性集 F 是表 B 的键，则 F 为表 A 的外键  A 可以等于 B A：引用表，B：被应用表         关系模型 二维表     Relation Table   Attribute Column   Tuple Row   Schema Table Heading    关系操纵  数据操纵功能  数据查询  单张表：纵向定位+横向定位 两张表：先将两张表合一 多张表：逐步合一   数据插入 数据删除 数据修改   基本操作模型  元组选择 属性指定 关系合并 元组插入 元组删除   空值处理  算术运算中有空值，结果为空 逻辑运算中有空值，结果为假 统计计算中，定义对空集和空值的处理方法  空值可以不统计 SUM AVG MAX MIN COUNT 空集结果为空 SUM AVG MAX MIN 空集结果为 0 COUNT      数据约束  实体完整性约束：关系的主键中不允许有空值 参照完整性约束：外键要么取空值，要么是被引用表中当前存在的某元组上的主键值 用户定义的完整性  关系代数 集合在 $(\pi,\sigma,\times,\cup,-)$ 下的代数系统</description>
    </item>
    
    <item>
      <title>Decision Tree</title>
      <link>https://zhengzangw.com/notes/machine-learning/3-decisiontree/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/3-decisiontree/</guid>
      <description>决策树算法  当前节点包含样本全部同类：标记为该类 当前样本属性值为空/取值相同：标记为最多一类 属性划分选择 为属性每个值分配一个结点继续执行算法  若某属性值上为空则标记为当前最多一类    划分选择    指标名称 指标 辅助函数 例子 Remark     Information Gain $\text{Gain}(D,a)=\text{Ent}(D)-\sum_{v=1}^{V}\frac{\vert D^v\vert }{\vert D\vert }\text{Ent}(D^v)$ $\text{Ent}(D)=-\sum_{k=1}^{ \vert Y \vert }p_k\log_2p_k$ ID3 对可取值数目较多的属性有偏好   Gain ratio $\text{Gain-ratio}(D,a)=\frac{\text{Gain}(D,a)}{\text{IV}(a)}$ $\text{IV}(a)=-\sum_{v=1}^{V}\frac{\vert D^v\vert}{\vert D\vert}log_2\frac{\vert D^v\vert}{\vert D\vert}$ C4.5 从候选划分中找出信息增益高于平均水平的属性，再从中选择增益率最高的   Gini ratio $\text{Gini-index}(D,a)=\sum_{v=1}^V\frac{\vert D^v\vert}{\vert D\vert}\text{Gini}(D^v)$ $\text{Gini}(D)=1-\sum_{k=1}^{\vert Y\vert}p_k^2$ CART Gini 指数为随机抽取两个样本类别标记不一致的概率,越小纯度越高    剪枝处理    方法 指标 过拟合 欠拟合 训练时间     预剪枝 Precision 降低过拟合风险 有欠拟合风险 较小   后剪枝 Precision 降低过拟合风险 欠拟合风险小 较长    连续与缺失值  连续属性离散化（二分法）  $T_a={\frac{a^i+a^{i+1}}{2}|1\leq i\leq n-1}$ $\text{Gain}(D,a,t)$   缺失值  $\tilde{D}$: $D$在属性 $a$ 上没有缺失值的样本子集 $\tilde{D}^v$: $\tilde{D}$ 中属性 $a$ 上取值为 $a^v$ 的样本子集 $\tilde{D}_k$: $\tilde{D}$ 中类别为 $k$ 的样本子集 $\omega_x$: 每个样本的权重 $\rho=\frac{\sum_{x\in\tilde{D}}\omega_x}{\sum_{x\in D}\omega_x}$ 属性 $a$ 无缺失样本所占比例 $\tilde{p}k=\frac{\sum{x\in\tilde{D}k}\omega_x}{\sum{x\in D}\omega_x}$ 无缺失样本中第 $k$ 类占比 $\tilde{r}v=\frac{\sum{x\in\tilde{D}^v}\omega_x}{\sum_{x\in D}\omega_x}$ 无缺失样本中属性 a 取值 $a^v$ 占比 $\text{Ent}(\tilde{D})=-\sum_{k=1}^{|Y|}\tilde{p}_k\log_2\tilde{p}_k$ $\text{Gain}(D,a)=\rho*\text{Gain}(\tilde{D},a)=\rho*(\text{Ent}(\tilde{D})-\sum_{v=1}^V\tilde{r}_v\text{Ent}(\tilde{D}^v))$    多变量决策树  每个叶节点用 $\sum_{i=1}^dw_ia_i=t$ 的线性分类器 特征预处理  </description>
    </item>
    
    <item>
      <title>Model Logic</title>
      <link>https://zhengzangw.com/notes/mathematic-logic/model-logic/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/mathematic-logic/model-logic/</guid>
      <description>模态语言    模式 分支 应用     可能与必然 基本模态逻辑    过去与将来 时态逻辑(temporal) 软硬件系统形式化验证   知道与相信 认知逻辑(epistemic) 知识表示   义务与允许 道义逻辑(deontic) 分布式智能系统进行协同与控制的规范系统     模态逻辑特征  模态逻辑是用于描述关系结构的简单而富于表达力的语言 模态语言为关系结构提供了一种内部和局部的视角 模态逻辑并不是孤立的形式化系统   关系结构 $\mathfrak{F}=(W,R_1,\cdots,R_n)$, $W$ 为 domain/universe, $R_i$ 为 $\mathfrak{F}$ 上的关系  $W$ 中的元素可以为不同名称如点、状态、世界、时间、状况等。关系结构通常可以表示为简单图形 严格偏序  全序   标注转换系统（LTS）$(W,{R_a|a\in A}),a\in A,R_a\subseteq W\times W$ 时间的内在结构为全序集 $(S,&amp;lt;)$  假设：1.时间离散 2.有一个没有前驱的时刻 3.有无穷后续时刻进入未来      基本模态逻辑 语言  命题符集合 $\Phi$ 一元模态算子 $\diamondsuit$  读作 &amp;ldquo;可能&amp;rdquo; 对偶算子 $\square\varphi:=\neg\diamondsuit\neg\varphi$  读作 &amp;ldquo;不可能不/必然&amp;rdquo;   $\varphi\wedge\psi:=\neg(\neg\varphi\vee\neg\psi)$ $\top:=\neg\perp$   合式公式(well-formed formula) $\varphi::=p|\perp|\neg\varphi|\varphi\vee\phi|\diamondsuit\varphi$ 部分合式公式  $K:\square(\varphi\rightarrow\phi)\rightarrow(\square\varphi\rightarrow\square\phi)$ $T:\square\varphi\rightarrow\phi$ $4:\square\phi\rightarrow\square\square\phi$ $B:\varphi\rightarrow\square\diamondsuit\varphi$ $D:\square\varphi\rightarrow\diamondsuit\varphi$ $5:\diamondsuit\varphi\rightarrow\square\diamondsuit\phi$    标准翻译  $\mathcal{L}^1(\Phi)$ 为一阶语言  具有一元谓词 $P_0,P_1,\cdots$ 对应 $\Phi$ 中命题符 $p_0,p_1,\cdots$ 具有二元关系 $R$ 对应 $\diamondsuit$   标准翻译 $\text{ST}_x$:  $\text{ST}_x(p)=P_x$ $\text{ST}_x(\perp)=x\not=x$ $\text{ST}_x(\neg\phi)=\neg\text{ST}_x(\phi)$ $\text{ST}_x(\phi\vee\psi)=\text{ST}_x(\phi)\vee\text{ST}_x(\psi)$ $\text{ST}_x(\diamondsuit\phi)=\exists y(Rxy\wedge\text{ST}_y(\phi))$, y 为新变元   $\mathfrak{M},\omega\Vdash\varphi\iff\mathfrak{M}\vDash\text{ST}_x(\varphi)[\omega]$  $\text{ST}_x(\varphi)[\omega]$: $\omega$ 被赋给自由变元 $y$   $\forall\mathfrak{M},\omega\Vdash\varphi\iff\mathfrak{M}\vDash\forall x\text{ST}_x(\varphi)$  语义  Kripke 模型：$\mathfrak{M}=(W,R,L)=(\mathfrak{F},L)$  状态 $\omega\in W$ $R$ 为 $W$ 上的关系 $L:W\rightarrow 2^\Phi$ 为标记函数，把 $W$ 每个点标记上再该点为真的命题符   $\mathfrak{M},\omega\Vdash\varphi$ 基本模态公式 $\varphi$ 在状态 $\omega$ 被满足  $\mathfrak{M},\omega\Vdash p,p\in\Phi\iff p\in L(\omega)$ $\mathfrak{M},\omega\Vdash \perp$ 从不成立 $\mathfrak{M},\omega\Vdash\neg\varphi\iff \mathfrak{M},\omega\Vdash\varphi$ 不成立 $\mathfrak{M},\omega\Vdash\varphi\vee\psi\iff\mathfrak{M},\omega\Vdash\varphi$ 或 $\mathfrak{M},\omega\Vdash\psi$ $\mathfrak{M},\omega\Vdash\diamondsuit\varphi\iff$ 存在 $v\in W,Rwv,\mathfrak{M},\omega\Vdash\varphi$  $\mathfrak{M},\omega\Vdash\square\varphi\iff$ 对于任意的 $v\in W,Rw v,\mathfrak{M},\omega\Vdash\varphi$     盲状态：不能到达任意后续状态的状态，$\square\varphi$ 空真 $\mathfrak{F},\omega\Vdash\varphi$：任意的 $L$, $\mathfrak{M},\omega\Vdash\varphi$ $\mathfrak{F}\Vdash\varphi$: 任意的 $\omega$, $\mathfrak{F},\omega\Vdash\varphi$ $\mathbb{F}\Vdash\varphi$: 任意的 $\mathfrak{F}\in\mathbb{F},\mathfrak{F}\Vdash\varphi$  $\Lambda_\mathbb{F}$: $\mathbb{F}$ 的逻辑，对 $\mathbb{F}$ 有效的所有公式的集合   $\Vdash\varphi$: 任意的 $\mathbb{F}$, $\mathbb{F}\Vdash\varphi$  线性时间时态逻辑 (LTL) 语言  线性时间时态算子  $\mathcal{U}$: until $\bigcirc$: next-time   常用时态算子  $\diamondsuit\phi:=\top\mathcal{U}\phi$: Finally $\square\phi:=\neg\diamondsuit\neg\phi$: Globally $\overset{\infty}{\diamondsuit}\phi:=\square\diamondsuit\phi$: Infinitely Often $\overset{\infty}{\square}\phi:=\diamondsuit\square\phi$: Almost Everywhere $\phi_1\mathcal{R}\phi_2:=\neg(\neg\phi_1\mathcal{U}\neg\phi_2)$: Release   $\psi::=p|\perp|\neg\psi|\psi_1\vee\psi_2|\bigcirc\psi|\psi_1\mathcal{U}\psi_2,p\in\Phi$  语义  模型 $\mathfrak{M}=(S,x,L)$  $S$: 非空状态集 $x:N\rightarrow S$：状态的无穷序列 $L:W\rightarrow2^\Phi$   $\mathfrak{M},x\vDash\psi$: 在模型 $\mathfrak{M}$ 的时间线 $x$ 上，公式 $\psi$ 为真  $\mathfrak{M},x\vDash p,p\in\Psi\iff p\in L(s_0)$ $\mathfrak{M},x\vDash\perp$ 从不成立 $\mathfrak{M},x\vDash \neg\psi\iff\mathfrak{M},x\vDash \psi$ 不成立 $\mathfrak{M},x\vDash \psi_1\vee\psi_2\iff\mathfrak{M},x\vDash \psi_1$ 或 $\mathfrak{M},x\vDash \psi_2$ $\mathfrak{M},x\vDash \psi_1\mathcal{U}\psi_2\iff\exists j(\mathfrak{M},x^j\vDash \psi_2$ 且 $\forall k&amp;lt;j(\mathfrak{M},x^k\vDash \psi_1))$ $\mathfrak{M},x\vDash\bigcirc\psi\iff\mathfrak{M},x^1\vDash\psi$  $x^i$ 表示 $s$ 的后缀 $s_i,s_{i+1},\cdots$      分支时间时态逻辑 语言 BTL  命题符 $\Psi$ 线性时态算子 路径选择算子 $\exists$: for some futures  $\forall\psi:=\neg\exists\neg\psi$: for all futures   路径公式：$\psi::=\phi|\psi_1\vee\psi_2|\neg\psi|\bigcirc\psi|\psi_1\mathcal{U}\psi_2$ 状态公式：$\varphi::=p|\perp|\varphi_1\vee\varphi_2|\neg\varphi|\exists\psi$  Sublanguage  路径公式：$\psi::=\bigcirc\varphi|\varphi_1\mathcal{U}\varphi_2$  不允许线性时态算子的布尔组合和嵌套 状态公式不变   等价于：  基本时态算子：$\exists\bigcirc,\exists\square,\exists\mathcal{U}$  $\forall\bigcirc\varphi:=\neg\exists\bigcirc\neg\varphi$ $\forall\square\varphi:=\neg\exists\diamondsuit\neg\varphi$ $\forall\diamondsuit\varphi:=\neg\exists\square\neg\varphi$ $\exists\diamondsuit\varphi:=\exists(\perp\mathcal{U}\varphi)$ $\forall(\varphi_1\mathcal{U}\varphi_2):=\neg\exists(\neg\varphi_2\mathcal{U}\neg\varphi_2)\wedge\neg\exists\square\neg\varphi_2$   $\varphi::=p|\perp|\neg\varphi|\varphi_1\vee\varphi_2|\exists\bigcirc\varphi|\exists\square\varphi|\exists(\varphi_1\mathcal{U}\varphi_2)$    语义 Computation Tree Logic CTL$^*$  Kripke 模型：$\mathfrak{M}=(S,R,L)$  $S$：非空状态集 $R\subset S\times S$ 是一个完全的二元关系  完全：$\forall s\in S\exists t\in S:(s,t)\in R$   $L:S\rightarrow2^\Phi$   全路径(full path) $x=(s_0,s_1,\cdots)$：$\forall i\in\mathbb{N}:(s_i,s_{i+1})\in R$ $\mathfrak{M},s_0\vDash\varphi$: 在 $\mathfrak{M}$ 的状态 $s_0$ 为真  (S1)  $\mathfrak{M},s_0\vDash p\iff p\in L(s_0)$ $\mathfrak{M},s_0\vDash\perp$ 从不成立   (S2)  $\mathfrak{M},s_0\vDash\varphi_1\vee\varphi_2\iff\mathfrak{M},s_0\vDash\varphi_1$ 或 $\mathfrak{M},s_0\vDash\varphi_2$ $\mathfrak{M},s_0\vDash\neg\varphi\iff\mathfrak{M},s_0\vDash\varphi$ 不成立   (S3) $\mathfrak{M},s_0\vDash\exists\psi\iff\mathfrak{M}$ 中存在全路径 $x,\mathfrak{M},x\vDash\psi$   $\mathfrak{M},x\vDash\psi$: 在 $\mathfrak{M}$ 中的全路径 $x$ 为真  (P1) $\mathfrak{M},x\vDash\varphi\iff\mathfrak{M},s_0\vDash\varphi$ (P2)  $\mathfrak{M},x\vDash\psi_1\vee\psi_2\iff\mathfrak{M},x\vDash\psi_1$ 或 $\mathfrak{M},x\vDash\psi_2$ $\mathfrak{M},x\vDash\neg\psi\iff\mathfrak{M},x\vDash\psi$ 不成立   (P3)  $\mathfrak{M},x\vDash\psi_1\mathcal{U}\psi_2\iff\exists j(\mathfrak{M},x^j\vDash\psi_2$且$\forall k&amp;lt;j(\mathfrak{M},x^k\vDash\psi_1))$ $\mathfrak{M},x\vDash\bigcirc\varphi\iff\mathfrak{M},x^1\vDash\psi$      CTL  S1,S2,S3 S4  $\mathfrak{M},s_0\vDash\exists\bigcirc\varphi\iff\exists s_1,Rs_0s_1,\mathfrak{M},s_1\vDash\varphi$ $\mathfrak{M},s_0\vDash\exists\square x,\forall i\in\mathbb{N},\mathfrak{M},s_i\vDash\psi$ $\mathfrak{M},s_0\vDash\exists(\varphi_1\mathcal{U}\varphi_2)\iff\exists x,\exists j(\mathfrak{M},s_j\vDash\psi_2$且$\forall k&amp;lt;j(\mathfrak{M},s_k\vDash\psi_1))$    语法 正规模态逻辑 $\Lambda$  包含 TAUT,K,Dual 对规则 MP,US,N 封闭  $K$  公理  TAUT: 所有重言式 K: $\square(p\rightarrow q)\rightarrow(\square p\rightarrow \square q)$ Dual: $\diamondsuit p\leftrightarrow\neg\square\neg p$   规则  MP (Modus Ponens): $\frac{\varphi\rightarrow\psi,\varphi}{\psi}$ US (Uniform Substitutious): $\frac{\varphi}{\theta}$  $\theta$ 为将 $\varphi$ 中命题符一致地替换为任意的公式而得到的公式   N (Generalization): $\frac{\varphi}{\square\varphi}$   $K$-系统对应基本模态逻辑  soundness completeness   最小的正规模态逻辑为 $K$  $K\Gamma$  $K4$  增加公理 $\diamondsuit\diamondsuit p\rightarrow\diamondsuit p$ 对应传递框架    其它  定理等级  Fundamental Thm Main Thm Theorem Lemma Proposition Law Thesis   三次数学危机  小数$\rightarrow$无理数  希伯索斯   $\infty$ (牛顿-莱布尼茨)  柯西   罗素悖论 (集合论)  公理逻辑论      </description>
    </item>
    
    <item>
      <title>3. Shell UI</title>
      <link>https://zhengzangw.com/notes/command-line/3-shell-ui/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/3-shell-ui/</guid>
      <description>Escape Code    Escape Sequence Representation     \a alert   \n newline   \t Horizontal Tab   \v Vertical Tab   &#39;,&amp;quot;,? Symbol   \nnn ASCII in octal   \xhh ASCII   \uhhhh Unicode   \uhhhhhhhh Unicode    Escape Character echo -e &amp;#34;\033[32;31mstring \033[0m&amp;#34; # Different format seperated by ; echo &amp;#34;\e[32;31mstring\e[0m&amp;#34; echo &amp;#34;\x1b[32;31mstring\x1b[0m&amp;#34;  (x): not work in iterm</description>
    </item>
    
    <item>
      <title>3-随机向量及其分布</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/3-%E9%9A%8F%E6%9C%BA%E5%90%91%E9%87%8F/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/3-%E9%9A%8F%E6%9C%BA%E5%90%91%E9%87%8F/</guid>
      <description> 离散型随机变量  概率分布表（列联表） 联合分布函数：$F(x,y)=P(X\leq x,Y\leq y)$  $p_{ij}=F(x_i,y_j)-F(x_i,y_{j-1})-F(x_{i-1},y_j)+F(x_{i-1},y_{j-1})$   边缘分布函数：$F_X(x)=F(x,+\infty)$  （离散型向量）边缘分布率   条件概率: $P(Y=y_j|X=x_i)=\frac{p_{ij}}{p_i}$   离散型随机变量分布  多项分布 $(X_1,X_2)\sim M(n;p_1,p_2,p_3)$: $P(X_1=k_1, X_2=k_2)=\frac{n!}{k_1!k_2!(n-k_1-k_2)!}p_1^{k_1}p_2^{k_2}(1-p_1-p_2)^{n-k_1-k_2}$  $X|_{Y=k_2}\sim B(n-k_2,\frac{p_1}{1-p_2})$   多元超几何分布：$P(X_1=n_1,X_2=n_2)=\frac{C_{N_1}^{n_1}C_{N_2}^{n_2}C_{N_3}^{n_3}}{C_N^n}$   连续性随机变量  联合分布函数：$F(x,y)=\int^x_{-\infty}\int^y_{-\infty}p(u,v)dudv$ 为 联合概率密度函数：$p(x,y)$ $p(x,y)$ 为概率密度函数的充要条件  $p(x,y)\geq0$ $\int_{-\infty}^{\infty}p(x,y)d xdy=1$   $F(x,y)$ 为分布函数的充要条件  $0\leq F(x,y)\leq 1$ $F(-\infty,y)=\lim_{x\rightarrow\infty}F(x,y)=F(x,-\infty)=\lim_{y\rightarrow\infty}=F(-\infty,-\infty)=0,F(\infty,\infty)=1$ 右连续：$F(x,y)=\lim_{z\rightarrow x^+}F(z,y)=\lim_{z\rightarrow y+}F(x,y)$ $x_1\leq x_2,y_1\leq y_2,F(x_2,y_2)-F(x_1,y_2)-F(x_2,y_1)+F(x_1,y_1)\geq0$   $P(x_1&amp;lt;X\leq x_2,y_1&amp;lt;Y\leq y_2)=\int_{x_1}^{x_2}\int_{y_1}^{y_2}p(u,v)dudv$ $P((X,Y)\in G)=\iint_Gp(x,y)dxdy$ $\frac{\partial^2F(x,y)}{\partial x\partial y}|_{(x_0,y_0)}=p(x_0,y_0)$ $X$ 的边缘分布 $F_X(x)=\int_{-\infty}^x\int_{-\infty}^{\infty}p(u,v)dudv$  边缘密度函数 $p_X(x)=\int_{-\infty}^{\infty}p(x,v)dv$   条件分布函数 $F_{Y|X=x}(y)=P(Y\leq y|X=x)=\int^y_{-\infty}\frac{p(x,v)}{p_X(x)}dv$  $p_{X|Y=y}(x)=\frac{p(x,y)}{p_Y(y)}$ $p(x,y)=p_{Y|X=x}(y)p_X(x)$     连续性随机变量分布  （平面）均匀分布 $p(x,y)=\frac{1}{S},(x,y)\in G$ 二维正态分布 $(X,Y)\sim N(\mu_1,\mu_2,\sigma_1^2,\sigma_2^2,\rho)$: $p(x,y)=\frac{1}{2\pi\sigma_1\sigma_2\sqrt{1-\rho^2}}e^{-\frac{1}{2(1-\rho^2)}((\frac{x-\mu_1}{\sigma_1})^2-2\rho(\frac{x-\mu_1}{\sigma_1})(\frac{x-\mu_2}{\sigma_2})+(\frac{y-\mu_2}{\sigma_2})^2)}$  $\text{cov}(X,Y)=\sigma_1\sigma_2\rho$   $N$ 维正态分布：$p(x)=\frac{1}{(2\pi)^\frac{n}{2}|\Sigma|^\frac{1}{2}}e^{-\frac{1}{2}|(x-\mu)\Sigma^{-1}(x-\mu)^T|}$  $Y|_{X=x}\sim N(\mu_2+\rho\frac{\sigma_2}{\sigma_1}(x-\mu_1), \sigma_2^2(1-\rho^2))$ 独立性与不相关等价   瑞利分布：$X,Y\sim N(0,1), Z=\sqrt{X^2+Y^2}$, $p(z)=ze^{-\frac{z^2}{2}},z\geq0$   随机变量相互独立：  $P(X=x_i,Y=y_j)=P(X=x_i)P(Y=y_j)$ $X_1,\cdots,X_n$ 相互独立，则 $Y_1=g_1(X_1,\cdots,X_m)$ 和 $Y_2=g_2(X_{m+1},\cdots,X_n)$ 相互独立 $p(x_1,\cdots,x_n)=p_1(x_1)p_2(x_2)\cdots p_n(x_n)$ $F(x,y)=F_X(x)F_Y(y)$ 独立性：存在 $g_1(x),g_2(y)$ 使得 $p(x,y)=g_1(x)g_2(y)$   二维随机向量函数分布  离散型  $P(Z=z_k)=P(g(X,Y)=z_k)=\sum_{g(x_i,y_j)=z_k}p_{ij}$ 随机变量和 $Z=X+Y$ $P(Z=z_k)=\sum_{x_i}P(X=x_i,Y=z_k-x_i)$ 随机变量商 $Z=X/Y$ $P(Z=z_k)=\sum_{y_j}P(X=z_k*y_j,Y=y_j)$   连续型  $F_Z(z)=P(Z\leq z)=P(g(X,Y)\leq z)=\iint_{g(x,y)\leq z}p(x,y)dxdy$ 卷积公式：$p_Z(z)=\int^{+\infty}_{-\infty}p(x,z-x)dx$ 商的分布：$p_Z(z)=\int^{+\infty}_{-\infty}|y|p(zy,y)dy$ 最大值：$p_M(z)=p_X(z)F_Y(z)+F_X(z)p_Y(z)$  独立：$F_M(z)=F_X(z)F_Y(z)$   最小值：$p_N(z)=p_X(z)(1-F_Y(z))+p_Y(z)(1-F_X(z))$  独立：$F_N(z)=1-(1-F_X(z))(1-F_Y(z))$     $(U,V)$ 满足存在唯一逆变换且 $J(u,v)\not=0$，则 $p&#39;(u,v)=p(x(u,v),y(u,v))|J(u,v)|$    </description>
    </item>
    
    <item>
      <title>传输媒介</title>
      <link>https://zhengzangw.com/notes/data-communication/2-%E4%BC%A0%E8%BE%93%E5%AA%92%E4%BB%8B/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/2-%E4%BC%A0%E8%BE%93%E5%AA%92%E4%BB%8B/</guid>
      <description>信道指标：数据率，传输距离 电磁波频谱：($10^2$)ELF,VF,VLF,LF,MF,HF,VHF,UHF,SHF,EHF,$10^{12}$,$10^{13}$,$10^{14}$,可见光  导向传输媒介  guided media：电磁波在导线引导下沿某一物理路径前进 点对点：导向媒体在两个设备之间提供了一条仅被这两个设备共享的直连链路  双绞线  扭绞结构 模拟传输  放大器：5km 有限带宽：1MHz   数字传输  转发器：2km 数据率：100Mbps  短距离：1Gbps   随频率增高迅速增加 易受信号反射或回波损耗影响   UTP 非屏蔽双绞线 STP 屏蔽双绞线  金属箔双绞线 FTP 屏蔽的双绞线 F/UTP 完全屏蔽的双绞线 S/FTP   568-C标准 与 ISO/IEC 11801标准  5e/D 6/E 6A/E$_{A}$ 7/F 7A/F$_{A}$   插入损耗（insertion loss, 模拟）  从发送系统到接受系统链路上的衰减 频率的递增函数   近端串扰（near end crosstalk, NEXT）  从一对导体到另一对导体上的信号耦合，越大越好 端现象   衰耗串扰比： $\text{ACR}{dB}=\text{NEXT}{dB}-A_{dB}$  $\text{ACR}&amp;gt;0\Rightarrow P_r&amp;gt;P_c$    同轴电缆 光纤 Optical Fiber  优点  容量大：100M-100Gbps/km 体积小 衰减小 电磁隔离 转发器间隔更远   分类  多模突变：入射角平缓的光束被反射并沿着纤维向前转播，其他被周围的物质吸收 多模渐变：中心较高的折射率使得光线沿轴线前进的速度比靠近覆层的慢，光束呈现螺旋状 单模：仅有一个角度能够通过传输纤维   光纤模块  GBIC 接 LC光纤连接器 SFP 接 SC光纤连接器    无导向媒介  unguided media 真空、空气、海水  天线  发射电磁能量和接受电磁能量的电导体 双向通行中，同一个天线可以同时收发 天线种类  各向同性天线 抛物线反射天线   天线增益：$G_{dB}=10\lg(\frac{P_2}{P_1})$, $P_1$ 为定向天线发射功率，$P_2$ 为参考天线功率 有效面积：$G=\frac{4\pi A_e}{\lambda^2}$  $A_e=0.</description>
    </item>
    
    <item>
      <title>德奥艺术歌曲</title>
      <link>https://zhengzangw.com/notes/music-review/%E5%BE%B7%E5%A5%A5%E8%89%BA%E6%9C%AF%E6%AD%8C%E6%9B%B2/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/music-review/%E5%BE%B7%E5%A5%A5%E8%89%BA%E6%9C%AF%E6%AD%8C%E6%9B%B2/</guid>
      <description>classical music: 巴洛克时期到20世纪早期 维也纳：奥地利共和国首都🇦🇹 德语文化圈  德国，奥地利，列支敦士登，瑞士，卢森堡，比利时   古典音乐命名  作品号：唯一标识某作曲家每部作品，有出版商/编目者编号  Op. 时间顺序  no. 作品中多首乐曲   BWV. 巴赫（作品体裁） HWV. 亨廷顿 KV. 莫扎特 D. 舒伯特  奥地利音乐学家多依奇编号     系列号 组曲号：一部组曲各个曲目编号 乐章号   Lied 利德  lieder 民谣，乐曲   舒伯特  魔王 D328 纺车旁的格丽卿 D118 歌德 野玫瑰 D257 鳟鱼 D550 摇篮曲 D527 即兴曲三首其二 D946   莫扎特  紫罗兰 K.476 渴望春天 K.596   舒曼  献词 Op.</description>
    </item>
    
    <item>
      <title>Ray-Tracing</title>
      <link>https://zhengzangw.com/notes/rendering/3-ray-tracing/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/rendering/3-ray-tracing/</guid>
      <description>Introduction  Good at simulating specular effects Rays are reflected, refracted or absorbed 三角形法向：$N=\frac{(P_1-P_0)\times(P_2-P_0)}{|(P_1-P_0)\times(P_2-P_0)|}$ 计算每个顶点法向：$N_v=\frac{\sum_{i=1}^k}{|\sum_{i=1}^k|}$ Tangent Space:  normal vecotr $N$ tangent vector $T$ bitangent vector $B$    求交  Shpere  Definition: $x^2+y^2+z^2-r^2=0$ Definition: $x=r\sin\theta\cos\phi,y=r\sin\theta\sin\phi,z=r\cos\theta$   Cylinder  Definition: $\phi=u\phi_{\max},x=r\cos\phi,y=r\sin\phi,z=z_{\min}+v(z_{\max}-z_{\min})$   Disk  Definition: $\phi=u\phi_{\max},x=((1-v)r_i+vr)\cos\phi,y=((1-v)r_i+vr)\sin\phi,z=h$   Triangle Mesh  Acceleration  Testing each object for each ray is slow Fewer Rays  Adaptive sampling: 减少采样，内插 depth control   Generalized Rays  beam tracing cone tracing pencil tracing   Faster Intersection  Object subdivision approaches  BVH (Bounding Volumne boxes)：recursively finding bounding box of objects and split objects into two groups   Space subdivision approaches   Uniform Grid</description>
    </item>
    
    <item>
      <title>数据压缩</title>
      <link>https://zhengzangw.com/notes/multimedia/3-compression/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/multimedia/3-compression/</guid>
      <description>无损数据压缩  压缩率 = 未压缩/压缩后 Huffman 编码 算术编码  任意消息用 0 到 1 之间的实数进行编码 根据出现概率确定区间   词典编码 RLE（行程）编码  音频数据压缩标准  话音信号特点  幅度的非均匀分布 样本相关 周期相关 基音相关 静止稀疏 长时间自相关   话音编码器  波形编译码器  PCM (G.711 64kb/s) 增量调制 $\Delta M$: CFDM, CVSD APCM DPCM ADPCM (G.721 32kb/s) SB-ADPCM (G.722 48kb/s + 16kb/s)   音源编译码器  LPC 线性预测编码   混合编译码  MPE, RPE, CELP     人类听觉特点  听觉掩蔽效应：一种频率的声音阻碍听觉系统感受另一种频率的声音  频域掩蔽：同时，高纯掩低纯 时域   临界频带   MPEG1 Audio  Layer1: 频带相等子带（6bit 量化），频域掩蔽特性 Layer2：+时间掩蔽特性，低频度 4 比特，中频带 3 比特，高度 2 比特 Layer3：非等宽 + Huffman + MDCT   MPEG2 Audio  MPEG-2 BC：支持 Linear PCM 和 Dolby AC-3 编码 MPEG-2 AAC：利用掩蔽特性减少数据量，并把量化噪声分散到各个子带中，用全局信号把噪声掩蔽掉   MPEG4  图像数据压缩标准  gif, png：词典编码 bmp: RLE JPEG(.</description>
    </item>
    
    <item>
      <title>Inheritance</title>
      <link>https://zhengzangw.com/notes/advanced-programming/3-inheritance/</link>
      <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/3-inheritance/</guid>
      <description>单继承   继承关系中存在两个类：基类（或称父类）和派生类（或称子类）
派生类拥有基类所有成员，并可以
 定义新的成员 对基类的一些成员函数重定义  class &amp;lt;派生类名&amp;gt;: [&amp;lt;继承方式&amp;gt;] &amp;lt;基类名&amp;gt;
  派生类不会继承基类的构造函数、赋值操作符重载函数、析构函数
  定义派生类时一定要见到基类的定义
  友元性不继承：如果在派生类中没有显式说明，基类的友元不是派生类的友元；如果基类是另一个类的友元，而该类没有显式说明，则派生类也不是该类的友元
  派生类不能直接访问基类的私有成员
  protected: 解决继承与封装的矛盾
  作用域
 对基类而言，派生类成员标识符的作用域是嵌套在基类作用域中的 派生类中定义了与基类同名的成员，则基类的成员名在派生类的作用域内不直接可见 使用全局函数，加全局作用域 ::  class A { int x,y; public: void f(); void g(); }; class B: public A { int z; public: void f(int); //不是重载  void h() { f(1); A::f(); } //or using A::f  //f()  }; B b; b.</description>
    </item>
    
    <item>
      <title>环论</title>
      <link>https://zhengzangw.com/notes/modern-algebra/ring/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/modern-algebra/ring/</guid>
      <description>环：$R$为非空集合，其上有两个代数运算$+,\times$，且 $R$ 对于加法构成 Abel 群， 对于乘法构成半群，且满足分配律：$a(b+c)=ab+ac,(b+c)a=ba+ca$ 交换环：环的乘法有交换律 幺环：环 $R$ 对于乘法构成幺半群，则乘法的单位元$e$称为单位元 零因子：若 $ab=0,a\not=0,b\not=0$ 则称 $a$ 为左零因子， $b$ 为右零因子 整环：没有零因子的交换幺环 对于 $R$ 中元素 $a$，定义 $na=a+a+a+\cdots+a$，$0a\equiv 0$，$(-n)a=-(na)$ 定理  $a_1,\cdots,a_m,b_1,\cdots,b_m,(\sum_{i=1}^na_i)(\sum_{i=1}^mb_i)=\sum_{i=0}^n\sum_{j=0}^ma_ib_j$ 环 $R$ 无零因子 $\iff$ 环 $R$ 有消去律 $a\in R, m\in Z, 0a=a0=0, a(mb)=(ma)b=m(ab)$ 交换环 $R$， $a,b\in R,n\in Z$ 有 $(a+b)^n=a^n+\sum_{k=1}^{n-1}\binom{n}{k}a^kb^{n-k}+b^n$   子环：$R$ 为环，$S$ 为 $R$ 的非空子集，若 $S$ 按 $R$ 中加乘法在 $S*S$ 上限制也构成环，则 $S$ 为 $R$ 的子环，记为 $S\leq R$  $S\leq R\iff S$ 对减法封闭且 $S$ 对乘法封闭 零环：最小子环 ${0}$ 非零环加乘法单位元不同   理想：$R$ 为环，$\emptyset\not=I\leq R$，若 $I$ 对加减法封闭且 $a\in I,r\in R$ 时，$ar,ra\in I$，则 $I$ 为环 $R$ 的理想，$I\unlhd R$ $a,b\in R$，记$a\equiv b(\bmod\ I)$ 表示 $a-b\in I$ （$a,b$ 模理想 $I$ 同余） 同态：$\sigma$ 为环 $R$ 到 $\overline{R}$ 的映射，若$\forall a,b\in R,\sigma(a+b)=\sigma(a)+\sigma(b),\sigma(ab)=\sigma(a)\sigma(b)$，则 $\sigma$ 为 $R$ 到 $\overline{R}$ 的同态  单同态：单射 满同态：满射sudo 双射：同构 $R\cong \overline{R}$   同态核：$ker\sigma={a\in R:\sigma(a)=0}$ 同态限：$Im\sigma={\sigma(a):a\in R}$ 环的同态基本定理：$\sigma$ 为环 $R$ 到 $\overline{R}$ 的同态  $ker\sigma$ 为理想 $Im\sigma\leq \overline{R}$ $R/ker\sigma\cong Im\sigma$   $\sigma$ 为环 $R$ 到 $\overline{R}$ 的同态，$I=ker\sigma$，$R$的包含 $I$ 的子环与 $Im\sigma$ 的子环一一对应($I\leq S\leq R,\sigma(S)\leq Im\sigma$)。$R$ 的包含 $I$ 的理想与 $Im\sigma$ 的理想一一对应 ($I\leq J\unlhd R,\sigma(J)\unlhd Im\sigma$)，且 $R/J\cong \sigma(R)/\sigma(J)$  $R/I$ 理想形如 $J/I,I\leq J\unlhd R$ $I\leq J\unlhd R,(R/I)/(J/I)=R/J$   $S\leq R, I\unlhd R$ 则 $(I\cap S)\unlhd S,I+S\unlhd R,S/(I\cap S)\cong (I+S)/I$ $(m,n)[m,n]=mn$  中国剩余定理  外直和：$R_1,\cdots,R_n$ 为环， $R=R_1\times\cdots R_n={r=\langle r_1,\cdots,r_n\rangle}$。定义 $R$ 上加法和乘法。在此加法乘法之下构成环。  $R_i^\star ={\langle0,\cdots,a_i,\cdots,0\rangle :a_i\in R_i}\cong R_i\unlhd R$ $R$ 中每个元素可唯一的表成 $x_1+\cdots+x_n,x_i\in R_i^\star $   内直和：$R_1,\cdots,R_n$ 为环 $R$ 的理想，若 $R$ 中每个元素可唯一的表成 $x_1+\cdots+x_n,x_i\in R_i$ 直和：内直和同构与外直和 由 $X$ 生成的理想：包含 $X$ 的最小理想。$\langle X \rangle=\cap_{X\leq I\unlhd R} I$  $R$ 为幺环时， $\langle X \rangle={\sum_{i=1}^n r_ix_is_i:x_i\in X,r_i\in R,s_i\in R}$ $R$ 为交换幺环时，$\langle X \rangle={\sum_{i=1}^n r_ix_i:x_i\in X,r_i\in R}$  $(a_1,\cdots,a_n)={\sum_{i=1}^nr_ia_i:r_i\in R}$ $(a)=Ra$     $I,J\unlhd R$  $I+J\equiv{i+j:i\in I,j\in J}$ $IJ\equiv{\sum_{i=1}^na_ib_i:a_i\in I,b_j\in J}=(ab:a\in I,b\in J)$   $I,J$ 为环 $R$ 的理想，若 $I+J=R$ 则 $I,J$ 互素 $I,J,K\unlhd R$  $I,J,K$ 都互素时， $I$ 与 $JK$ 互素 $I,J$ 互素时，$IJ+JI=I\cap J$  交换环中，$IJ=I\cap J$     The Chinese Reminder Theorem(CRT)  幺环 $R$ 的理想 $A_1,\cdots,A_k$ 互素，则 $R/\cap_{i=1}^kA_i\cong R/A_1\oplus\cdots\oplus R/A_n$，若 $R$ 交换，则 $R/(A_1\cdots A_n)\cong R/A_1\oplus\cdots\oplus R/A_n$ $m_1,\cdots,m_k$ 为互素正整数，$a_1,\cdots a_k$ 为整数，则同余式组 $x\equiv a_i (\bmod\ m_i)$ 有通解 $x=\sum_{i=1}^{k}a_iM_iM_i^\star (\bmod M)$  $M = m_1\cdots m_k$ $M_i = M/a_i$ $M_i^\star M_i\equiv 1(\bmod\ m_i)$   幺环 $R$ 中，$u\in R$ 整除 $R$ 单位元 1，即 $u$ 乘法可逆，则 $u$ 为 $R$ 的单位  单位群：$U(R)$      例子  整数环：$\langle Z,+,\times\rangle$为环结构，$Z$ 为整环  理想：${mq:m\in Z}=(m)$ $Z/mZ={\overline{a}=a+mI:a\in Z}$ $(m)\cap(n)=([m,n])$ $(m)(n)=(mn)$ $(m)+(n)=((m,n))$ $m&amp;gt;1,(m)$ 为极大理想 $\iff (m)$ 为素理想 $\iff$ $m$ 为素数   模 $m$ 的剩余类环：$Z/mZ$ 按剩余类的加法和乘法构成交换幺环  $Z/pZ$ 为整环   $R$上一元多项式环：$R$ 为环，$R={\sum_{i=0}^na_ix^i:a_i\in R}$ 按多项式的加法和乘法构成环  $R$ 有单位元 $1$ 时， $x^0$ 为 $R$ 单位元 $R$ 为整环，则 $R$ 为整环   $R$上$n$阶矩阵构成的环：$M_n(R)={n阶方阵 A=(a_{ij}),a_{ij}\in R}$ 按矩阵的加法和乘法构成环  $a$所在的模 $I$ 同余类：$\overline{a}=a+I$ 商环：$R/I ={\overline{a}=a+I:a\in R}$  $\overline{a}+\overline{b}=\overline{ab}$ $\overline{a}\overline{b}=\overline{ab}$      素理想与极大理想  素理想：$R$ 为交换幺环，$I\not=R$ 为 $R$ 的理想满足$\forall a,b\in R, ab\in I$ 则 $a\in I$ 或 $b\in I$.</description>
    </item>
    
    <item>
      <title>3. Transport Layer</title>
      <link>https://zhengzangw.com/notes/conputer-network/3-transport-layer/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/3-transport-layer/</guid>
      <description>提供服务  多路复用与多路分解：主机间的交付扩展到进程间交付 完整性检验 可靠数据传输 (TCP)  可靠：面向连接的LLC服务的局域网，面向连接的分组交换网络 不可靠：使用IP的网际互联，无确认LLC服务的局域网   流量控制 (TCP) 拥塞控制 (TCP)  多路复用与多路分解  套接字：源端口号，目的端口号，源IP，目的IP  不同套接字创建进程/线程   端口号 0-65535  0-1023 周知端口号   UDP 套接字：由(目的IP, 目的端口号)标识 TCP 套接字：由(源端口号，目的端口号，源IP，目的IP)标识  UDP RFC 768
 UDP 优势  防止 TCP 的拥塞控制，应用层 进行拥塞控制 无需连接建立 无连接状态 分组首部开销小   完整性检验：因特网检验和  基于端到端原则    UDP 报文段首部
   Source Port Destination Port Length Checksum     16 bits 16 16 16    可靠数据传输  经完全可靠信道的可靠数据传输 rdt1.</description>
    </item>
    
    <item>
      <title>3-线性空间</title>
      <link>https://zhengzangw.com/notes/linear-algebra/3-%E7%BA%BF%E6%80%A7%E7%A9%BA%E9%97%B4/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/linear-algebra/3-%E7%BA%BF%E6%80%A7%E7%A9%BA%E9%97%B4/</guid>
      <description>线性空间  线性空间  加法  交换律 结合律 零元素 负元素   乘法  单位元素 结合律 分配率 1 分配率 2   注：  检验加法、数乘是否封闭 检验 0 元素存在 检验负元素存在     极大线性无关组  线性无关 加入任意其余向量，均线性相关 求极大线性无关组  $[a_i]-&amp;gt;[b_i]$ $[b_j]$线性无关$\Rightarrow [a_j]$线性无关 $b_t=\sum{k_jb_j}\Rightarrow a_t=\sum{k_ja_j}$   两个线性无关组$\alpha,\beta$正交($\alpha^T\beta=0$)则$\alpha,\beta$为线性无关组。   坐标：  $\alpha = \sum_{i=1}^nx_ie_i$记为$\alpha=(e_1,\cdots,e_n)(x_1,\cdots,x_n)^T$   过渡矩阵  从$\beta_1,\cdots,\beta_m$到$\alpha_1,\cdots,\alpha_m$的过渡矩阵 A: $(\alpha_1,\cdots,\alpha_m) =(\beta_1,\cdots,\beta_m)A$ 坐标变换: $X=A^{-1}Y$ 求过渡矩阵  $[B|C]\rightarrow[I|A]$      子空间  判别条件  非空 加法封闭 数乘封闭   子空间交$W_1\cap W_2$也是子空间 子空间并不一定是子空间 子空间和$W_1+W_2={\alpha_1+\alpha_2|\alpha_1\in W_1,\alpha_2 \in W_2}$也是子空间 直和：$V=W_1+W_2$,若$\forall \alpha\in V$有唯一分解$\alpha=\beta_1+\beta_2$, 则$V=W_1\oplus W_2$  以下三命题等价：  $V=W_1\oplus W_2$ $W_1\cap W_2={0}$ $0\in V$ 有唯一分解 $\dim(V) = \dim(W_1) + \dim(W_2)$   $V=W_1\oplus W_2$ 则$W_1$的基和$W_2$的基合并为$V$的基   维数公式：$\dim(W_1\cap W_2)+\dim(W_1+W_2)=\dim(W_1)+\dim(W_2)$  线性映射  线性映射$\mathbb{A}:V_1\rightarrow V_2$:  $\mathbb{A}(\alpha+\beta)=\mathbb{A}(\alpha)+\mathbb{A}(\beta)$ $\mathbb{A}(k\alpha) = k\mathbb{A}(\alpha)$   $\mathbb{A}\circ\mathbb{B}$ 亦为线性映射 线性映射$\mathbb{A}$关于基$e_1,\dots,e_n$与$\epsilon_1,\dots,\epsilon_n$的表示矩阵 A: $\epsilon_1,\dots,\epsilon_n$ 到$\mathbb{A}(e_1,\dots,e_n)$ 的过渡矩阵 线性算子在$\epsilon_1,\dots,\epsilon_n$下的表示矩阵为$\epsilon_1,\dots,\epsilon_n$到$\mathbb{A}(\epsilon_1,\dots,\epsilon_n)$下的表示矩阵 $\alpha\in V_1$ 关于$e_1,\dots,e_n$的坐标为$X$,则$\mathbb{A}(\alpha)$关于$\epsilon_1,\dots,\epsilon_n$的坐标为$AX$ 线性算子（线性变换）$\mathbb{A}: V\rightarrow V$  欧式空间  内积  $&amp;lt;a,b&amp;gt;=&amp;lt;b,a&amp;gt;$ $&amp;lt;a_1+a_2,b&amp;gt;=&amp;lt;a_1,b&amp;gt;+&amp;lt;a_2,b&amp;gt;$ $&amp;lt;ka,b&amp;gt;=k&amp;lt;a,b&amp;gt;$ $&amp;lt;a,a&amp;gt;\geq0$   范数: $||\alpha||=\sqrt{&amp;lt;\alpha,\alpha&amp;gt;}$  $||k\alpha||=k||\alpha||$   Cauchy-Sohwarz Inequality: $|&amp;lt;\alpha, \beta&amp;gt;|\leq||\alpha||||\beta||$  等号成立：$\alpha,\beta$线性相关 三角不等式： $||\alpha+\beta||\leq||\alpha||+||\beta||$ 等号成立当且仅当同向   余弦定理：$||X-Y||^2=||X||^2+||Y||^2-2||X||||Y||\cos\theta$  $&amp;lt;X,Y&amp;gt;=||X||||Y||\cos\theta$ $\cos\theta=\frac{&amp;lt;\alpha,\beta&amp;gt;}{||\alpha||||\beta||}\in(0,\pi)$   正交：$\alpha\in V,\beta\in V, &amp;lt;\alpha, \beta&amp;gt;=0$ 勾股定理：$||\sum_{i=1}^k\alpha_i||^2=\sum_{i=1}^k||\alpha_i||^2$ 度量矩阵：$A=(&amp;lt;e_i, e_j&amp;gt;)\in M_{n*n}$ 关于$e_1,\dots,e_n$的度量矩阵, 对称正定 $&amp;lt;\alpha, \beta&amp;gt;=X^TAY$ 正交向量组线性无关 向量$\alpha$的单位化：$\frac{\alpha}{||\alpha||}$ 正规基：正交基$e_1,\dots,e_n$有$||e_i||=1$ 正交基度量矩阵为对角阵，对角元为正 正规基度量矩阵为 I Schmidt 正交化  $\beta_k=\alpha_k-\sum_{i=1}^{k-1}\frac{\langle\alpha_k,\beta_i\rangle}{\langle\beta_i,\beta_i\rangle}\beta_i$ $e_k=\frac{\beta_k}{||\beta_k||}$   正交算子（正交变化、保距变换）： 线性算子$\mathbb{A}$, $\langle\mathbb{A}\alpha,\mathbb{A}\beta\rangle=\langle\alpha,\beta\rangle$ 正交$\iff$ $||\mathbb{A}\alpha||=||\alpha||$ $\iff$ 正规基在$\mathbb{A}$下仍是正规基 正交阵：$A^T=A^{-1}$ $\mathbb{A}$在正规基下的表示矩阵为$A$，则$\mathbb{A}$为正交算子$\iff$正交阵 正交阵$A,B$，$A^T(A+B)B^T=(A+B)^T$  </description>
    </item>
    
    <item>
      <title>Chapter 3</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/chapter3/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/chapter3/</guid>
      <description> 汇编格式  AT&amp;amp;T: op src, dst Intel: op dst, src   Intel处理器  8086(16)-80286-i386(32)-i486(FPU)-Pentium-PentiumPro(P6)-Pentium/MMX-PentinumIII(SSE)-Pentium4E(x86-64)-Core2(多核)-Core i7   i386寄存器组织  定点寄存器  EAX,EBX,ECX,EDX,ESP,EIP,ESI,EDI EIP,EFLAGS CS,SS,DS,ES,FS,GS   寻址模式  立即寻址，寄存器寻址 基址加比例变址加位移寻址：$LA=(SR)+(B)+(I)*S+A$ 相对寻址   浮点处理架构  x87 FPU: ST(0)-ST(7),80位。控制寄存器、状态寄存器、标记寄存器各一个。组织为浮点寄存器栈。64位尾数。 MMX指令: MM0-MM7，通常借用ST(0)-ST(7)，使用64位 SSE指令集（兼容MMX，采用SIMD（单指令多数据）技术）: 增加8个128位SSE专用多媒体扩展通用寄存器XMM0-XMM7 AVX指令集：矢量扩展指令集 FMA指令集：fused multiply-accumulate   过程调用  储存传递参数 保存返回地址，转移控制权 被调用者保存现场，并分配空间 执行函数体 恢复现场，释放空间 取出返回地址，转移到调用者函数   非静态局部变量的储存分配方式属于未定义行为；不同变量的地址除(!=和==)外为未定义行为 缓冲区溢出防范  ASLR(Address Space Layout Randomization) 栈破坏检测 可执行代码区域限制   char可为signed char，也可为unsigned char，为不确定类型 union的存放顺序是所有成员从低地址开始，利用该特性可测试CPU的大/小端方式    </description>
    </item>
    
    <item>
      <title>Electromagnetism</title>
      <link>https://zhengzangw.com/notes/physics/physics-electromagnetism/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/physics/physics-electromagnetism/</guid>
      <description>&lt;h1 id=&#34;electromagnetism&#34;&gt;Electromagnetism&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Coulomb&amp;rsquo;s Law: $\overrightarrow{F_{21}} = -\overrightarrow{F_{12}} = k\frac{q_1q_2}{r_{12}^3}\overrightarrow{r_{12}}$&lt;/li&gt;
&lt;li&gt;Electric Field: $\overrightarrow{E} \equiv lim_{q\rightarrow 0}\frac{\vec F}{q} = \frac{1}{4\pi\epsilon}*\frac{q}{r^3}\overrightarrow{r_{12}}$&lt;/li&gt;
&lt;li&gt;Dipole moment(dipole field): $p\equiv q*2a$&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>4. Data Compression</title>
      <link>https://zhengzangw.com/notes/information-theory/4-data-compression/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/information-theory/4-data-compression/</guid>
      <description>Existence of Code A source code $C$ for a random variable $X$ is a mapping from $\mathcal{X}$ to $D^*$
 $X$: the range of $X$ $D$-ary alphabet is $\mathcal{D}={0,1,\cdots,D-1}$ $C(x)$: codeword for $x$ $l(x)$: length of $C(x)$ $L(C)=\sum_{x\in\mathcal{X}}p(x)l(x)$: the expected length of a source code $C(x)$ for a random variable rate $R$: average length  Nonsigular code
 every element of the range $X$ maps into a different string in $D^*$ $C^*$: extension of a code $C$ is mapping from finite length strings of $X$ to finite-length strings of $D$, $C(x_1x_2\cdots x_n)=C(x_1)C(x_2)\cdots C(x_n)$ Uniquely decodable: extension is nonsigular  Prefix Code (instantaneous code)</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>https://zhengzangw.com/about/publications/</link>
      <pubDate>Mon, 07 Dec 2020 21:33:19 +0800</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/about/publications/</guid>
      <description>See Google Scholar.</description>
    </item>
    
    <item>
      <title>4-RNN</title>
      <link>https://zhengzangw.com/notes/deep-learning/4-rnn/</link>
      <pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/4-rnn/</guid>
      <description>记忆能力   延时神经网络：非输出层前增加延时器
 $h_t^{(l)}=f(h_t^{(l)},h_{t-1}^{(l-1)},\cdots,h^{(l-1)}_{t-K})$ 在时间维度上共享权值    有外部输入的非线性网络：每个时刻 $t$ 有一个外部输入，产生一个输出 $y_t$
 自回归模型：$y_t=\omega_0+\sum_{k=1}^K\omega_ky_{t-k}+\epsilon_t$ 有外部输入的非线性自回归模型：$y_t=f(x_t,x_{t-1},\cdots,x_{t-{K_x}},y_{t-1},y_{t-2},\cdots,y_{t-K_y})$    循环神经网络：$h_t=f(h_{t-1},x_t)$
  循环神经网络的通用近似定理（2009）：以任何准确率近似任何一个非线性动力系统
$$s_t=g(s_{t-1},x_t)\newline y_t=o(s_t)$$
  图灵完备（1991）：所有图灵机可以被一个由使用 Sigmoid 型激活函数的神经元构成的全连接循环网络进行模拟
    外部记忆单元
  RNN  简单神经网络  $z_t=Uh_{t-1}+Wx_{t}+b$ $h_t=f(z_t)$ $y_t=Vh_t$   应用模式  序列到类别  $x_{1:T}=(x_1,\cdots,x_T)$ 按不同时刻输入到网络中 $y\in{1,\cdots,C}$ 序列特征：$h_T$ or $\frac{1}{T}\sum_{t=1}^Th_t$   同步序列到序列（序列标注）  $x_{1:T}=(x_1,\cdots,x_T)$ 按不同时刻输入到网络中 $y_{1:T}=(y_1,\cdots,y_T)$ $\hat y_t=g(h_t),\forall t\in[1,T]$   异步序列到序列（编码器-解码器）  $x_{1:T}=(x_1,\cdots,x_T)$ 按不同时刻输入到网络（编码器）中 $y_{1:M}=(y_1,\cdots,y_M)$ 按不同时刻输入到网络（解码器）中，初始隐状态为 $h_T$ $\hat y_t=g(h_{T+t})$     随时间反向传播（BPTT）：每层对应每个时刻  $\delta_{t,k}=\frac{\partial L_t}{\partial z_k}=\text{diag}(f&#39;(z_k))U^T\delta_{t,k+1}$ $\frac{\partial L_t}{\partial U}=\sum_{k=1}^t\delta_{t,k}h^T_{k-1}$ $\frac{\partial L}{\partial U}=\sum_{t=1}^T\sum_{k=1}^t\delta_{t,k}h^T_{k-1}$ 在一次完整前向传播和反向计算后才能更新参数   实时循环学习（RTRL） 堆叠循环神经网络（SRNN）  循环多层感知机（1991）：$h_t^{(l)}=f(U^{(l)}h_{t-1}^{(l)}+W^{(l)}h_t^{(l-1)}+b^{(l)})$   双向循环神经网络（Bi-RNN）  长程依赖问题  长程依赖问题  梯度消失：$\frac{\partial L_t}{\partial h_k}$ 梯度消失，参数 $U$ 更新主要靠相邻状态 $h_t=h_{t-1}+g(x_t,h_{t-1};\theta)$: 梯度爆炸，记忆容量不足 梯度爆炸：不稳定   长短期记忆网络（LSTM, 2000）  内部状态 $c_t=f_t\odot c_{t-1}+i_t\odot \tilde{c}_t$ 外部状态 $h_t=o_t\odot \tanh(c_t)$ 门 ${0,1}$ 遗忘门 $f_t=\sigma(W_fx_t+U_fh_{t-1}+b_f)$ 控制内部状态遗忘多少信息 输入门 $i_t=\sigma(W_ix_t+U_ih_{t-1}+b_i)$ 控制候选状态保存多少信息 输出门 $o_t=\sigma(W_0x_t+U_0h_{t-1}+b_0)$ 控制内部状态输出多少给外部状态 候选状态 $\tilde{c}t=\tanh(Wx_t+Uh{t-1}+b)$   LSTM 变体  无遗忘门(1997) peephole 连接：三个门同时依赖于上一时刻记忆单元 $c_{t-1}$ 耦合输入门与遗忘门：$c_t=(1-i_t)\odot c_{t-1}+i_t\odot\tilde{c}_t$   门控循环网络（GRU, 2014）  $h_t=z_t\odot h_{t-1}+(1-z_t)\odot \tilde{h}_t$ 更新门 $z_t=\sigma(W_zx_t+U_zh_{t-1}+b_z)$ 重置门 $r_t=\sigma(W_rx_t+U_rh_{t-1}+b_r)$ 候选状态 $\tilde{h}t=\tanh(W_cx_t+U_h(r_t\odot h{t-1})+b)$    图结构  递归神经网络（RecNN）：$h_i=f(h_{\pi_i})$  建模自然语言句子的语义   图神经网络（GNN）  $m_t^{(v)}=\sum_{u\in N(v)}f(h^{(v)}{t-1},h{t-1}^{(u)},e^{(u,v)})$ $h_t^{(v)}=g(h_{t-1}^{(v)},m_t^{(v)})$ 读出函数：$o_t=g({h_T^{(v)}|v\in V})$    </description>
    </item>
    
    <item>
      <title>4-算法设计</title>
      <link>https://zhengzangw.com/notes/problem-solving/4-algorithm-design/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/4-algorithm-design/</guid>
      <description>brute-force  枚举：遍历解空间 倍增：保存 $2^i$ 处的解用于构造所有情况 递归：原问题划归到一个子问题 搜索：建立树/图模型，以一定次序穷举 模拟 剪枝：利用数学性质缩小解空间 前缀和、差分 打表：将不同问题的解储存  Divide and Conquer 分治法 def Divide_and_Conquer(A): if (smallenough) return Conquer() Divide_and_Conquer(A_left) Divide_and_Conquer(A_right) Merge(A_left, A_right) Examples:
 归并排序： $T(n)=2T(n/2)+\Theta(n)$ 快速排序： 和最大子数组： $T(n)=2T(n/2)+\Theta(n)$ 矩阵乘法：$T(n)=8T(n/2)+\Theta(n^2)$ strassen&amp;rsquo;s algorithm: $T(n)=7T(n/2)+\Theta(n^2)$  二分法  无 merge 的分治法 问题已有序关系  // 左闭右闭 int i_left = 0, i_right = len; while (i_left &amp;lt;= i_right){ int i = (i_left + i_right)/2; if (isleft(i_left, i)) // do something  else if (isright(i, i_right)) // do somethin  else // do something } 动态规划  子问题图：顶点为子问题，边为可能选择 实现方法  top-down with memorization（记忆化搜索） bottom-up method   动态规划过程  Define structure of subproblem Set the goal Identify the recurrence -&amp;gt; make choice(binary/multi-way)  from small to large init condition   Write pseudo-code Analyze the time complexity Extract the optimal solution   optimal substructure: 问题的最优解由子问题的最优解组合而成，而这些子问题可以独立求解  make a decision 子问题无关 cut-and-paste: 任意其它子问题的方案可被最优方案替代   overlapping subproblem: 问题的递归算法会反复地求解相同的子问题  Examples:</description>
    </item>
    
    <item>
      <title>数值积分与数值微分</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/4-%E6%95%B0%E5%80%BC%E7%A7%AF%E5%88%86%E4%B8%8E%E6%95%B0%E5%80%BC%E5%BE%AE%E5%88%86/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/4-%E6%95%B0%E5%80%BC%E7%A7%AF%E5%88%86%E4%B8%8E%E6%95%B0%E5%80%BC%E5%BE%AE%E5%88%86/</guid>
      <description>机械求积方法  定积分计算：$\int_a^b f(x)dx=F(b)-F(a)$  被积函数由函数表格提供 $f(x)$ 无法求出原函数   数值积分：$\int_a^bf(x)dx\approx\sum_{k=0}^n A_kf(x_k)$  积分结点 $x_k$ 求积系数 $A_k$ 机械求积公式：$A_k$ 与 $f(x)$ 无关   左矩公式：$\int_{x_0}^{x_1}f(x)dx\approx\int_{x_0}^{x_1}f(x_0)dx=f(x_0)(x_1-x_0)$  右矩公式 中矩公式 梯形公式：$f(x)\approx L_1(x)=\frac{x-x_1}{x_0-x_1}f(x_0)+\frac{x-x_0}{x_1-x_0}f(x_1)$ （0 次） Simpson 公式（三点公式，抛物线公式）：$x&#39;=\frac{x_0+x_1}{2},\int_{x_0}^{x_1}f(x)dx\approx\frac{(x_1-x_0)}{6}(f(x_0)+4f(\frac{x_0+x_1}{2})+f(x_1))$ （3 次）   代数精度法  $m$ 次代数精确度：数值积分公式 $\int_a^bf(x)dx\approx\sum_{k=0}^nA_kf(x_k)$ 对任意的 $f(x)=x^i(i=0,1,\dots,m)$ 多项式都成立，对 $f(x)=x^{m+1}$ 不精确成立   插值求积法  利用插值多项式 $P_n(x)\approx f(x)$ 计算定积分 $\int_a^bf(x)dx\approx\sum_{k=0}^nf(x_k)\int_a^bl_k(x)dx$ $N+1$ 个节点的插值型求积公式至少有 $n$ 次代数精度    Newton-Cotes 公式  等距节点下使用 Lagrange 插值多项式建立的数值求积公式 函数 $f(x)\in C[a,b],x_k=a+kh,h=\frac{b-a}{n},k=0,1,\dots,n$ Langrange 插值多项式 $L_n(x)=\sum_{k=0}^nf(x_k)l_k(x),R_n(x)=\frac{f^{n+1}(\xi)}{(n+1)!</description>
    </item>
    
    <item>
      <title>Pointer-Analysis</title>
      <link>https://zhengzangw.com/notes/static-program-analysis/4-pointer-analysis/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/static-program-analysis/4-pointer-analysis/</guid>
      <description>Pointer-Analysis  Program -&amp;gt; Points-to relations Pointer Analysis: which objects a pointer can point to Alias analysis: can two pointers point to the same object Pointer-Analysis Application  Fundamental information Compiler optimization Bug detection Security analysis       Factor Problem Choice     Heap abstraction How to model heap memory Allocation-site/storeless   Context sensitivity How to model calling contexts Context-sensitive/insensitive   Flow sensitivity How to model control flow Flow-sensitive/insensitive   Analysis scope which parts of program should be analyzed whole-program/demand-driven     allocation-site abstraction: one abstract object per allocation site  Concerned Statements  pointer-affecting statements  New: x = new T() Assign: x = y Store: x.</description>
    </item>
    
    <item>
      <title>Transformation</title>
      <link>https://zhengzangw.com/notes/rendering/4-transformation/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/rendering/4-transformation/</guid>
      <description>Introduction  Why Transformation  Modeling  Moving the objects to the desired location Multiple instances of a protostype stape Kinematics of linkages/skeletons - character animation   Viewing  projection transforms     Types  Linear (preserves parallel lines)  Translation Rotation Scaling   projection: perspective/orthographic projection non-linear: twists, bends, warps, morphs   Implementation: Metrics  Representation with a $4\times 4$ matrix: Homogeneous coordinates    </description>
    </item>
    
    <item>
      <title>4. Job Control</title>
      <link>https://zhengzangw.com/notes/command-line/4-job-control/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/4-job-control/</guid>
      <description>Jobs Control sleep 20 # seconds man signal #ctrl+c SIGINT #ctrl+\ SIGQUIT #ctrl+z SIGSTOP nohup ./run.sh &amp;amp; jobs # show jobs background bg %1 # continue to run fg %2 kill -STOP %1 kill -HUP %1 kill -KILL %2 C signal #include &amp;lt;signal.h&amp;gt;#include &amp;lt;stdint.h&amp;gt;void signal_callback_handler(int signum) { printf(&amp;#34; TERMINATED \n&amp;#34;); setBufferedInput(true); printf(&amp;#34;\033[?25h\033[m&amp;#34;); exit(signum); } int main(){ signal(SIGINT, signal_callback_handler); } Python signal #!/usr/bin/env python import signal, time def handler(signum, time): print(&amp;#34;\nI got a SIGINT, but I am not stopping&amp;#34;) signal.</description>
    </item>
    
    <item>
      <title>Syntax-Directed Definition and Translation</title>
      <link>https://zhengzangw.com/notes/compiler/4-syntax-directed-definition-and-translation/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/4-syntax-directed-definition-and-translation/</guid>
      <description>属性规则  语义描述  上下文相关文法：过于复杂 属性文法：上下文无关文法和属性规则的结合   综合属性(SA)：通过 $N$ 的子结点或 $N$ 本身的属性值定义 继承属性(IA)：依赖于父节点，本身和兄弟结点的属性值  终结符号无继承属性   语义规则的副作用：影响其它属性的求值  SDD  语法制导定义(SDD)：将文法符号和某些属性关联，通过语义规则来描述如何计算属性值 属性文法：没有副作用的 SDD 适用于自顶向下分析的 SDD  S 属性的 SDD：可以在语法分析过程中一起计算 L 属性的 SDD   L 属性：只拥有  综合属性 或继承属性，且 $A\rightarrow X_1X_2\cdots X_n$ 中计算 $X_i.a$ 的规则只用  $A$ 的继承属性 或 $X_i$ 左边的文法符号 $X_j$ 的继承属性或综合属性     注释分析树 依赖图：描述某棵特定的分析树上各个属性之间的信息流  如果依赖图中有环，则无法计算   具有受控副作用的语义规则  抽象语法树  每个结点代表一个语法结构，对应于运算符 结点的每个子节点代表其子结构，对应于运算分量 表示这些子结构按照特定的方式组成了较大的结构  SDT  语义动作：程序片段 语法制导翻译(SDT)：在产生式体加入语义动作的上下文无关文法  建立语法分析树 将语义动作看做为虚拟结点 从左到右深度优先遍历，在访问虚拟结点是执行相应语义动作   用 SDT 实现 SDD，在分析过程中可以实现的有  基本文法为 LR, SDD 为 S 属性 基本文法为 LL, SDD 为 L 属性   后缀 SDT：所有动作都在产生式最右端  文法可以 LR 分析, SDD 为 S 属性的 语法分析栈的实现   L 属性对应的 SDT  消除左递归时 SDT 的转换  如果动作不涉及属性值，将动作当做终结符号处理 否则，将语义动作放到相应产生式的适当位置 $(A\rightarrow X_1X_2\cdots X_n)$： 计算 $X_i$ 的继承属性的动作插入到产生式体中 $X_i$ 的左边 计算产生头 $A$ 综合属性的动作放在最右边     边扫描边生成属性  条件  存在一个主属性为综合属性 主属性通过产生式体中各非终结符号的主属性连接得到 非终结符号的主属性的连接顺序与它们在产生式体中的顺序相同      </description>
    </item>
    
    <item>
      <title>4.变换</title>
      <link>https://zhengzangw.com/notes/computer-graphics/4-transformation/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-graphics/4-transformation/</guid>
      <description>基本几何变换  二维齐次坐标 $(x,y,h)$ 二维变换     变换 变换矩阵     平移 $\begin{bmatrix} 1 &amp;amp; 0 &amp;amp; t_x\newline 0 &amp;amp; 1 &amp;amp; t_y\newline 0 &amp;amp; 0 &amp;amp; 1\newline \end{bmatrix}$   旋转 $\begin{bmatrix} \cos\theta &amp;amp; -\sin\theta &amp;amp; 0\newline \sin\theta &amp;amp; \cos\theta &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 1\newline \end{bmatrix}$   缩放 $\begin{bmatrix} s_x &amp;amp; 0 &amp;amp; 1 \newline 0 &amp;amp; s_y &amp;amp; 1\newline 0 &amp;amp; 0 &amp;amp; 1\newline \end{bmatrix}$   错切 $\begin{bmatrix} 1 &amp;amp; sh_x &amp;amp; -sh_xy_{ref}\newline 0 &amp;amp; 1 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 1\newline \end{bmatrix}$     三维齐次坐标 $(x,y,z,h)$     变换 变换矩阵     平移 $\begin{bmatrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; t_x\newline 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; t_y\newline 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; t_z\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   缩放 $\begin{bmatrix} s_x &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; s_y &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; s_z &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   旋转 Z 轴 $\begin{bmatrix} \cos\theta &amp;amp; -\sin\theta &amp;amp; 0 &amp;amp; 0\newline \sin\theta &amp;amp; \cos\theta &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   旋转 X 轴 $\begin{bmatrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; \cos\theta &amp;amp; -\sin\theta &amp;amp; 0\newline 0 &amp;amp; \sin\theta &amp;amp; \cos\theta &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   旋转 Y 轴 $\begin{bmatrix} \cos\theta &amp;amp; 0 &amp;amp; \sin\theta &amp;amp; 0\newline 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\newline -\sin\theta &amp;amp; 0 &amp;amp; \cos\theta &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   $xy$ 平面反射 $\begin{bmatrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; -1 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   $yz$ 平面反射 $\begin{bmatrix} -1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   $xz$ 平面反射 $\begin{bmatrix} 1 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; -1 &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$   $z$ 轴错切 $\begin{bmatrix} 1 &amp;amp; 0 &amp;amp; sh_x &amp;amp; 0\newline 0 &amp;amp; 1 &amp;amp; sh_y &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1\end{bmatrix}$     任意轴旋转和旋转角旋转变换  $R(\theta)=T^{-1}R^{-1}R_z(\theta)RT$ $R=R_y(\beta)R_x(\alpha)$ 将旋转轴与 $z$ 轴重合    二维观察变换  窗口：指定图形要显示部分的区域 视区：窗口指定区域映射到输出设备上的区域 窗口到视区变换  $x_v=x_{v\min}+(x_w-x_{w\min})s_x,s_x=\frac{x_{v\max}-x_{v\min}}{x_{w\max}-x_{w\min}}$ $y_v=y_{v\min}+(y_w-y_{w\min})s_y,s_y=\frac{y_{v\max}-y_{v\min}}{y_{w\max}-y_{w\min}}$    三维观察变换   观察/参考坐标系：指定观察位置和投影平面位置</description>
    </item>
    
    <item>
      <title>4. NLP</title>
      <link>https://zhengzangw.com/notes/data-mining/6-nlp/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-mining/6-nlp/</guid>
      <description>Text  NLP 预处理  （网页）确定 main block 去除标点与特殊符号 （网页）去除标签 （中文）分词 （英文）小写化 去除停用词 （英文）stemming + lemmatization   Representation  bag of words  Binary Frequency TF-IDF = $\text{tf}(t,d)\log\frac{|C|}{n_t}$   N-gram  第 $N$ 个词的出现只与前 $N-1$ 个词相关，整句概率为各词出现概率乘积   Distributed representation: 将词语用多个维度表示 word2vec  只有一个隐层的神经元网络，输入 one-hot 编码词汇表向量，输出 one-hot 编码词汇表向量 词向量：输入层到隐藏层权重第 $i$ 行 CBOW: 上下文预测单词 Skip-gram: 单词预测上下文     Document Clustering  partition-based  distance: cosine similarity centroid: topical words   Probabilistic  $p(\omega_j|G_m)=\frac{\sum_{\overline{X}}P(G_m|\overline{X})I(\overline{X},\omega_j)}{\sum_{\overline{X}}P(G_m|\overline{X})}$     Document and words co-clustering  Bipartite graph partioning   Topic Model  LSA Probalistic LSA   Classification  Instance-based  Cosine similarity LSA + Cosine similarity Centroid-based classification (clustering + cosine similarity)   Naive Bayes  Bernoulli NB Multinomial NB   Linear SVM    </description>
    </item>
    
    <item>
      <title>4. Prediction and Clustering</title>
      <link>https://zhengzangw.com/notes/data-mining/4-prediction-and-cluster/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-mining/4-prediction-and-cluster/</guid>
      <description>Prediction  Evaluate prediction algorithms  Generalization Speed Robustness Scalability Comprehensibility   Semi-supervised Learning  Generative methods Low-density separations Graph-based methods Disagreement-based methods    </description>
    </item>
    
    <item>
      <title>4-多元微分</title>
      <link>https://zhengzangw.com/notes/calculus/section4/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/calculus/section4/</guid>
      <description>偏导数：$\frac{\partial f}{\partial x_i}(P_0)=g&#39;(a_i)$ 可微：$\exists\delta &amp;gt;0,U(P_0;\delta)\subseteq D_f,\exists A_i\in\mathbb{R},\forall P s.t. \lVert\Delta P\rVert&amp;lt;\delta$ 有 $f(P_0+\Delta P)-f(P_0)=\sum_{i=1}^nA_i\Delta x_i+R(P_0+\Delta P)$ 且 $\lim_{\Delta P\rightarrow 0}\frac{R(P_0+\delta P)}{\lVert\Delta\rVert}$  $\Delta f(P_0;\Delta P)=df(P_0;\Delta P)+o(\lVert\Delta P\rVert),\Delta P\rightarrow 0$ $\forall i,\frac{\partial f}{\partial x_i}(P_0)=A_i$   微分：$df(P_0)=\sum_{i=1}^n\frac{\partial f}{\partial x_i}(P_0)dx_i$ 连续可微：各个偏导函数皆连续  连续可微则可微   链法则：$\frac{\partial f(g_1,\cdots,g_m)}{\partial x_k}|{P=P_0}=\sum{i=1}^m\frac{\partial f}{\partial u_i}(Q_0)\frac{\partial g_i}{\partial x_k}(P_0)$ 隐函数求导法  $F(x_1,\cdots,x_{n+1})=C$ 由上式决定的隐函数：$x_{n+1}=f(x_1,\cdots,x_n)$ $\frac{\partial x_{n+1}}{\partial x_i}(a_1,\cdots,a_{n+1})=-\frac{\frac{\partial F}{\partial x_{n+1}}(a_1,\cdots,a_{n+1})}{\frac{\partial F}{\partial x_i}(a_1,\cdots,a_{n+1})}$   求导换序：$\frac{\partial^2 f}{\partial x_i\partial x_j},\frac{\partial^2 f}{\partial x_j\partial x_i}$ 在 $U$ 上存在且在 $P$ 处连续，则$\frac{\partial^2 f}{\partial x_i\partial x_j}(P)=\frac{\partial^2 f}{\partial x_j\partial x_i}(P)$  二阶连续可微可换序   Fermat 定理：$P$ 为 $f$ 极值点且为 $D_f$ 内点，$f$ 在 $p$ 处可微，则 $df(P)=0$, $P$ 为临界点 Hesse 阵  二阶连续可微函数  $\forall k,H(f)(P)$ 的 $k$ 阶顺序主子式为正，则 $P$ 为极小值点 $\forall k,H(f)(P)$ 的 $k$ 阶顺序主子式皆与 $(-1)^k$ 同号，则 $P$ 为 $f$ 极大值点 鞍点：$df(P)=0,|H(f)(P)|\not=0$ 且不满足上两条，则 $P$ 非极值点      $$ H(f)(P)=(\frac{\partial^2 f}{\partial x_i\partial x_j}(P))_{n\times n}=\begin{bmatrix} \frac{\partial^2 f}{\partial x_1^2} &amp;amp; \frac{\partial^2 f}{\partial x_1\partial x_2} &amp;amp; \cdots \newline \frac{\partial^2 f}{\partial x_2\partial x_1} &amp;amp; \ddots &amp;amp; \vdots \newline \vdots &amp;amp; \cdots &amp;amp; \frac{\partial^2 f}{\partial x_n^2} \end{bmatrix} $$</description>
    </item>
    
    <item>
      <title>4-知识表示</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/4-knowledge/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/4-knowledge/</guid>
      <description>知识表示  数据：信息的载体和表示 信息：数据的语义 知识：信息关联后形成的信息结构（事实和规则）  相对正确性 可表示/利用性 不确定性    一阶谓词表示(First Order Predicate)  一阶逻辑的知识工程  确定任务 搜集相关知识 确定词汇表，包括谓词，函词和常量 对邻域通用知识编码 对特定问题编码 提交查询给推理过程并获取答案 知识库调试   谓词公式表示知识的步骤  定义谓词及变元 变元赋值 连接词连接谓词，形成谓词公式   状态谓词  初始状态 终止状态   操作谓词  条件 状态改变   缺点：组合爆炸  产生式表示(Production)  $P\rightarrow Q$ (IF P THEN Q)  产生式的知识有可信度   常用结构  原因$\rightarrow$结果 条件$\rightarrow$结论 前提$\rightarrow$操作 事实$\rightarrow$进展 情况$\rightarrow$行为   产生式系统：一组产生式互相配合协调  规则库 数据库 控制系统   推理  正向推理 反向推理 混合驱动和控制策略    语义网络表示(Semantic Network)  通过有向图，其顶点表示概念，边表示概念间的语义关系，来表达复杂的概念及其相互关系 语义网路的推理：带求解问题构造为网络判断，某些节点/边为空（询问点），进行匹配  框架表示(Framework) 与知识图谱(Knowledge Graph)  框架：描述对象属性的一种数据结构 框架的一般表示  框架名 槽名（某一方面属性） 侧面（属性的某一方面） 值   万维网(World Wide Web) Web1.</description>
    </item>
    
    <item>
      <title>Query Complex</title>
      <link>https://zhengzangw.com/notes/quantum-computation/query-complex/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/query-complex/</guid>
      <description>Polynomial method  T-query algorithm: $|\psi_x^t\rangle=U_tO_xU_{t-1}O_x\cdots U_2O_xU_1O_x|\psi\rangle=\sum_{x,i}\alpha_{x,i}^{(t)}|i\rangle|\psi_{x,i}^t\rangle$  $\alpha_{x,i}^t$ is a deg $t$ polynomial probability outputting $f(x)$ is a degree $2t$ polynomial   Adversary method - polynomial method  negative adversary method learning graph   $\text{deg}_\epsilon(f)=\min{d:f \text{ is a degree }d\text{ polynomial and }\forall x\in{0,1}^n,|f(x)-p(x)|\leq\frac{1}{3}}$ $Q_\epsilon(f)=\min{t:\exists t$-query algorithm that computes $f$ correctly with probabiliy at least $1-\epsilon}$ Theorem: $Q_\epsilon(f)\geq\frac{1}{2}\text{deg}_\epsilon(f)$ Parity function: $f:{0,1}^n\rightarrow{0,1},f(x)=[2|\sum_i x_i]$  $\text{deg}_\epsilon(f)=\Omega(n)$   Symmetriazation  Given any $n$-variate multilinear polynomiial $p$, $P(k)=E_{|x|=k}[p(x)]$.</description>
    </item>
    
    <item>
      <title>4. Linear Programs</title>
      <link>https://zhengzangw.com/notes/advanced-algorithm/4-linear-programming/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-algorithm/4-linear-programming/</guid>
      <description>Definition  Linear Programming Problem: the problem of either minimizing or maximizing a linear function subject to a finite set of linear constraints  feasible solution, feasible area, objective function, objective value, optimal solution, optimal objective value   unbounded: have a infinite objective value infeasible: no feasible value Equivalent: for each feasible solution $\overline{x}$ to $L$ with objective value $z$, there is a corresponding feasible solution $\overline{x}&#39;$ to $L&#39;$ with objective value $z&#39;$, and for each feasible solution $\overline{x}&#39;$ to $L&#39;$ with objective value $z&#39;$, there is a corresponding feasible solution $\overline{x}$ to $L$ with objective value ́.</description>
    </item>
    
    <item>
      <title>4. Pólya&#39;s Theory of Counting</title>
      <link>https://zhengzangw.com/notes/combinatorics/4-polya-counting/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/4-polya-counting/</guid>
      <description> Graph Isomorphism (GI)  Input: two undirected graphs $G$ and $H$ Output: $[G\cong H]$   String Isomorphism (SI)  Input: two strings $x,y$: $[n]\rightarrow[m]$ and a permutation group $G\subseteq S_n$ Output: $[x\cong_G y]$    群作用的基本概念  群 $G$ 在非空集合 $X$上的左作用 $\circ:G\times X\rightarrow X$ 满足  $\forall x\in X(e\circ x=x)$ $g_1\circ(g_2\circ x) = (g_1g_2) \circ x$   轨道：$O_x=Gx={g\circ x:g\in G}$  Let $X/G={O_x|x\in G}$ $X=\bigsqcup O_x$   $g$-不动点(invariant set)：$X_g=\text{fix}(g)={x\in X:g\circ x=x}$ 稳定化子(stabilizers)：$G_x=\text{stab}(x)={g\in G: g\circ x=x}\leqslant G$  $[G:G_x]=|O_x|$   Burnside引理: $|X/G|=\frac{1}{|G|}\sum_{g\in G}|X_g|$  Pólya Theory of Counting  $M_\pi(x_1,x_2,\cdots,x_n)=\prod_{i=1}^k x_{l_i},i$th cycle has length $i$ cycle index of $G$: $P_G(x_1,x_2,\cdots,x_n) = \frac{1}{|G|}\sum_{\pi\in G}M_\pi(x_1,x_2,\cdots,x_n)$ nonequivalent $m$-colorings of $n$ objects under the action of $G$ pattern inventory  $F_G(y_1,y_2,\cdots,y_m)=\sum_{v}a_vy_1^{n_1}y_2^{n_2}\cdots y_m^{n_m}$ $v=(n_1,n_2,\cdots,n_m),\sum_{i=1}^mn_i = n$   Pólya&amp;rsquo;s enumeration formula: $F_G(y_1,y_2,\cdots,y_m)=P_G(\sum_{i=1}^my_i,\sum_{i=1}^my_i^2,\cdots,\sum_{i=1}^my_i^n)$  </description>
    </item>
    
    <item>
      <title>Image Restoration</title>
      <link>https://zhengzangw.com/notes/digital-image-process/3-restoration/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/3-restoration/</guid>
      <description>图像复原  图像退化模型与图像复原过程  $f(x,y)$ 退化函数 $H$：线性，位置不变 加性噪声 $\eta(x,y)$：$g(x,y)=h(x,y)\star f(x,y)+\eta(x,y)$ (逆过程)复原滤波器 $T(g(x,y))$ $\hat f(x,y)\approx f(x,y)$    噪声模型  噪声来源  图像获取：环境条件，传感器质量 图像传输：无线信号干扰    位置无关 均值方差估计
 高斯噪声  $p(z)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(z-\overline{z})^2}{2\sigma^2}}$ 电路噪声，传感器噪声   瑞利噪声  $p(z)=\frac{2}{b}(z-a)e^{-(z-a)^2/b},z\geq a$ $\overline{z}=a+\sqrt{\frac{\pi b}{4}}$ $\sigma^2=\frac{b(4-\pi)}{4}$ 范围成像   爱尔兰（伽马）噪声  $p(z)=\frac{a^bz^{b-1}}{(b-1)!}e{-az},z\geq 0$ $\overline{z}=\frac{b}{a}$ $\sigma^2=\frac{b}{a^2}$ 激光成像   指数噪声  $p(z)=ae^{-az},z\geq 0$ $b=1$ 时的爱尔兰噪声 激光成像   均匀分布  $p(z)=\frac{1}{b-a},a\leq z\leq b$   脉冲噪声（椒盐噪声）  盐：白色 胡椒：黑色 快速过滤    $$p(z)=\begin{cases} P_a &amp;amp; z=a \newline P_b &amp;amp; z=b \end{cases}$$</description>
    </item>
    
    <item>
      <title>4-规范化理论</title>
      <link>https://zhengzangw.com/notes/database/4-%E8%A7%84%E8%8C%83%E5%8C%96%E7%90%86%E8%AE%BA/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/4-%E8%A7%84%E8%8C%83%E5%8C%96%E7%90%86%E8%AE%BA/</guid>
      <description>解决如何评价关系模式设计的好坏和如何设计性能良好的关系模式的问题
 关系设计模式：同一个关系数据库系统可以有多种关系模式设计方案  好方案：既有合理的数据冗余度，又没有插入和删除等操作异常现象   关系数据模型设计方法：建模(E-R model)，转换(set of tables)，规范化  函数依赖（FD,Functional Dependency） 给定关系 $R$，$X,Y$ 是 $R$ 两个属性子集，在关系 $R$ 中，每一个 $X$ 值都有唯一的一个 $Y$ 值与之对应
 $Y$ 函数依赖 $X$  $X$ 函数决定 $Y$($X\rightarrow Y$) 关系 $R$ 满足函数依赖 $X\rightarrow Y$ 决定因素：$X$ 依赖因素：$Y$   只能证否，不能证明 平凡函数依赖： $Y\not\subseteq X$ 完全函数依赖 $X\overset{f}{\rightarrow} Y$：$X\rightarrow Y,\forall X&#39;\subsetneq X,X&#39;\not\rightarrow Y$  部分函数依赖 $X\overset{p}{\rightarrow}Y$   传递函数依赖：$X\rightarrow Y,Y\not\rightarrow X,Y\rightarrow Z$, 则 $Z$ 传递函数依赖于 $X$ Armstrong 公理系统：寻找所有函数依赖  基本规则  Reflexivity: $Y\subset X\Rightarrow X\rightarrow Y$ Augmentation: $X\rightarrow Y\Rightarrow X\cup Z\rightarrow Y\cup Z$ Transtivity: $X\rightarrow Y,Y\rightarrow Z\Rightarrow X\rightarrow Z$   扩充规则  Union: $X\rightarrow Y\cup Z\Rightarrow X\rightarrow Y,X\rightarrow Z$ Decomposition: $X\rightarrow Y,X\rightarrow Z\Rightarrow X\rightarrow Y\cup Z$ Pseudo transitivity: $X\rightarrow Y,W\cup Y\rightarrow Z\Rightarrow W\cup X\rightarrow Z$   逻辑蕴含：$F\vDash X\rightarrow Y,F$ 为一个函数依赖集 函数依赖集的闭包：$F^+={X\rightarrow Y|F\vDash X\rightarrow Y}$   关键字（码,key）：$R(U,F),K\subset U,K$ 完全函数决定 $U$  主属性集：$R$ 的所有关键字中的属性构成的集合 非主属性集   属性集 $X$ 的闭包：$X_F^+={A|F\vDash X\rightarrow A}$  计算闭包  while $X$ changes  for each $Y\rightarrow Z\in F$  if $Y\subset X,X=X\cup Z$       关键字 $K$  $K_F^+=U$ $\forall Z\subsetneq K,Z_F^+\neq U$     计算关键字  法一：$F\vDash K\overset{f}{\rightarrow} U$ 法二  $K=U$ for $A\in K$  if $(K-A)_F^+$ contains all attribute then $K=K-A$   优化：最小函数依赖集只在左边出现过的属性是主属性，只在右边出现过的属性为非主属性     函数依赖集的等价：$F_1^+=F_2^+$ 最小函数依赖集（最小覆盖）  判定方法：对于每个关系 $X\rightarrow A$ 需满足以下三条  $A$ 为单个属性 $(F-{X\rightarrow A}))^+\neq F^+$ $\forall Y\subset X,(F-{X\rightarrow X,Y\rightarrow A})^+\neq F^+$   计算方法  $G=F$，将 $G$ 中每个 $X\rightarrow(A_1,\cdots,A_n)$ 的函数依赖替换为 $X\rightarrow A_1,\cdots,X\rightarrow A_n$ 消除部分函数依赖：对每个函数依赖 $X\rightarrow A$  对 $X$ 中每个属性 $B$  若 $A\in(X-B)_G^+$, 则用 $(X-B)\rightarrow A$ 替换 $X\rightarrow A$     消除冗余函数依赖：对每个函数依赖 $X\rightarrow A$  若 $A\in X_N^+,N=G-{X\rightarrow A}$ 则从 $G$ 中删去 $X\rightarrow A$   将 $X\rightarrow A_1,\cdots,X\rightarrow A_n$ 合并为 $X\rightarrow(A_1,\cdots,A_n)$      多值依赖 (MVD)  $X\rightarrow\rightarrow Y$: $X$ 与 $Y$ 的一组值对应，且 $Y$ 的这组值与 $U-X-Y$ 无关 非平凡的多值依赖：$U-X-Y\neq\emptyset$ $X\rightarrow\rightarrow Y\Rightarrow X\rightarrow\rightarrow (U-X-Y)$ $X\rightarrow Y\Rightarrow X\rightarrow\rightarrow Y$ $X\rightarrow\rightarrow Y,W\supseteq Z\Rightarrow W\cup X\rightarrow\rightarrow Y\cup Z$ $X\rightarrow\rightarrow Y,Y\rightarrow\rightarrow Z \Rightarrow X\rightarrow\rightarrow(Z-Y)$ $X\rightarrow\rightarrow Y,W\cap Y=\emptyset,W\rightarrow Z,Y\subseteq Z\Rightarrow X\rightarrow Z$  范式  范式：满足允许存在的函数依赖的要求的关系集合 第一范式 $R\in$ 1NF：每个属性级都是不可分割的数据量  每个关系必须满足   第二范式 $R\in$ 2NF: $R\in$ 1NF 且每个非主属性完全依赖于关键字  判断方法  确定主属性集合非主属性级 判断每个非主属性和关键字之间是否满足 2NF     第三范式 $R\in$ 3NF: $R\in$ 2NF 且每个非主属性不传递函数依赖于关键字 BCNF 范式：$R\in$ 1NF，若 $X\rightarrow Y$ 则 $X$ 必含有该关系模式的关键字  $R\in$ BCNF 则 $R\in$ 3NF   第四范式 $R\in$ 4NF: $X\rightarrow\rightarrow Y$ 是非平凡多值依赖，则 $X$ 必含有关键字  $X\in$ BCNF    模式分解  模式分解：将属性集合分解构成若干小的关系模式  找出不满足范式要求的函数依赖关系 $X\overset{f}{\rightarrow} Y$ 分解为  $R_1=(X\cup Y,{X\rightarrow Y})$ $R_2=(\text{Head}(R)-Y, {A\rightarrow B|A\rightarrow B\in F^+,(A\cup B)\subseteq \text{Head}(R_2)})$   对子关系重复进行 合并具有相同关键字的子关系模式   无损联结性：分解后原关系中的信息不会被丢失 $R=R_1\Join R_2$  $R$ 的分解为 $\rho={R_1,R_2}$，$F$ 为 $R$ 所满足的函数依赖集合，分解 $\rho$ 具有无损联结性的充分必要条件是：$R_1\cap R_2\rightarrow (R_1-R_2)$ 或 $R_1\cap R_2\rightarrow (R_2-R_1)$   依赖保持性：原有的函数依赖在分解后的关系模式上依然存在 $F^+=(F_1\cup F_2)^+$ 在必须同时满足无损联接性和依赖保持性的要求下，一个关系模式最高可以被分解到满足第三范式  </description>
    </item>
    
    <item>
      <title>Bayesian Classifier</title>
      <link>https://zhengzangw.com/notes/machine-learning/4-bayesian/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/4-bayesian/</guid>
      <description>Bayesian decision theory     定义 最小化分类错误率     loss $\lambda_{ij}$ $[i=j]$   Expected loss $R(c_i\vert x)=\sum_{j=1}^N\lambda_{ij}P(c_j\vert x)$ $1-P(c\vert x)$   Bayes optimal classifier $h^*(x)=\arg\min_{c\in Y}R(c\vert x)$ $\arg\max_{c\in Y}P(c\vert x)$   decison loss $R(h)=E_x(R(h(x)\vert x))$ $P(h^*(x)\vert x)$   Bayes risk $1-R(h^*)$ $1-P(h^*(x)\vert x)$    贝叶斯定理 $$ P(c|x)=\frac{P(x,c)}{P(x)}=\frac{P(c)P(x|c)}{\int p(c)P(x|c)dc}$$
 prior: $P(c)$ evidence: $P(x)$ class-conditional probability/likelihood: $P(x|c)$  class-conditional probability: $x$ likelihood: $\theta, P(x|c)(\theta)$  $P(D_c|\theta_c)=\prod_{x\in D_c}P(x|\theta_c)$ $\text{LL}(\theta_c)=\log P(D_c|\theta_c)=\sum_{x\in D_c}\log P(x|\theta_c)$      k 近邻学习  lazy learning 最邻近分离器的泛化错误率不会超过贝叶斯最优分类器错误率的两倍  朴素贝叶斯分类器  属性条件独立性假设: $P(x|c)=\prod_{i=1}^{d}P(x_i|c)$ $h_{nb}=\arg\max_{c\in Y}P(c)\prod_{i=1}^dP(x_i|c)$  $P(c)=\frac{|D_c|}{|D|}$ $P(x_i|c)=\frac{|D_{c,x_i}|}{|D_c|}$   拉普拉斯修正  $\hat P(c)=\frac{|D_c|+1}{|D|+N}$  $N$ 为 $D$ 中可能的类别   $\hat P(x_i|c)=\frac{|D_{c,x_i}|+1}{|D_c|+N_i}$  $N_i$ 为第 $i$ 个属性可能取值数     连续属性  $p(x_i|c)\sim N(\mu_{c,i},\sigma_{c,i}^2)$    半朴素贝叶斯分类器 独依赖估计 (One-Dependent Estimator ODE)  $P(c|x) \propto P(c)\prod_{i=1}^dP(x_i|c,p(a_i))$  SPODE (super-parent ODE)  假设所有属性都依赖于同一个属性: $p(a_i)=x_t$  AODE (Averaged One-Dependent Estimator)  SPODE 的集成 $P(c|x)\propto \sum_{i=1,|D_{x_i}|\geq m&#39;}^dP(c,x_i)\prod_{j=1}^dP(x_j|c,x_i)$  TAN (Tree Augmented naive Bayes)  仅保留了强相关属性间的依赖性 基于最大带权生成树 算法  conditional mutual information: $I(x_i,x_j|y)=\sum_{x_i,x_j,c}P(x_i,x_j|c)\log\frac{P(x_i,x_j|c)}{P(x_i|c)P(x_j|c)}$  在已知类别情况下的相关性   在以属性为节点，互信息为边建完全图上构造最大带权生成树，挑选根节点，边置为有向 加入类别节点 y，增加 y 到每个属性的边    kDE (k-Dependent Estimator)  样本不足：高阶联合概率估计困难，需要的样本数指数级增加  </description>
    </item>
    
    <item>
      <title>4-随机变量的数字特征</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/4-%E6%95%B0%E5%AD%97%E7%89%B9%E5%BE%81/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/4-%E6%95%B0%E5%AD%97%E7%89%B9%E5%BE%81/</guid>
      <description>期望  $E(X)=\sum_{i=1}^{+\infty}x_ip_i$ 若 $\int_{-\infty}^{+\infty}|x|p(x)dx&amp;lt;\infty$, 则 $E(X)=\int_{-\infty}^{+\infty}xp(x)dx$；否则不存在  若 $X$ 不变号，可称无穷期望存在   $E(g(X))=\int_{-\infty}^{+\infty}g(x)p(x)dx$ $E(g(X,Y))=\int_{-\infty}^{+\infty}\int_{-\infty}^{+\infty}g(x,y)p(x,y)dxdy$  $g$ 为连续函数，则作用后的量为随机函数 $E(c_1X_1+c_2X_2+\cdots+c_nX_n)=c_1E(X_1)+c_2E(X_2)+\cdots+c_nE(X_n)$ $X,Y$ 独立，$E(XY)=E(X)E(Y)$ 偶函数期望为0     中位数：$m,P(X\geq m)\geq\frac{1}{2},P(X\leq m)\geq\frac{1}{2}$ 方差  $EX^2&amp;lt;+\infty$, 则 $D(X)=\text{Var}(X)=E(X-EX)^2$ 为随机变量 $X$ 的方差  $\sigma(X)=\sqrt{D(X)}$ 为均方差（标准差）   $D(X)=EX^2-(EX)^2$ $D(a)=0$ $D(aX+b)=a^2D(X)$ $D(X\pm Y)=D(X)+D(Y)+2E((X-EX)(Y-EY))$  独立：$D(\sum X)=\sum D(X)$   $D(\sum_{i=1}^nX_i)=\sum_{i=1}^nD(X_i)+2\sum_{1\leq i&amp;lt;j\leq n}\text{cov}(x_i,x_j)$   不等式  马尔科夫不等式：$P(X\geq kEX)\leq\frac{1}{k}$ 切比雪夫不等式：$P(|X-EX|\geq\epsilon)\leq\frac{DX}{\epsilon^2}$  $D(X)=0\iff P{X=C}=1$     样本  样本均值：$\overline{X}$  $D(\overline{X})=\frac{\sigma^2}{n}$   样本偏差：$X_i-\overline{X}$ 样本方差：$S^2=\frac{1}{n-1}\sum_{i=1}^n(X_i-\overline{X})^2$  $E(S^2)=\sigma^2$   中心化随机变量：$\tilde X=X-EX$  $E(\tilde X)=0$   标准化随机变量：$X^*=\frac{X-EX}{\sqrt{D(X)}}$  $D(X^*)=1$     矩  随机变量 $X$ 和非负整数 $k$，若 $E(|X|^k)&amp;lt;\infty$ 则称 $EX^k$ 为 $X$ 的 $k$阶原点矩 随机变量 $X$ 和非负整数 $k$，若 $E(X-EX)^k&amp;lt;\infty$ 则称 $E(X-EX)^k$ 为 $X$ 的 $k$阶中心矩 三阶中心矩：分布是否有偏 四阶中心矩：衡量分布在均值附近的陡峭程度   协方差  若 $E|X|,E|Y|,E|(X-EX)(Y-EY)|$ 都有限，则 $X$ 和 $Y$ 的协方差为 $\text{cov}(X,Y)=E((X-EX)(Y-EY))$  $D(X\pm Y)=D(X)+D(Y)+2\text{cov}(X,Y)$ $D(\sum X_i)=\sum D(X_i)+2\sum \text{cov}(X_i,X_j)$ $\text{cov}(X,Y)=E(XY)-EX*EY$ $\text{cov}(aX+c_1,bY+c_2)=ab\text{cov}(X,Y)$ 若 $X_1,X_2$ 和 $Y$ 的二阶矩有限，则 $\text{cov}(X_1+X_2,Y)=\text{cov}(X_1,Y)+\text{cov}(X_2,Y)$   Cauchy-Schwarz 不等式：$(\text{cov}(X,Y))^2\leq D(X)D(Y)$  取等：$P(a(X-EX)+b(Y-EY)=0)=1$, $a,b$ 不全零     相关系数  $X,Y$二阶矩有限，$D(X),D(Y)&amp;gt;0$，则 $X$ 和 $Y$ 的相关系数 $corr(X,Y)=\rho_{XY}=\frac{\text{cov}(X,Y)}{\sqrt{D(X)D(Y)}}$ $\text{cov}(X^,Y^)=\rho_{XY}$ $\rho_{XY}\leq 1$ $|\rho_{XY}|=1\iff D(X)&amp;gt;0,D(Y)&amp;gt;0$ 且存在不全为零的 $a,b,c$ 使得 $P((cX+aY)=b)=1$.</description>
    </item>
    
    <item>
      <title>信号编码技术</title>
      <link>https://zhengzangw.com/notes/data-communication/3-%E4%BF%A1%E5%8F%B7%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/3-%E4%BF%A1%E5%8F%B7%E7%BC%96%E7%A0%81%E6%8A%80%E6%9C%AF/</guid>
      <description>基带信号：信源发出的没有经过调制，低频信号 载波信号：调制到高频的信号  数字基带信号（数数）    Data Element Signal Element     Data rate $R$ Signal rate $D=\frac{R}{L}=\frac{R}{\log_2M}$   $T_b=\frac{1}{R}$ 调制速率   比特差错率 BER      接受端需求  每比特定时关系 每比特信号电平   BER 影响  信噪比 数据率 带宽 编码机制       编码术语      单极性 正、零电平   双极性 正、负电平   归零 信号电压在码元终止前回到零电平   双相位 单码用多相位表示   差分波形 利用相邻码元的电平跳变和不变来表示消息代码   多电平波形      码型选择  信号谱频：  传输功率集中在带宽中心位置 减少高频 去掉直流：0，1 等概率则无直流分量   时钟同步  定时信息   差错检测 信号干扰 降低通信延迟和成本    不归零码 NRZ  NRZ-L：双极性不归零 NRZI: 双极性不归零差分 缺点  包含直流成分 缺乏同步能力    多电平二进制  双极性 AMI: 没有信号为 0，1 为正负脉冲交替 伪三进制码：没有信号为 1，0 为正负脉冲交替 nBmB 码：低速情况解决同步问题 $B_T=0.</description>
    </item>
    
    <item>
      <title>数字存储</title>
      <link>https://zhengzangw.com/notes/multimedia/4-storage/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/multimedia/4-storage/</guid>
      <description>磁存储  HDD：Western Digital, Seagate, and Toshiba. MO(MD)：磁光盘  半导体存储  闪存：CF, SD, MMC, SM, MS, XD T-Flash SSD  闪存颗粒：SLC, MLC, TLC SLC 缓存    光存储  Compact Disc(CD-DA): 1982 Philips and Sony 红皮书标准 CD-ROM: 1985 黄皮书标准（定位，错误率） VCD: 1993 DVD: 1995 单片单面 4.7 GB  使用红外光 EFM PLUS 方式   HD-DVD SACD Blu-ray Disc 国产标准：EVD, HDV, HVD, FVD, CBHD  网络存储  DAS(Direct Attached Storage) NAS(Network Attached Storage)：每个服务器有自己的文件系统 SAN(Storage Area Network)：每个服务器通过网络共享协议使用同一个文件管理系统 DFS：分布式文件系统  NFS: SUN CIFS: Microsoft Lustre: Oracle Haddop: 基于 JAVA TFS: Taobao    </description>
    </item>
    
    <item>
      <title>Template</title>
      <link>https://zhengzangw.com/notes/advanced-programming/4-template/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/4-template/</guid>
      <description>泛型（类属）  类属：一个程序实体能对多种数据进行操作或描述的特性 参数化多态（类属）：一段带有类型作为参数的代码，给其提供不同的类型值就能得到多个不同的代码 泛型程序设计（类属程序设计 Generic Programming）:一段带有类型作为参数的代码，给其提供不同的类型值就能得到多个不同的代码  类属函数  采用通用指针类型的参数 函数模板  定义了一系列重载函数 实例化：给模板参数提供一个类型作为值，从而生成具体的函数 隐式实例化（模板实参推演）：由编译程序根据函数调用的实参类型自动地把函数模板实例化为具体的函数    template &amp;lt;class T1, class T2, ...&amp;gt; &amp;lt;return_type&amp;gt; &amp;lt;func_name&amp;gt;(&amp;lt;params_list&amp;gt;){ ... }  显示实例化模板：max(int_num, double_num)  显式类型转换 显示实例化：max&amp;lt;double&amp;gt;(x,m); 再定义一个 max 的重载函数   带非类型参数的模板：使用时必须显示实例化  template &amp;lt;class T, int size&amp;gt; //size为一个int型的普通参数 void f(T a) { T temp[size]; } f&amp;lt;int,10&amp;gt;(1); 类模板  类属类：一个类的成员的类型可变 类模板  template &amp;lt;class T&amp;gt; class Stack{ T buffer[100]; bool pop(T &amp;amp;x); }; template &amp;lt;class T&amp;gt; bool Stack&amp;lt;T&amp;gt;::pop(T &amp;amp;x){}  类模板实例化序显式指出 类模板中的静态成员仅属于实例化后的类（模板类），不同类模板实例之间不共享类模板中的静态成员 可带非类型参数 类模板友元  template &amp;lt;class T&amp;gt; class A; template &amp;lt;class T&amp;gt; void f3(A&amp;lt;T&amp;gt;&amp;amp; a) { .</description>
    </item>
    
    <item>
      <title>4. Network Layer</title>
      <link>https://zhengzangw.com/notes/conputer-network/4-network-layer/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/4-network-layer/</guid>
      <description>提供服务  分片与重组 路由服务 服务分类  确保交付  确保时延上限的确保交付 有序分组交付   确保最小带宽 安全性 尽力而为服务（无服务，数据报服务）   审计服务  IPv4 服务  原语：执行的功能  发送原语：请求数据单元的传输 交付原语：通知有数据到达   参数：传递数据和控制信息  源地址，目的地址 协议 服务类型指示，标识，不分片标识符，生存时间，数据长度，数据    IPv4 数据报格式 首部通常长 20 字节
   版本 互联网首部长度 IHL DS ECN 总长度 标识 标志 Fragment Offset Time to Live 协议 首部检验和 源地址 目的地址 选择+填充 数据     4 bits 4 bits 6 2 16 16 3 13 8 8 16 32 32  $&amp;lt;65535*8$   4 以32比特为单位首部长度，最小值为5 区分服务功能 阻塞通知字段    数据报片在源数据报中的位置 TTL TCP=6,UDP=17 因特网检验和        IPv4 分片  片(fragment)：分片成的较小的数据报封装成的帧 重装工作在端系统中完成 属于同一数据报的片具有相同标识 最后一片标志比特为0，其余为1 以 64 bit 为单位  IPv4 地址 一个 IP 地址与一个接口相关联</description>
    </item>
    
    <item>
      <title>4-线性算子</title>
      <link>https://zhengzangw.com/notes/linear-algebra/4-%E7%BA%BF%E6%80%A7%E7%AE%97%E5%AD%90/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/linear-algebra/4-%E7%BA%BF%E6%80%A7%E7%AE%97%E5%AD%90/</guid>
      <description>特征值与特征向量  相似: 存在可逆阵$Q$, $B=Q^{-1}AQ$ 特征值与特征向量 特征多项式：$P(\lambda) = \det(\lambda I-A)$ $\sum(\lambda)=tr(A)$, $\prod(\lambda)=\det(A)$ 特征子空间：$V_{\lambda_i}={\lambda_i的特征向量}\cup{0}$ $\lambda$为$A$的特征值，$X$为$A$属于$\lambda$的特征向量。$f(t)=\sum_{j=0}^ka_jt^j$, $f(\lambda)$为$f(A)$的特征值，$X$为属于$f(\lambda)$的特征向量 求特征值与特征向量  $P(\lambda)=0$求特征值 检验 对每个特征值，高斯消元求解基础解系，得特征子空间 L()    对角化  可对角化：$\exist Q,Q^{-1}AQ=diag(\lambda_1,\dots,\lambda_n)$ $Q^{-1}AQ=diag{\lambda_1,\dots,\lambda_n}$ iff $\forall i$, $A\alpha_i=\lambda_i\alpha_i$ 属于不同特征值的特征向量线性无关 代数重数：$P(\lambda)=(\lambda-\lambda_1)^{n_1}\dots(\lambda-\lambda_k)^{n_k}$, $n_i$ 为$i$的代数重数 几何重数：$\dim{V_{\lambda_i}}$ $1\leq$几何重数$\leq$代数重数 $A$可对角化$\iff$所有特征值代数重数等于几何重数 对角化  $P(\lambda)=0$求特征值与其代数重数 检验 对每个特征值，高斯消元求解基础解系，得特征子空间的基和几何重数 判断几何重数=代数重数 若可对角化，令 Q=[$e_1,\dots,e_n$], $Q^{-1}AQ=diag{\lambda_1,\dots,\lambda_n}$   已知$\lambda,|\lambda I-A|$; 已知$X$，$AX=\lambda X$ $A\sim B\iff (A+I)\sim (B+I)$  二次型  二次型：$\mathbb{F}^n$上的二次齐次 n 元多项式$f(x_1,\dots,x_n)=\sum_{i=1}^{n}a_{ii}x_i^2+\sum_{i&amp;lt;j}2a_{ij}x_ix_j$为二次型。 令$X=[x_1,\dots,x_n]^T$, 则$f(x_1,\dots,x_n)=X^TAX$ $A$对称，$C$可逆，则$A$与$C^TAC$合同 合同规范型: $$ \left[\begin{matrix} I_k &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; -I_s &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 \end{matrix}\right] $$ 化为合同规范型  做矩阵,其中 D 为对角阵 $$\left[ \begin{matrix} A\newline I \end{matrix}\right] \rightarrow \left[ \begin{matrix} D\newline C_1 \end{matrix}\right]$$ 分三类考虑  第一行与第一列均为 0, 则考虑下一层 $a_{11}=0$, $\exist j, a_{1j}=a_{j1}\not= 0$  $a_{jj}\not=0$ 做变换$r_1\leftrightarrow r_j,c_1\leftrightarrow c_j$ $a_{jj}=0$ 做变换 $r_1+r_j\rightarrow r_1,c_1+c_j\rightarrow c_1$   $a_{11}\not= 0$, 做行高斯消元与列高斯消元，用$a_{11}$将$j&amp;gt;1$的$a_{1j},a_{j1}$消去（共$2*(j-1)$次）   得$C_1^TAC_1=D$ 将对角型$D$用对换和$\frac{1}{\sqrt{|a_{ii}|}}r_i\rightarrow r_i,\frac{1}{\sqrt{|a_{ii}|}}c_i\rightarrow c_i$化为规范型，得 $$ C^TAC=\left[\begin{matrix} I_k &amp;amp; 0 &amp;amp; 0\newline 0 &amp;amp; -I_s &amp;amp; 0\newline 0 &amp;amp; 0 &amp;amp; 0 \end{matrix}\right] $$   $k$ 为 A 的正惯性指数，$s$为负惯性指数，$k-s$为符号差 实对称矩阵$A$的合同规范型是唯一的，进而正负惯性指数和符号差唯一，但可逆阵$C$不唯一 $A$与$B$合同，则有相同的合同规范型 $rank(A)=k+s$ 令$X=CY$, 则$f(x_1,\dots,x_n)=Y^T(C^TAC)Y=g(y_1,\dots,y_n)$, g 为 f 的规范型  正定  半正定：$\forall X\in\mathbb{R}^n$, $X^TAX\geq 0$ 实对称矩阵正定条件：  $\forall X\in\mathbb{R}^n,X\not=0$, $X^TAX&amp;gt;0$ $\forall i,\lambda_i&amp;gt;0$ $\exist R,|R|\not=0,A=R^TR$ 顺序主子式皆为正   若$A$是实对称矩阵，则$A$半正定$\iff$ $-A$半负定$\iff$ $A$的负惯性指数为 0， $A$正定$\iff -A$负定$\iff\ A$的合同规范性为$I$ $\iff$ $A$的顺序主子式皆为正 $A$负定$\iff$ $A$的顺序主子式与$(-1)^k$同号 顺序主子式不小于 0 得不到半正定 $A$与$B$合同，且为实对称矩阵，则同正定或半正定 $k$阶顺序主子阵：$A_k$ $k$阶顺序主子式：$\det(A_k)$ Hesse 阵：$f$在$p$处的黑塞阵为$H(f,p)=(\frac{\partial^2f}{\partial x_i\partial x_j}(p))$  $H(f,p)$正定，则$p$为极小值点 $H(f,p)$可逆但既不正定又不负定，则$p$不是极值点   正定矩阵与半正定矩阵之和为正定矩阵  实对称阵  对称矩阵：$A=A^T$ $A^{*}=\overline{A}^\top$  $(A+B)^{} = A^{} + B^{*}$ $(kA)^{} = \overline{k}A^{}$ $(AB)^*=B^A^$ $(A^)^ = A$ $X^*X\geq0$   实对称阵的特征值$\lambda\in\mathbb{R}^n$ 实对称阵可对角化 实对称阵$A$不同特征值$\lambda_1,\lambda_2$，则其属特征向量$X_1\perp X_2$ 正交对角化：$A^T=A$则存在正交阵$Q$，$Q^{-1}AQ=Q^{T}AQ=D$，$D$为对角阵 正交对角化：  解得特征值 特征值对应特征向量的基 Schmidt 正交化，$Q=[e_1,\dots,e_n]$    </description>
    </item>
    
    <item>
      <title>Fundamental Modern Physics</title>
      <link>https://zhengzangw.com/notes/physics/physics-modern/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/physics/physics-modern/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;《大学物理》卢德鑫&lt;br&gt;
NJU: University Physics II - 许望&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;energy-quantization&#34;&gt;Energy Quantization&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;$\nu\lambda=c$&lt;/li&gt;
&lt;li&gt;Blackbody radiation(infrared to visible spectrum): $u=u(\nu,T)$ or $u=u(\lambda,T)$&lt;/li&gt;
&lt;li&gt;Stefan-Boltzman Law: $J_B=\sigma T^4$&lt;/li&gt;
&lt;li&gt;relation between density of outgoing energy flow $J_u$ and density of energy u in the cavity: $J_u=\frac{1}{4}uc$, $u(T)=\int_0^\infty(\nu,T)d\nu$&lt;/li&gt;
&lt;li&gt;Radiation spectrun(or spectrum density): $u(\nu,T)$&lt;/li&gt;
&lt;li&gt;mean energy $\overline{\varepsilon}$: $u(\nu)d\nu=\frac{8\pi\nu^2}{c^3}\overline{\varepsilon}d\nu$&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Chapter 4</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/chapter4/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/chapter4/</guid>
      <description>编译汇编过程 Preprocessor: cpp / gcc -E -o main.i main.c
Compile: ccl / gcc -S -o main.s main.i
Assemble: as / gcc -c -o main.o main.s
Relocatable object file: .o
vim :%!xxd (-r) 查看二进制文件
file:查看文件类型
strip -s: 丢弃符号信息
生成可执行文件 符号解析：将每个符号引用于符号定义关联
relocation：根据ABI规范确定的memory mapping确定位置
ELF详解 readelf -a
Object File Format  DOS - COM System V UNIX - COFF (Common Object File-Format) Windows - PE (Portable Executable) Linux - ELF (Executable and * Linkable Format)  Ehdr (ELF header) readelf -h</description>
    </item>
    
    <item>
      <title>4-软件设计-SA</title>
      <link>https://zhengzangw.com/notes/software-enginerring/4-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1-sa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/4-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1-sa/</guid>
      <description>结构化分析方法 SA  分析：从问题域向求解域迈进的第一步 分析活动的产生制品是应用域专家和计算机专家都可以看得懂的规格说明 基本思想：: “自顶向下，逐步求精” ,“抽象和分解” 结构化方法=结构化分析+结构化设计+结构化程序设计 分解：把系统的复杂性降低到可以掌握的程度，把大问题分解成若干小问题，然后分别解决 抽象：即先考虑问题最本质的属性，暂把细节略去，以后再逐层添加细节，直至涉及到最详细的内容 分析结果  数据字典：定义数据，描述了所有的在目标系统中使用的和生成的数据对象 数据流程图：表达信息系统中数据的流向方式（功能建模）  功能 = 功能 + {子功能} + 功能接口 数据流法 = 数据流 + 数据处理 + 数据存储 + 端点 + 处理说明 + 数据字典   实体&amp;mdash;关系图 ERD：描述数据对象及数据对象之间的关系（数据建模） 状态&amp;mdash;迁移图 STD：描述系统对外部事件如何响应，如何动作（行为建模） 系统关系图：系统与外界相关系统的输入与输出  系统 = 实体 + 属性 + 关系   信息结构图：表达系统的顶层架构、体现分解的过程 加工规格说明：定义数据的处理    结构化设计方法  结构化程序设计（Dijkstra）：概要设计+详细设计  概要设计 概念  模块化：软件被划分成独立命名和可独立访问的被称作模块的构件，每个模块完成一个子功能，它们集成到一起满足问题需求 实现模块化的手段  抽象：抽出事物的本质特性而暂时不考虑它们的细节 信息隐蔽：应该这样设计和确定模块，使得一个模块内包含的信息（过程和数据）对于不需要这些信息的模块来说，是不可访问的   模块独立性：开发具有独立功能而且和其它模块之间没有过多的相互作用的模块 独立性衡量  耦合性：开发具有独立功能而且和其它模块之间没有过多的相互作用的模块 内聚性：标志一个模块内各个处理元素彼此结合的紧密程度，理想的内聚模块只做一件事情   耦合分类  无任何连接（最低耦合） 数据耦合（低耦合）：两个模块彼此通过参数交换信息，且交换的仅仅是数据 控制耦合（中耦合）：两个模块之间传递的信息有控制成分 公共环境耦合：两个或多个模块通过一个公共环境相互作用  一个存一个取：低耦合 都存取数据：低&amp;mdash;中耦合   内容耦合  一个模块访问另一个模块的内部数据 两个模块有一部分程序代码重叠 一个模块不通过正常入口而转移的另一个的内部 一个模块有多个入口     内聚分类  偶然内聚（低）：一组任务关系松散 逻辑内聚（低）：一组任务在逻辑上同属一类，例如均为输出 时间内聚（低）：一组任务必须在同一段时间内执行 信息内聚（中）：模块内所有元素都引用相同的输入或输出数据集合 顺序内聚（高）：模块中的每个元素都是与同一功能紧密相关，一个元素的输出是下一个元素的输入 功能内聚（高）：一个模块完成一个且仅完成一个功能   扇出数：由一模块直接控制的其他模块的数目 扇入数：有多少个模块直接控制一个给定的模块  设计方法  面向数据流的设计  信息流  变换流：信息沿输入通路进入系统，同时由外部形式变换成内部形式。进入系统的信息通过变换中心，经过加工处理以后再沿着输出通路变换成外部形式离开系统。 事务流：事务流的特点是数据沿着接收通路把外部世界的信息转换成一个事务项，然后，计算该事务项的值，根据它的值激励起多条活动通路中的一条数据流。发出多条通路的信息流中枢被称为“事务中心”     面向数据结构的设计：Jackson 方法  详细设计  详细设计是给出软件结构中各模块的内部过程描述 图形工具  流程图 方块图（N-S） PAD 图   语言工具：PDL(Program Design Language) 软件设计说明书  系统的目标和作为系统元素的软件的作用 硬件、软件与人机接口 主要的软件功能 外部定义的数据库 主要的设计约束与限制 设计说明：数据说明、导出的软件结构、结构内接口 模块说明  处理说明 接口说明 设计语言说明 使用模块 数据组织 注解   文件结构和全程数据    </description>
    </item>
    
    <item>
      <title>5. Channel Capacity</title>
      <link>https://zhengzangw.com/notes/information-theory/5-channel-capacity/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/information-theory/5-channel-capacity/</guid>
      <description>Channel Capacity  $(\mathcal{X},p(y|x),\mathcal{Y})$: send $x$, with probability $p(y|x)$, receiver get $y$ Channel capacity: $C=\max_{p(x)}I(X;Y)$ Strategy to calculate $C$  $I(X;Y)=H(Y)-H(Y|X)$ convex sets: $d_{\min}=\min_{a\in A,b\in B}d(a,b)$   Examples:  Noiseless Binary Channel: $C=1,p(x)=(\frac{1}{2},\frac{1}{2})$ Noisy Channel with nonoverlapping Outputs: in fact not noisy Noisy Typewriter: $\log13$ Binary Symmetric Channel: $C=1-H(p)$ Binary Erasure Channel: $\max_{p(x)}H(Y)-H(\alpha)=1-P_e$   symmetric channel: channel transition matrix row and columnr are permutations of each other $C=\log|\mathcal{Y}|-H(r)$ weakly symmetric: rows  Channel Coding Theorem  Message $W$ (Encoder) $X^n$ (Channel) $Y^n$ (Decoder) $\hat W$ $\max \frac{H(W)}{n}$ Message: can be ordered and denoted by index, $\log M$ symbols discrete memoryless channel (DMC): $p(y_k|x^k,y^{k-1})=p(y_k|x_k)$ without feedback: $p(x_k|x^{k-1},y^{k-1})=p(x_k|x^{k-1})$ memoryless + no feedback: $H(Y^n|X^n)=\sum_{i=1}^nH(Y_i|X_i)$ Markov chain: $W\rightarrow X^n\rightarrow Y^n\rightarrow\hat W$ DMC: $C=\max I(X;Y)$  DMC  codebook ($f(w)=x^n$) shared between sender and receiver $(M,n)$ code  index set ${1,2,\cdots, M}$ encoding function $f(x):{1,2,\cdots,M}\rightarrow\mathcal{X}^n$, yielding codewords $x^n(1),\cdots,x^n(M)$ decoding function $g(x)$   Conditional probability of error: $\lambda_i=\sum_{y^n}p(y^n|x^n(i))[g(y^n\neq i)]$  maximal probability of error: $\lambda^{(n)}=\max \lambda_i$ average: $P_e^{(n)}=\frac{1}{M}\sum\lambda_i$   rate $R$ of $(M, n)$ code: $R=\frac{\log M}{n}$ bits per transmission  achievable $R$: sequence $(2^{nR}, n)$ codes such that the maximal probability of error $\lambda(n)\rightarrow 0$ when $n\rightarrow\infty$   capacity: supremum of all achievable rates Channel coding theorem: $C=\max_{p(x)}I(X;Y)$  Achievability: For any $r&amp;lt;C,\exists (2^{nr},n)$ code Converse: For any $r&amp;gt;C,\lambda_e&amp;gt;0$    Intuition for Channel Capacity: $2^{nI(X;Y)}=2^{n(H(Y)-H(Y|X))}$ （手电筒）</description>
    </item>
    
    <item>
      <title>Teaching Assistant</title>
      <link>https://zhengzangw.com/about/teaching/</link>
      <pubDate>Mon, 07 Dec 2020 21:31:28 +0800</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/about/teaching/</guid>
      <description> CS 5242: Neural Networks and Deep Learning (NUS, Fall 2022) Algorithm Analysis &amp;amp; Design (NJU, Fall 2020)  </description>
    </item>
    
    <item>
      <title>5-Optimization and Regularization</title>
      <link>https://zhengzangw.com/notes/deep-learning/5-optimization-and-regularization/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/5-optimization-and-regularization/</guid>
      <description>Optimization  高维变量非凸优化  鞍点 平坦最小值与尖锐最小值 局部最小解等价性    优化算法  小批量梯度下降（批量，学习率，梯度估计）  $g_t=\frac{1}{K}\sum_{(x,y)\in S_t}\frac{\partial L(y,f(x;\theta))}{\partial\theta}$ $\theta\leftarrow\theta-\alpha g_t$   批量大小选择  线性放缩规则：批量大小增加 $m$ 倍时，学习率也增加 $m$ 倍（批量大小较小时适用） 批量越大，越有可能收敛到尖锐最小值;批量越小，越有可能收敛到 平坦最小值   学习率衰减（退火）  分段常数分解：每经过 $T_1,\cdots,T_m$ 次迭代，衰减为原来的 $\beta_1,\cdots,\beta_m$ 倍 逆时衰减：$\alpha_t=\alpha_0\frac{1}{1+\beta\times t}$ 指数衰减：$\alpha=\alpha_0\beta^t$ 自然指数衰减：$\alpha_0\exp(-\beta\times t)$ 余弦衰减：$\alpha_t=\frac{1}{2}\alpha_0(1+\cos(\frac{t\pi}{T}))$   学习率预热：最初几轮使用较小的学习率  逐渐预热(2017)：$\alpha_t&#39;=\frac{t}{T&#39;}\alpha_0$   周期性学习率调整  循环学习率 带热重启的随机梯度下降   AdaGrad(2011)：自适应调整参数学习率  $\Delta\delta_t=-\frac{\alpha}{\sqrt{G_t+\epsilon}}\odot g_t$ 梯度平方的累计值: $G_t=\sum_{\tau=1}^tg_\tau\odot g_\tau$ 偏导数累积比较大，其学习率相对较小; 相反，如果其偏导数累积较小，其学习率相对较大。但整体是随着迭代次数的增加，学习率逐渐缩小   RMSProp(2012)：避免学习率过早衰减  $\Delta\theta_t=-\frac{\alpha}{\sqrt{G_t+\epsilon}}\odot g_t$ 梯度平方的指数衰减：$G_t=\beta G_{t-1}+(1-\beta)g_t\odot g_t$   AdaDelta 算法：引入参数更新差值 $\Delta\theta$ 的平方调整学习率  $\Delta\theta_t=-\frac{\sqrt{\Delta X_{t-1}^2+\epsilon}}{\sqrt{G_t+\epsilon}}\odot g_t$ $\Delta X_{t-1}^2=\beta_1\Delta X_{t-2}^2+(1-\beta_1)\Delta\theta_{t-1}\odot\Delta\theta_{t-1}$   梯度估计修正  动量法：$\Delta\theta_t=\rho\Delta_{t-1}-\alpha g_t$ Nesterov 动量法：$\Delta\theta_t=\rho\Delta_{t-1}-\alpha g_t(\theta_{t-1}+\rho\Delta\theta_{t-1})$ Adam 算法(2015)  $M_t=\beta_1 M_{t-1}+(1-\beta_1)g_t,\hat M_t=\frac{M_t}{1-\beta_1^t}$ $G_t=\beta_2G_{t-1}+(1-\beta_2)g_t\odot g_t,\hat G_t=\frac{G_t}{1-\beta_2^t}$ $\Delta\theta_t=-\frac{\alpha}{\hat G_t+\epsilon}\hat M_t$     梯度截断  按值截断：$g_t=\max(\min(g_t,b),a)$ 按模截断：$g_t=\frac{b}{|g_t|}g_t$    参数初始化  固定方差参数初始化  高斯分布初始化 均匀分布初始化   方差放缩参数初始化  Xavier 初始化：方差为 $\frac{2}{M_{l-1}+M_l}$  恒等函数 Logistic: 16 Tanh   He 初始化(Kaiming)：反差为 $\frac{2}{M_{l-1}}$  ReLU     正交初始化：范数保持性 $|\delta^{(l-1)}|^2=|\delta^{(l)}|^2$  高斯分布初始化后，SVD 分解并取一个正交矩阵作为权重    数据预处理  尺度不变性：算法在缩放部分特征后不影响学习和预测 归一化 白化：降低冗余性 数据增强：Rotation, Flip, Zoom In/Out, Shift, Noise  优化地形  ReLU 激活函数 残差连接 逐层归一化  批量归一化（BN）：$\text{BN}_{\gamma,\beta}(z^{(l)})=\frac{z^{(l)}-\mu_B}{\sqrt{\sigma_B^2+\epsilon}}\odot\gamma+\beta$  $\mu_B=\frac{1}{K}\sum_{k=1}^Kz^{(k,l)}$   层归一化（LN）：$\text{LN}_{\gamma,\beta}(z_t^{(l)})=\frac{z^{(l)}-\mu}{\sqrt{\sigma^2+\epsilon}}\odot\gamma+\beta$  $\mu=\frac{1}{\mathbb{M_l}}\sum_{i=1}^{M_I}z_i^{(l)}$   权重归一化：通过再参数化将权重分为长度与方向  $W_{i,:}=\frac{g_i}{|v_i|}v_i$   局部响应归一化（LRN）    超参数优化  超参数：网络结构、优化参数、正则化参数 困难  组合优化问题 评估一组参数配置的时间代价高   网格搜索 随机搜索 贝叶斯优化 动态资源分配 神经架构搜索  网络正则化  $l_1$ 正则化 $l_2$ 正则化 弹性网络衰减 权重衰减：$\theta_1\leftarrow (1-\beta)\theta_{t-1}-\alpha g_t$  标准随机梯度下降中与 $l_2$ 正则化等价   提前停止：使用验证集错误代替期望错误 丢弃法  训练时：$\text{mask}(x)=m\odot x, m$ 以概率为 $p$ 的伯努利分布随机生成 测试时：$\text{mask}(x)=px$ 集成学习角度：丢弃相当于采样一个子网络 贝叶斯学习角度   标签平滑：软目标标签，给其余 $K-1$ 个类概率 $\frac{\epsilon}{K-1}$  </description>
    </item>
    
    <item>
      <title>常微分方程数值解法</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/5-%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%95%B0%E5%80%BC%E8%A7%A3%E6%B3%95/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/5-%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%95%B0%E5%80%BC%E8%A7%A3%E6%B3%95/</guid>
      <description>常微分方程   一阶常微分方程初值问题
$$ \begin{cases} y&#39;=f(x,y) &amp;amp; a\leq x \leq b\newline y(x_0)=y_0 \end{cases} $$
  存在性定理：如果 $f(x,y)$ 在带形区域 $R={(x,y)|a\leq x\leq b,-\infty&amp;lt;y&amp;lt;+\infty}$ 中连续且 $y$ 满足 Lipschitz 条件，则初值问题存在唯一的连续可微解
  基本解法：差商代替导数
  局部阶段误差：第 n 步为准确解的情况下，用数值方法计算 $y_{n+1}$ 时的误差 $y(x_{n+1})-y_{n+1}$
  整体阶段误差：无舍入误差情况下，$y(x_n)-y_n$，通常比局部截断误差低一阶
  数值方法的解 $p$：整体阶段误差 $O(h^p)$
  Euler 方法（差分方法）  Euler 方法  步长 $h$ $x_n=x_0+nh$ $y_{n+1}=y_n+hf(x_n,y_n)$ 局部阶段误差：$O(h^2)$   后退 Euler 方法 2 步 Euler 方法  $y(x_{n+1})=y(x_{n-1})+2hf(x_n,y_n(x_n))$ 局部截断误差：$\frac{h^3}{3}y&#39;&#39;&#39;(\xi)$    Taylor 展开法  $y_{n+1}=y_n+h\Phi(x_n,y_n,h)$ 增量函数：$\Phi(x_n,y_n,h)$  $y(x+h)=y(x)+h(f(x,y(x)))+\frac{1}{2!</description>
    </item>
    
    <item>
      <title>中间代码生成</title>
      <link>https://zhengzangw.com/notes/compiler/5-%E4%B8%AD%E9%97%B4%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/5-%E4%B8%AD%E9%97%B4%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</guid>
      <description>三地址代码  指令集合  运算/赋值：x=y op z, x=op z 复制：x=y 无条件转移指令：goto L 条件转移指令：if x goto L, if False x goto L 条件转移指令：if x relop y goto L 过程调用/返回：param $x_i$, call p,n 带下标的复制：x=y[i], x[i]=y 地址/指针赋值指令：x=&amp;amp;y, x=*y, *x=y   四元式：op arg1 arg2 result  单目运算符：no arg2 param 运算不使用 arg2, result 转移目标：result   三元式：使用三元式的位置来引用三元式的运算结果 简接三元式：包含一个指向三元式的指针的列表 静态单赋值（SSA）：所有赋值都是针对不同名的变量 回填  </description>
    </item>
    
    <item>
      <title>5. Data Wragling</title>
      <link>https://zhengzangw.com/notes/command-line/5-data-wragling/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/5-data-wragling/</guid>
      <description>Text handling more less tac head -n5 tail -n5 sed &amp;#39;s/.*Disconnected from//&amp;#39; # or gsed in mac sed &amp;#39;s/[ab]//g&amp;#39; sed -E &amp;#39;s/.*Disconnected from (invalid )?user .* //&amp;#39; wc -l sort -nk1,1 # numeric, column 1 to 1 uniq -c awk &amp;#39;{print $2}&amp;#39; # print the second column awk &amp;#39;BEGIN { rows = 0 } $1 == 1 &amp;amp;&amp;amp; $2 ~ /^c.*e$/ {rows += 1} END {print rows}&amp;#39; cat file | paste -sd, # seperate by .</description>
    </item>
    
    <item>
      <title>5.剪裁</title>
      <link>https://zhengzangw.com/notes/computer-graphics/5-trimming/</link>
      <pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-graphics/5-trimming/</guid>
      <description>点剪裁 $P=(x,y)$ 满足 $x_{w\min}\leq x\leq xw_{\max},y_{w\min}\leq y\leq yw_{\max}$ 则保存
线段剪裁 Cohen-Sutherland 剪裁算法  使用编码测试减少要计算交点的次数 区域码  位一：左边界，$x&amp;lt;x_{w\min}$ 位二：右边界，$x&amp;gt;x_{w\max}$ 位三：下边界，$y&amp;lt;y_{w\min}$ 位四：上边界，$y&amp;gt;y_{w\max}$   两端点区域码均为 0000：完全区域内 两端点与运算结果不为 0000：完全区域外 其它：求交后按左右上下顺序检测线段端点  梁友栋-Barsky 参数剪裁算法  诱导窗口：线段所在直线与裁剪窗口的交点线段 一维参数表示  $P_1P_2$: $P=P_1+u(P_2-P_1)$ $Q_1:u_1$ $Q_2:u_2$   判断参数  $\Delta x=x_2-x_1,\Delta y = y_2-y_1$ $p_1=-\Delta x,q_1=x_1-x_{w\min}$ $p_2=\Delta x,q_2=x_{w\max}-x_1$ $p_3=-\Delta y,q_3=y_1-y_{w\min}$ $p_4=\Delta y,q_4=y_{w\max}-y_1$ $r_i=\frac{q_i}{p_i}$   $p_k$：  $0$: 平行 $&amp;lt;0$: 从外到内，更新 $u_1=\max(0,r_k)$ $&amp;gt;0$: 从内到外，更新 $u_2=\min(1,r_k)$   若 $u_1&amp;gt;u_2$，舍弃线段；否则根据 $u$ 求出交点  Nicholl-Lee-Nicholl 剪裁算法  仅适用于二维直线剪裁 确定 $P_1$ 与窗口相对位置（9宫格） 确定 $P_2$ 所在区域（$P_1$对窗口四个顶点做射线） 确定交点 比较和除法次数较少，减少了求交运算  非矩形剪裁窗口剪裁处理  凸多边形：参数化线段裁剪算法可以扩充 圆等曲线边界：涉及非线性方程  圆：先舍弃外接矩形之外，再通过如到圆心距离判断   凹多边形：分解为一组凸多边形  凹多边形判别：绕多边形叉乘出现异号 向量法分解：沿出现异号的叉乘矢量对中第一条边延长线分解多边形 旋转法分解：绕逆时针处理顶点，将某顶点平移到原点，顺时针顺转多边形使下一顶点落在 $x$ 轴上，若再下一点落在 $x$ 下，则多边形为凹多边形，沿 $x$ 轴分解    多边形剪裁 Sutherland-Hodgman 算法  按序逆时针遍历个顶点  起始点和终止点都在窗口边界外侧：不增加 都在内测：输出终止点 外到内，增加交点和终止点 内到外，增加交点   改进：增加点剪裁 缺点：凹多边形剪裁出现多余的线  Weilerr-Atherton 算法  预处理  建立多边形顶点表和裁剪窗口顶点表 求出所有交点 两顶点表中相同交点间建立双向指针   裁剪过程：任选一交点为起点  若为进点，跟踪多边形边界 若为出点，跟踪窗口边界    多边形裁剪的相关问题  多边形窗口  Liang-Barskey 线段裁剪 Weiler 算法   曲线边界区域 文字裁剪  字符串裁剪策略 字符取舍策略 单字符裁剪   外部裁剪  </description>
    </item>
    
    <item>
      <title>5. Outlier Analysis</title>
      <link>https://zhengzangw.com/notes/data-mining/5-outlier-analysis/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-mining/5-outlier-analysis/</guid>
      <description>Outlier analysis  Outliers  Global: deviates from the rest of the data set Contextual: deviates significantly with respect to a specific context of the object Collective: objects as a whole deviate significantly from the entire data set   Categorization based on supervision  Supervised Unsupervised Semi-supervised   Mining contextual outliers  transforming contextual to conventional Modeling normal behavior   Mining collective outliers  Exploring the structure of the data   high dimensional data  dimensionality reduction partiion the original feature space into small region    Statistical  Parametric approaches  Univariate  mean + standard deviation: $\mu\pm3\sigma$ median $\pm$ 1.</description>
    </item>
    
    <item>
      <title>5-多元积分</title>
      <link>https://zhengzangw.com/notes/calculus/section5/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/calculus/section5/</guid>
      <description>第一型  $E\subset \mathbb{R}^n,\forall \epsilon&amp;gt;0,\exists\delta&amp;gt;0,\forall P$ 为 $E$ 分割，$\lVert P\rVert&amp;lt;\delta,\forall\xi$ 为 $P$ 特殊点选取，有 $|S(f,P,\xi)-I|&amp;lt;\epsilon$ 则 $f$ 在 $E$ 上 Riemann 可积，$I=\int_E f(x_1,x_2,\cdots,x_n)dx_1dx_2\cdots dx_n=\int_E f$  Riemann 可积 $\iff$ $f$ 间断点集测度为 $0$ 线性，单调性，非负性，三角不等式，积分域可加   累次积分：$\int_{[a,b]\times[c,d]}f(x,y)dxdy=\int_a^b(\int_c^df(x,y)dy)dx$ 积分换元定理：$E$ 为 $\mathbb{R}^n$ 中的非空有界闭集，$\Phi:E\rightarrow\mathbb{R}^n$ 且为单射，$f$ 在 $\Phi(E)$ 上 Riemann 可积，则 $\int_E(f\circ \Phi)|\det(D\Phi)|=\int_{\Phi(E)}f$  极坐标变换：$\Phi(r,\theta)=(r\cos\theta,r\sin\theta),\det(D\Phi)=r$ 柱坐标变换：$\Phi(r\cos\theta,r\sin\theta,z)=(x,y,z),\det(D\Phi)=r$ 球坐标变换：$\Phi(r,\varphi,\theta)=(r\sin\varphi\cos\theta,r\sin\varphi\cos\theta,r\cos\varphi)=(x,y,z),\det(D\Phi)=r^2\sin\varphi$   第一型曲线积分：$\gamma:[a,b]\rightarrow\mathbb{R}^n$ 连续可微，$f$ 在 $\gamma([a,b])$ 上有定义，若 $f(\gamma(t))\lVert\gamma&#39;(t)\rVert$ 在 $[a,b]$ 上可积，则 $f$ 在 $\gamma$ 上第一型可积，$\int_\gamma fds=\int_a^bf(\gamma(t))\lVert\gamma&#39;(t)\rVert dt$ 第一型曲面积分：$E\subseteq\mathbb{R}^2,\Phi:E\rightarrow\mathbb{R}^3$ 为连续可微曲面，$\int_\Phi fd\sigma=\int_E f\circ\Phi\lVert\frac{\partial\Phi}{\partial u}\times\frac{\partial\Phi}{\partial v}\rVert dudv$  第二型  定向：$\mathbb{R}^n$ 有两个定向，由有序向量组 ${X_1,\cdots,X_n}$ 代表定向, 正向 $\det([X_1,\cdots,X_n])&amp;gt;0$  有序标准基 ${e_1,\cdots,e_n}$ 正向 对换改变定向 $\mathbb{R}^3$ 手系：以拇指为第一轴, 食指为第二轴, 中指为第三轴作标架  右手系为正向   映射  保向：$\det(D\Phi)$ 恒正 反向：$\det(D\Phi)$ 恒负   曲面定向  可定向：若能在 $S$ 上每一点 $P$ 处指定以一非零向量 $n(P)$ 使 $P$ 在 $S$ 上连续运动时，$n(P)$ 的方向也连续变化   边界定向：$\partial D$  头向读者，$D$在人左     外积：$dx_i\wedge dx_j$  反交换律 $dx_1\wedge\cdots\wedge dx_n(a_1,\cdots,a_n)=\det([a_1,\cdots,a_n])$   微分形式  零阶微分形式：$f$  自变量为定向点   一阶微分形式：$\omega=f_1(x_1,\cdots,x_n)dx_1+\cdots+f_n(x_1,\cdots,x_n)dx_n$  自变量为 $\square(P;v)$ $\omega(\square(P;v))=\sum_{i=1}^nf_i(P)dx_i(v)$   二阶微分形式：$\omega=\sum_{i,j}f_{ij}(x_1,\cdots,x_n)dx_i\wedge dx_j$  $\omega(\square(P;a,b))=f(P)dx\wedge dy(a,b)=f(P)\cdot\det([a,b])$     第二型积分：$f$ 在 $D$ 上 Riemann 可积  $\int_D\omega = \int_Df(x_1,\cdots,x_n)dx_1dx_2\cdots dx_n$ $\int_{-D}\omega = \int_Df(x_1,\cdots,x_n)dx_1dx_2\cdots dx_n$   拉回：$\Phi:U_1\rightarrow U_2$ 可微映射，$\Phi^*(f(x_1,x_2)dx_1\wedge dx_2)=(f\circ\Phi)(y_1,y_2)d\Phi_1\wedge d\Phi_2,\Phi(y_1,y_2)=(\phi_1,\phi_2)$  $\Phi^*(fdx_1\wedge\cdots\wedge dx_n)=(f\circ\Phi)\det(D\Phi)dy_1\wedge\cdots\wedge dy_n$ 链法则：$\Phi_1:U_1\rightarrow U_2,\Phi_2\rightarrow U_3,(\Phi_2\circ\Phi_1)^\omega=\Phi_1^(\Phi_2^*\omega)$   积分换元定理：$\Phi:D\rightarrow E$ 是连续可微之一一对应，且 $\det(D\Phi)$ 恒正或负，$\omega$ 可积，则 $\int_D\Phi^*\omega=\int_\Phi(D)\omega$  $\Phi(D)$ 定向由 $\Phi$ 诱导   第二型曲线积分：$\int_\gamma\omega=\int_{[a,b]}\gamma^*\omega$ 第二型曲面积分：$\int_\Phi\omega=\int_D\Phi^*\omega$ 外微分：$d\omega$  二次连续可微：$dd\omega=0$ 二次连续可微：$d\Phi^*\omega=\Phi^*d\omega$       名称 对象 公式 $\omega$ 向量场形式     曲线 Newton-Leibniz 公式 $\mathbb{R}$ $\int_Cdf=\int_{\partial C}f$     Green 公式 $\mathbb{R}^2$区域 $\int_Dd\omega=\int_{\partial D}\omega$ $P(x,y)dx+Q(x,y)dy$    Stokes 公式 $\mathbb{R}^3$定向曲面 $\int_Sd\omega=\int_{\partial S}\omega$ $P(x,y,z)dx+Q(x,y,z)dy+R(x,y,z)dz$ $\int_S\langle\text{curl}\mathbf{X},\mathbf{n}\rangle d\sigma=\int_{\partial S}\langle X,T\rangle ds$   Gauss 公式 $\mathbb{R}^3$区域 $\int_Dd\omega=\int_{\partial D}\omega$ $P(x,y,z)dy\wedge dz+Q(x,y,z)dz\wedge dx+R(x,y,z)dx\wedge dy$ $\int_D\text{div}\mathbf{X}dxdydz=\int_{\partial D}\langle\mathbf{X},\mathbf{n}\rangle d\sigma$    </description>
    </item>
    
    <item>
      <title>5-强化学习</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/6-reinforce-learning/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/6-reinforce-learning/</guid>
      <description>强化学习  交互学习：通过交互学习一个目标，Trial and Error  状态/奖励的分布式是策略依赖的   model-base: $V$ 根据已知数据计算，如动态规划 model-free: 取样试验得到 在线学习：如 Sarsa 离线学习：如 Q Learning  Markov Decision Process  $S$: 状态集合 $A$: 动作集合 $R:S\times A\rightarrow\mathbb{R}$: 即时奖励函数 $\delta:S\times A\times S\rightarrow \mathbb{R}$: 状态转移概率 轨迹：经验/情节(episode) 策略  $\pi:S\rightarrow A$ $\pi:S\times A\rightarrow\mathbb{R}$   单状态学习，$\pi^*(s)=\argmin_\pi R(s,\pi(s))$ 多状态学习：$\pi^*(s)=\argmin_\pi V^\pi(s)$  有限状态：$R_t=\sum_{1\leq i\leq N}R(s_i,a_i)$ 无限状态  有折扣：$\sum_{i=0}^\infty\gamma^iR(s_i,a_i)$ 无折扣：$\lim_{N\rightarrow\infty}\frac{1}{N}\sum_{i=0}^{N-1}R(s_i,a_i)$     值函数  $V^\pi(s)=\mathbb{E}_\pi[R_t|s_t=s]$ $Q^\pi(s,a)=\mathbb{E}_\pi[R_t|s_t=s,a_t=a]$   $\pi$ 为最优策略 $\iff\forall s,V^(s)=V^{\pi^}(s)=\max_\pi V^{\pi}(s)=\max_a Q^{\pi}(s,a)$ Bellman 等式：$V^{\pi}(s)=\mathbb{E}\pi[R_t+\gamma V^\pi(s{t+1})|s_t=s]$  $V^\pi(s)=\sum_{a\in A}\pi(a|s)[R(s,a)+\gamma\sum_{s&#39;}\delta(s,\pi(s),s&#39;)V^{\pi}(s&#39;)]$ $Q^\pi(s,a)=R(s,a)+\gamma\sum_{s&#39;}\delta(s,a,s&#39;)V^\pi(s&#39;)$    动态规划方法  策略评估（Policy Evaluation）：MDP 已知，给定一个策略 $\pi$，评估返回值  有限状态：求解方程组 策略迭代：初始 $V^\pi(s)$ 后根据 Bellman 等式更新迭代   最优控制（Optiomal Control）：MDP 已知，寻找一个最优策略 $\pi^*$  策略迭代算法  值迭代：$V^{i+1}(s)\leftarrow\max_a Q^\pi(s,a)$ 策略迭代</description>
    </item>
    
    <item>
      <title>5-符号学习</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/5-learning/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/5-learning/</guid>
      <description>符号学习 又称样例学习，概念学习，归纳推理
 实例集合：$X$ 目标概念：$c:X\rightarrow{0,1}$ 假设空间 $H$: $h:X\rightarrow{0,1}$ 概念学习：寻找假设 $h$，使得 $\forall x\in X,h(x)=c(x)$ 归纳学习假设：任一假设如果在足够大的训练样例集合中能很好的逼近目标概念函数，它也能在未见实例中很好的逼近目标概念 $h_j\geq h_k\iff (\forall x\in X)(h_k(x)=1\rightarrow h_j(x)=1)$ 一致：$\text{consistent}(h,D)=(\forall\langle x,c(x)\rangle\in D)h(x)=c(x)$ 变型空间（版本空间 version space）：$\text{VS}_{H,D}={h\in H|\text{consistent}(h,D)}$ 极大泛化：$G={g\in H|\text{consistent}(g,D)\wedge(\neg\exists g&#39;\in H)(g&#39;&amp;gt;g\wedge \text{consistent}(g&#39;,D))}$ 极大特化：$S={s\in H|\text{consistent}(s,D)\wedge(\neg\exists s&#39;\in H)(s&#39;&amp;gt;s\wedge \text{consistent}(s&#39;,D))}$ 表示定理：$\text{VS}_{H,D}={h\in H|(\exists s\in S)(\exists g\in G)(g\geq h\geq s)}$ 归纳推理/机器学习的根本问题  目标概念假设不在假设空间怎么办? 能设计包含所有假设的空间吗? 假设空间大小对未见实例的泛化能力有什么影响? 假设空间大小对所需训练样例数量有什么影响?    有偏学习 作为搜索的概念学习，假设空间为合取式表示
 Find-S 算法（寻找极大特殊假设）  $h(a_1,\cdots,a_n)=$最特殊的假设 for $x\in X,c(x)=1$  for $a_i$  if $x$ 不满足 $a_i$ 则将 $h$ 中的 $a_i$ 替换为 $x$ 满足的另一个最一般的约束       列表消除算法  for $\langle x,c(x)\rangle\in D$  $H=H\backslash{h\in H|h(x)\not=c(x)}$     候选消除算法：正例搜索 $S$，反例缩小 $G$  如果 $d$ 是一正例  从 $G$ 中移去所有与 $d$ 不一致的假设 对 $S$ 中每个与 $d$ 不一致的假设 $s$  从 $S$ 中移去 $s$ 把 $s$ 的所有的极小泛化式 $h$ 加入到 $S$ 中，其中 $h$ 满足 $h$ 与 $d$ 一致，而且 $G$ 的某个成员比 $h$ 更一般   从 $S$ 中移去所有这样的假设：它比 $S$ 中另一假设更一般   如果 $d$ 是一个反例  从 $S$ 中移去所有与 $d$ 不一致的假设 对 $G$ 中每个与 $d$ 不一致的假设 $g$  从 $G$ 中移去 $g$ 把 $g$ 的所有的极小特化式 $h$ 加入到 $G$ 中，其中 $h$ 满足 $h$ 与 $d$ 一致，而且 $S$ 的某个成员比 $h$ 更特殊   从 $G$ 中移去所有这样的假设：它比 $G$ 中另一假设更特殊      无偏学习 析取表示，幂集</description>
    </item>
    
    <item>
      <title>5. Cayley&#39;s Formula</title>
      <link>https://zhengzangw.com/notes/combinatorics/5-cayley-formula/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/5-cayley-formula/</guid>
      <description>Cayley&amp;rsquo;s formula: There are $n^{n-2}$ different trees on $n$ distinct vertices  Double Counting  Count: # of sequences of adding directed edges to an empty graph to form a rooted tree  From a Tree: $T_nn(n-1)!=n!T_n$ From an empty graph: $\prod_{k=0}^{n-2}n(n-k-1)=n^{n-2}n!$    Prüfer code  encoder:  $T_1=T$ for i=1 to n-1  $u_i$: smallest leaf in $T_i$ $(u_i,v_i)$: edge in $T_i$ $T_{i+1}=T_i\backslash u_i$   return $(v_1,v_2,\cdots,v_{n-2})$   decoder:  $T=\emptyset,v_{n-1}=n$ for i=1 to n-1  $u_i$: smallest not in ${u_1,\cdots,u_{i-1}}\cup{v_i,\cdots,v_{n-1}}$ $T\cup={u_i,v_i}$   return $T$    Kirchhoff&amp;rsquo;s Matrix-Tree Theorem  Adjacent matrix $A$: $A_{ij}=[{i,j}\in E]$ Degree matrix $D$: $D_{ij}=\text{deg}(i)[i=j]$ incidence matrix: $B_{n\times m}$  $$ B(i,e)=\begin{cases} 1 &amp;amp; e={i,j}\wedge i&amp;lt;j\newline -1 &amp;amp; e={i,j}\wedge i&amp;gt;j\newline 0 &amp;amp; o.</description>
    </item>
    
    <item>
      <title>5. Semidefinite Programs</title>
      <link>https://zhengzangw.com/notes/advanced-algorithm/5-semidefinite-program/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-algorithm/5-semidefinite-program/</guid>
      <description>A Wishlist for Optimization Algorithms  Nonlinear, non-convex objectives Powerful enough to tackle hard problems in a systematic way, and meanwhile is still practical Becoming more accurate as we&amp;rsquo;re paying more A generic framework that can be applied obviously to various problems. Methods  sum-of-squares (SoS) SDP Lasserre hierarchy Lovász-Schrijver hierarchy    Quadratic programming $$\min \frac{1}{2}x^TQx+c^Tx$$
Semidefinite Program  $A≽0$: symmetric matrix $A\in\mathbb{R}^{n\times n}$ is positive semidefinite ($\forall x\in\mathbb{R}^n,x^TAx\geq0$) $A≽0\iff\forall\lambda(A)\geq 0\iff\exists B\in\mathbb{R}^{n\times n},A=B^TB$ Semidefinite Programing(SDP): $C,A_1,\cdots,A_k\in\mathbb{R}^{n\times n},b_1,b_2,\cdots,b_k\in\mathbb{R}$  $$ \begin{aligned} \max\ &amp;amp; \text{tr}(C^TY)=\sum_{i=1}^n\sum_{i=1}^nc_{ij}y_{ij}\newline \text{s.</description>
    </item>
    
    <item>
      <title>Colorful Image Processing</title>
      <link>https://zhengzangw.com/notes/digital-image-process/4-colorful-image/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/4-colorful-image/</guid>
      <description>术语  全彩色：用全彩色传感器获取的真实彩色 伪彩色：为特定灰度或灰度范围赋予颜色  电磁光谱  无色光：黑白  属性：强度 灰度级：表示强度的数值   彩色光：400nm~700nm 电磁波  光谱色：单色光对应的颜色   单位  辐射（能量）：$W$ 辐射强度（单位立体角内辐射功率）：$W$/steradian 光通量（人眼对不同波长光的变化敏感度）：流明 lm 光强（单位立体角内光通量）：坎德拉 cd = lm/steradian 亮度（主观描绘，无单位）    光感受器（生物特性）  彩色视觉（color vision）：基于物体所反射、发出或透过的光的波长以区分物体 人的彩色视觉：脑响应当进入的光与眼中的若干种视锥细胞作用时所产生的刺激  暗光照：光由视网膜上的视杆细胞 (500nm) 检测，在彩色视觉中只起很少的作用 亮视觉：锥状细胞(1965)， 600~700 万个, L (575nm, 65%), M (535nm, 33%), L (445nm, 2%)    主颜色  主颜色 (国际照明委员会, CIE, 1931): R 700nm, G 546.1nm, B 435.8nm 次生色：主颜色叠加（无法生成所有颜色） 主波长：描述非纯色光的颜色 颜料的主颜色（吸收）：Yellow, Magenta, Cyan  CIE XYZ 色彩空间</description>
    </item>
    
    <item>
      <title>5-安全性与完整性</title>
      <link>https://zhengzangw.com/notes/database/5-%E5%AE%89%E5%85%A8%E6%80%A7%E4%B8%8E%E5%AE%8C%E6%95%B4%E6%80%A7/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/5-%E5%AE%89%E5%85%A8%E6%80%A7%E4%B8%8E%E5%AE%8C%E6%95%B4%E6%80%A7/</guid>
      <description>安全性保护 (security)  防止非法使用数据库  要求用户通过规定的访问途径 要求按照规定的访问规则       Term      安全数据库（可信数据库） 适应网络环境下安全要求级别的数据库   可信计算基（TCB） 为实现数据库安全所采用的所有实施策略与机制的集合   主体 数据的访问者   客体 数据库中的数据   身份标识与鉴别 每个主体标识自己的标识符和访问口令   自主访问控制（DAC） 基于存取矩阵(HRU)的安全控制模型   存取权限    强制访问控制（MAC） 通过无法回避的存取限制来防止各种攻击   数据完整性 防止非法插入，删除，修改等影响数据完整性的操作   隐蔽通道 非正规的，不受 TCB 控制的访问通道   审计 跟踪用户对数据的访问操作   访问监控器 独立的机构，TCB 在网络中的实现     安全标准  1985 TCSEC 国际标准(ISO 15408) CC V2.</description>
    </item>
    
    <item>
      <title>Support Vector Machine</title>
      <link>https://zhengzangw.com/notes/machine-learning/5-svm/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/5-svm/</guid>
      <description>SVM 基本型  划分超平面：$\omega^Tx+b=0$  点到超平面的距离：$\frac{|\omega^Tx+b|}{||\omega||}$    $$ \begin{cases} \omega^Tx_i+b\geq y_i, &amp;amp; y_i=+1 \newline \omega^Tx_i+b\leq y_i, &amp;amp; y_i=-1 \end{cases} $$
 支持向量（support vector）：使上式成立取等的样本点 间隔（margin）：两个异类支持向量到超平面的距离 $\frac{2}{||\omega||}$ SVM 基本型(Support Vector Machine)  $$ \begin{aligned} \min_{\omega,b} &amp;amp; \frac{1}{2}||\omega||^2 &amp;amp; \newline s.t. &amp;amp; y_i(\omega^Tx_i+b)\geq 1, &amp;amp;i=1,2,\cdots,m \end{aligned}\newline $$
 凸优化求解：复杂度与样本维度（等于权值 $\omega$ 的维度）有关  对偶问题  复杂度与样本数量（等于拉格朗日算子$\alpha$的数量）有关 解的稀疏性：最终模型仅与支持向量有关  KKT 条件导出    对偶问题的转化  Step1: 拉格朗日函数：$L(\omega,b,\alpha)$ Step2: 对 $\omega$ 和 $b$ 求偏导并令为零  $\omega=\sum_{i=1}^m\alpha_iy_ix_i$   Step3: 回代可得  $$ \begin{aligned} \max_{\alpha} &amp;amp; \sum_{i=1}^m\alpha_i-\frac{1}{2}\sum_{i=1}^m\sum_{i=1}^m\alpha_i\alpha_jy_iy_jx_i^Tx_j \newline s.</description>
    </item>
    
    <item>
      <title>5-极限理论</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/5-%E6%9E%81%E9%99%90%E7%90%86%E8%AE%BA/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/5-%E6%9E%81%E9%99%90%E7%90%86%E8%AE%BA/</guid>
      <description> 大数定律  $X_n\overset{P}{\rightarrow}X$: 随机变量序列${X_n}$ 依概率收敛于随机变量 $X$, 即 $\lim_{n\rightarrow\infty}P(|X_n-X|\geq\epsilon)=0$ ${X_n}$ 服从大数定律：$\frac{1}{n}\sum_{k=1}^n(X_k-EX_k)\overset{P}{\rightarrow}0$ 马尔科夫大数定律：${X_n}$ 满足 $\frac{1}{n^2}D(\sum_{k=1}^nX_k)\rightarrow0$ （马尔科夫条件）则 ${X_n}$ 服从大数定律 切比雪夫大数定律：${X_n}$ 为两两互不相关的随机变量序列，又存在 $C&amp;gt;0$, 使 $D(X_k)\leq C,k=1,2,&amp;hellip;$, 则 ${X_n}$ 服从大数定律 独立同分布大数定律： ${X_n}$ 为独立同分布的随机变量，$EX_n=\mu$ ($D(X_n)=\sigma^2&amp;lt;\infty$)，则 $\frac{1}{n}\sum_{k=1}^nX_k\overset{P}{\rightarrow}\mu$ Bernoulli 大数定理：$\mu_n$ 为 $n$ 重 伯努利试验中 $A$ 发生的次数，$p$ 为 $A$ 在每次实验中发生的概率，则任意的 $\epsilon$ 有 $\lim_{n\rightarrow\infty}P(|\frac{\mu_n}{n}-p|\geq\epsilon)=0$   中心极限定理  ${X_n}$ 服从中心极限定理：${X_n}$ 为一列相互独立的随机变量序列，$EX_k=\mu_k,D(X_k)=\sigma^2,k=1,2,&amp;hellip;$ 均存在，对于标准化变量列 $Y_n^=\frac{\sum_{k=1}^nX_k-\sum_{k=1}^n\mu_k}{\sqrt{\sum_{k=1}^n\sigma_k^2}}$ 有 $\lim_{n\rightarrow\infty}P(Y_n^\leq x)=\Phi(x)$  $\sum_{k=1}^nX_k$ 的渐进分布为 $N(E(\sum_{k=1}^nX_k),D(\sum_{k=1}^nX_k))$   列维-林德伯格中心极限定理：${X_n}$ 为独立同分布的随机变量序列，$EX_n=\mu,D(X_n)=\sigma^2$ 都存在，则 ${X_n}$ 服从中心极限定理 拉普拉斯中心极限定理：$\lim_{n\rightarrow\infty}P(\frac{\mu_n-np}{\sqrt{npq}}\leq x)=\Phi(x)$  $X\sim B(n,p), X\sim N(np,npq)$ $X\sim P(n), X\sim N(n,n)$   频率估计概率：$P(|\frac{\mu_n}{n}-p|&amp;lt;\epsilon)=2\Phi(\epsilon\sqrt{\frac{n}{pq}})-1$ 林德伯格-费勒定理：${X_n}$ 是独立随机变量列，$\mu_n=E(X_n),\sigma_n^2=D(X_n),B_n^2=\sum_{i=1}^n\sigma_i^2$。若对任何 $\tau&amp;gt;0$, 有 $\lim_{n\rightarrow\infty}\frac{1}{B_n^2}\sum_{k=1}^n\sum_{k=1}^nE((X_k-\mu_k)^2[\vert X_k-\mu_k\vert&amp;gt;\tau B_n])=0$, 则随机变量 $X_n^*=\sum_{k=1}^n\frac{X_k-\mu_k}{B_n}$ 服从中心极限定理    </description>
    </item>
    
    <item>
      <title>差错检验和纠正</title>
      <link>https://zhengzangw.com/notes/data-communication/4-%E5%B7%AE%E9%94%99%E6%A3%80%E9%AA%8C%E5%92%8C%E7%BA%A0%E6%AD%A3/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/4-%E5%B7%AE%E9%94%99%E6%A3%80%E9%AA%8C%E5%92%8C%E7%BA%A0%E6%AD%A3/</guid>
      <description>差错类型  单比特差错 突发差错     概率值      $P_b$ BER, 接受到一个差错比特的概率   $P_1$ 无比特差错帧到达概率   $P_2$ 某种差错检测算法下，含有一个或多个未检测到的比特差错的帧的到达概率   $P_3$ 某种差错检测算法下，含有一个或多个且没有未检测到的比特差错的帧的到达概率    差错检测 奇偶检验  两个比特错误无法检测 同步传输：偶校验 异步传输：奇校验  二维奇偶检验  $i+j+1$ 个 矩形四个错误无法检测  因特网检验和  发送方计算检验位  将两个数字视为无符号二进制整数相加 如果最左边有进位比特，则和再加1 取反码   接收方验证  加上检验位后应全1    循环冗余检验 (CRC,Cyclic Redundancy Check)  发送的数据：$T[D(k)|F(n-k)]$  $D$ 数据 $F$ 检验序列 $P(n-k+1)$ 除数 $T=2^{n-k}D+F\equiv0\pmod{P}$   $F=2^{n-k}D\bmod P$  模2运算 多项式表示  $11001 \rightarrow X^4+X^3+1$   寄存器  Galois 域除法器      差错纠正  汉明距离 $d(v_1,v_2)$  差错检测+差错重传  无线链路:高比特差错率导致大量重传 卫星链路: 长传播时延导致效率低下  前向纠错 (FEC)  差错类型  无差错 可检测，可纠正差错 可检测，不可纠正之差错 不可检测之差错   见《代数编码》  </description>
    </item>
    
    <item>
      <title>多媒体信息分析与处理</title>
      <link>https://zhengzangw.com/notes/multimedia/5-process/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/multimedia/5-process/</guid>
      <description>检索  文本  HITS PageRank   图像  基于文本 基于关键字 基于内容   音频 视频  内容分析  音频  听觉研究问题  语言信号处理与识别 一般音频信号分析 基于内容的音乐分析：自动分割，自动分类，自动检索   异常声音检测   图像  人脸检测 表情识别   视频  目标检测：区域入侵检测，拌线检测，物品遗留检测 多目标检测：车流密度检测，人数统计 移动目标跟踪 目标行为识别    </description>
    </item>
    
    <item>
      <title>I/O</title>
      <link>https://zhengzangw.com/notes/advanced-programming/5-io/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/5-io/</guid>
      <description>I/O  输入输出基于字节流 过程式：printf, scanf  不是强类型，不利于类型检查，会导致类型相关的运行错误 当格式串描述与数据不一致时会导致运行时刻的错误   面向对象：cout, cin, &amp;laquo;, &amp;raquo; ios  istream 控制台输入  ifstream 文件输入 istrstream 字符串输入   ostream  ofstream ostrstream   iostream  fstream strstream      面向控制台 I/O  预定义 I/O 对象  cin(istream) cout(ostream) cerr(ostream) 不带缓冲 clog(ostream) 带缓冲   操纵符 &amp;lt;iomanip&amp;gt;     操纵符 含义     endl 输出换行符并 flush   flush 输出缓存立刻输出   dec 10   oct 8   hex 16   setprecision(int n) 设置浮点数的精度   setiosflags(long flags) 设置输出格式，ios::scientific, ios::fixed   resetiosflags(long flags) 取消输出格式     浮点数输出格式为 ios::scientific 或 ios::fixed 时，setprecision 设置浮点数小数点后面的位数 输出格式为自动或两者都有时，setprecision 设置有效数字个数 字节流输出  ostream&amp;amp; ostream::put(char ch); cout.</description>
    </item>
    
    <item>
      <title>5. Data Link Layer</title>
      <link>https://zhengzangw.com/notes/conputer-network/5-data-link-layer/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/5-data-link-layer/</guid>
      <description>提供服务  成帧 链路接入  点对点链路  HDLC: Bit-Oriented Protocols PPP: Byte-Oriented Protocols SONET: Clock-Based Framing   广播链路  以太网 无线局域网     可靠交付 差错检验与纠正  差错检验  奇偶校验 因特网检验和：6比特 循环冗余检测  多路访问协议 广播链路的链路接入，期望特性
 当仅有一个节点发送数据，$R$ bps 吞吐量 $M$ 个节点发送数据，$\frac{R}{M}$ bps 吞吐量 协议是分散的 协议是简单的  信道划分协议  TDM FDM CDMA  随机接入协议 ALOHA 发送$\rightarrow$等待确认$\rightarrow$超时$p$ 概率重传
 信道最大利用率约 18%  $Np(1-p)^{2(N-1)}$   时隙 ALOHA：所有传输只允许在时隙的边界处开始，37%  $Np(1-p)^{N-1}$   无法利用局域网和分组无线网的一个重要性质：帧的传播时延小于传输时延  小的传播时延提供更好的网络状态反馈信息    CSMA (载波监听多点接入) Carrier Sensing Multiple Access</description>
    </item>
    
    <item>
      <title>5-其它</title>
      <link>https://zhengzangw.com/notes/linear-algebra/5-%E5%85%B6%E5%AE%83/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/linear-algebra/5-%E5%85%B6%E5%AE%83/</guid>
      <description>交换  （非负整数幂的）矩阵多项式: $f(A)=\sum_{i=0}^ka_iA^i$  乘法交换律: $f(A)g(A)=g(A)f(A)$   若$A$可逆，$A^{-k} = (A^{-1})^k$ $A^{n_1+n_2}=A^{n_1}A^{n_2},n_1,n_2\in\mathbb{Z}$ 矩阵多项式：$f(A)=\sum_ia_ix^i$  若$A$可逆，则有乘法交换律   $A$与$B$交换：$AB=BA$  $A$与$B_i$交换，则$A$与$\prod B$交换 $A$与$B_i$交换，则$A$与$\sum B$交换 $A_i$与$B_i$两两交换，则  $(\prod A_i)(\prod B_i) = (\prod B_i)(\prod A_i)$ $(\sum A_i)(\sum B_i) = (\sum B_i)(\sum A_i)$   $A$与$B$交换，$B$可逆，则$A$与$B^{-1}$交换 $A$与$A^T$未必交换    线性映射的考察  转置$\ ^T$为线性映射 tr()为线性映射 $\det()$为线性映射$\iff n=1$  杂  如下四结论等价：  $A$可逆 $AX=0$有唯一解 $\forall b\in\mathbb{F}$, $AX=b$ 有唯一解 $\exists b\in\mathbb{F}$, $AX=b$ 有唯一解    </description>
    </item>
    
    <item>
      <title>Field-Theory</title>
      <link>https://zhengzangw.com/notes/physics/field-theory/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/physics/field-theory/</guid>
      <description>&lt;h1 id=&#34;coordinate-system&#34;&gt;Coordinate system&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Cartesian system $(\vec i,\vec j,\vec k)$
&lt;ul&gt;
&lt;li&gt;orthogonal: $\vec i\cdot\vec j=\vec j\cdot\vec k=\vec k\cdot\vec i=0$&lt;/li&gt;
&lt;li&gt;right-handed screw relation: $\vec i\times\vec j=\vec k$, $\vec j\times\vec k=\vec i$, $\vec k\times \vec i=\vec j$&lt;/li&gt;
&lt;li&gt;$A\cdot B = A_1B_1+A_2B_2+A_3B_3$&lt;/li&gt;
&lt;li&gt;$$
A\times B=\det(\left[
\begin{matrix}
\vec i &amp;amp; \vec j &amp;amp; \vec k\newline
A_1 &amp;amp; A_2 &amp;amp; A_3\newline
B_1 &amp;amp; B_2 &amp;amp; B_3
\end{matrix}
\right])
$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;polar coordinate systems $(\vec e_\rho, \vec e_\phi)$
&lt;ul&gt;
&lt;li&gt;moving frames&lt;/li&gt;
&lt;li&gt;position vector $\vec\rho=\rho\vec e_\rho$&lt;/li&gt;
&lt;li&gt;$\vec e_\rho=cos\varphi\vec i+sin\varphi\vec j$&lt;/li&gt;
&lt;li&gt;$\frac{d\vec e_\rho}{dt}=\dot{\varphi}\vec e_\varphi$&lt;/li&gt;
&lt;li&gt;$\frac{d\vec e_\varphi}{dt}=-\dot{\varphi}\vec e_\rho$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spherical systems $(\vec e_\rho, \vec e_\phi, \vec k)$&lt;/li&gt;
&lt;li&gt;Cylindrical systems&lt;/li&gt;
&lt;li&gt;intrinsic system&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Chapter 5</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/chapter5/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/chapter5/</guid>
      <description>基本概念  指令周期：CPU取出并执行一条指令的时间 PC: 程序计数器（IP） IR: 指令寄存器 ID: 指令译码器 地址线、数据线、控制线：不属于CPU 启停控制逻辑：脉冲源（时钟脉冲）+启停控制线 数据通路： 指令执行过程中数据所经过的路径（包括路径上的部件） execution/function unit: 数据运算的部件 IAS计算机：储存程序计算机 1946 分散连接结构 Clock-to-Q(Latch Prop): 触发沿开始到输出端改变 Cycle Time = Clk-to-Q + Longest Delay + 建立时间 + clock skew 数据通路的时序控制  早期：机器周期、节拍和脉冲三级时序 现代：时钟信号，时钟周期=节拍    单总线数据通路  内总线 MDR: Memory Data Register MAR: Memory Address Register 四种基本操作  通用寄存器间传递数据  $R0_{out}, Y_{in}$   算术逻辑运算  $R1_{out}, Y_{in}$ $R2_{out}, add (Z_{in})$ $Z_{out}, R3_{in}$   主存读取一个字  MFC信号: Memory Function Complete WMFC控制信号 异步  $R1_{out}, MAR_{in}$ $read, WMFC$ $MDR_{out}, R2_{in}$   同步： SDRAM芯片   写入主存  $R1_{out}, MDR_{in}$ $R2_{out}, MAR_{in}$ $write, WMFC$      三总线数据通路  dual-port register file 三操作数指令执行可在一个时钟周期完成  单周期数据通路  单周期处理器：所以有指令的指令周期为一个时钟周期 MIPS 时钟周期以最复杂指令所用的指令周期为准  流水线数据通路  指令流水线  IF ID OF: 取操作数 EX WB   CPI = 1 组合逻辑+寄存器延时 适合流水线的指令集特征  指令长度一致 指令格式规整 load/store型指令风格   流水线冒险(hazard) : 流水线阻塞(stall)  structural hazard (hardware resource conflict) 访存冲突。 解决方法： 哈佛结构（指令储存器和数据储存器分离）， cache data hazard (data dependency) 前面指令的结果还没产生。 解决方法  软件方法 nop 数据转发 (forwarding) 通过bypass送到后续ALU 硬件阻塞 （插入气泡） load-use数据冒险只能如此解决 一个周期内特殊处理 (MIPS实现中)  RAW WAR WAW     control hazard  延迟损失时间片 C branch hazard  插入气泡 或 插入nop， 数量为C        高级流水线实现技术 super-pipelining  增加流水线级数，CPI仍为1，减小时钟周期  multiple issue pipeling  同时启动多条命令, CPI &amp;lt; 1。 IPC: 4路多发射流水线理性IPC为4 前提：数据通路中有多个执行部件 任务一：冒险处理 任务二：指令打包 ： 将能够并行处理的多条指令同时发送到发射槽中  speculation: 猜测指令执行结果调整执行顺序  软件推测： 编译器通过推测来静态重排指令，此种推测一定正确  静态多发射：主要通过静态推测，指令打包后多条指令合成VLIW(Very Long Instrution Word)。 VLIW处理器，Intel称为EPIC(Explicitly Parallel Instruction Computer)   硬件推测：处理器执行中通过推测动态调度指令  动态多发射：super-scalar processor (超标量处理器)  简单超标量处理器： 指令顺序发射，每次一条或多条 out-of-order execution： 使用dynamic pipeline scheduling技术， 通过指令相关性检测和动态分支预测，投机选择执行          指令集  CISC: 难以使用硬连线路控制器，只能用微程序控制器 RISC 控制器: 译码并产生控制信号 硬连线路控制器：指令执行过程中每个时钟周期所包含的控制信号为一个状态 微程序控制器  微程序：每条指令的执行过程的表示，由微指令组成 控制存储器（CS, 控存）：存储每条指令对于微程序的ROM 微程序定序器：计数器法/断定法（下址字段法）    </description>
    </item>
    
    <item>
      <title>5-图论</title>
      <link>https://zhengzangw.com/notes/problem-solving/5-graph-theory/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/5-graph-theory/</guid>
      <description>Introduction  Graph $G=(V,E)$  order $|V|$   incident $u\sim v$: u and v are neighbors  walk $W = (u=v_0, v_1, \dots, v_k = v)$  open walk: $u\neq v$ closed walk: $u=v$   trail: $u$-$v$ walk in which no edge is traversed more than once circuit: a closed trial of length 3 or more path: $u$-$v$ walk in which no vertices are repeated cycle: a circuit that repeats no vertex, except for the first and last   connected: $\exists$ $u$-$v$ path  distance $d(u,v)$: exists smallest $u$-$v$ path $P=(u=v_0,\dots,v_k=v)$ geodesic $u$-$v$ of length $d(u,v)$ diamemter $\text{diam}(G)=\max_{u,v}(d(u,v))$   subgraph  proper $G&#39;=(V&#39;,E&#39;),V&#39;\subsetneq V$ or $E&#39;\subsetneq E$ spanning $G&#39;=(V,E&#39;),E&#39;\subseteq E$ induced $G&#39;=(V&#39;,E&#39;)$: $\forall u,v\in V&#39;,$ if $uv\in E$, then $uv\in E&#39;$ edge-induced component: 最大连通子图   Common Graphs  trivial graph: $|V|=1$ $P_n$ : path (graph) $C_n$: circle (graph) $K_n$ : complete graph bipartite graph: contains no odd cycle  $K_{s,t}$: complete bipartite graph $K_{1,t}$ or $K_{s,1}$: star   k-partite graph  $K_{i_1,\dots,i_k}$: complete k-partite graph   n-cubes (hypercubes): $Q_n = Q_{n-1} \times K_2$, $Q_1 = K_2$   Operation  Complement: $\overline{G}=(V,K_n-E)$ Union: $G_1 \cup G_2=(V_1\cup V_2,E_1\cup E_2)$ Join: $G+H=(V_1\cup V_2, E_1\cup E_2\cup (V_1\times V_2))$ Cartesian product $G\times H=(V(G)\times V(H),E&#39;),((u,v),(x,y))\in E&#39;$ if $u=x,vy\in E(H)$ or $v=y,ux\in E$   multigraph: $E$ is a multiset  parallel edges: join the same pair of vertices   pseudograph: $(u,u)\in E$ oriented graph: if $(u,v)\in E$, $(v,u)\notin E$  oritentation of G   Storage  adjacent matrix edge set（可以链式前向星实现）    Digraph  digraph (directed graph): $(v,u)\neq (u,v)$ $(u,v)$: $u$ adjacent to $v$, $v$ adjacent from $u$ symmetric: $(u,v)\in E\iff(v,u)\in E$ underlying graph: replace direction and parallel edges tournament: orientation of complete graph  transitive: $(u,v),(v,w)\in T,(u,w)\in T$ every tournament contains a Hamiltonian path Hamiltonian iff strong   weakly connected: underlying graph is connected strongly connected: $\forall u,v,\exists P$ from $u$ to $v$ and vice versa  strongly connected component (SCC)   Semiconnected Digraph: $u\sim v$ or $v\sim u$  Toposort + edges $(v_i,v_{i+1})$ exsits    Isomorphism  isomorphic $G\cong H$: $\exists$ 1-1 $\phi:V(G)\rightarrow V(H)$ such that $uv\in E(G)\Rightarrow\phi(u)\phi(v)\in E(H)$  self-complementary: $G \cong \overline G$ isomorphism is an equivalence relation of the set of all graphs   automorphism: isomorphism from $G$ to $G$ $\text{Aut}(H)$: automorphism group of $G$ (under composition)  $u$ and $v$ are similar: they are in same orbit vertex-transitive: $G$ contains a single orbit   Frucht&amp;rsquo;s Theorem: For every finite group $A$, there exists a graph $G$ such that $\text{Aut}(G)$ is isomorphic to $A$ recognizable: a parameter of $G$ can be determined from $G-v,v\in V(G)$  $|V|$ $|E|$ for $|V|\geq3$ degree sequence for $|V|\geq 3$   reconstructible: $G$ can be uniquely determined (up to isomorphism) from subgraphs $G-v_i$  Reconstruction Conjecture: $G$ is reconstructible for $|V|\geq 3$    Trees  bridge $e$: $G$ is connected, $G-{e}$ is disconnected  bridge $\iff$ $!</description>
    </item>
    
    <item>
      <title>5-软件设计-OOAD</title>
      <link>https://zhengzangw.com/notes/software-enginerring/5-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1-ooad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/5-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1-ooad/</guid>
      <description>UML  UML 历史  UML 建立在当今国际上最有代表性的三种面向对象方法（Booch 方法，OMT 方法，OOSE 方法）的基础之上 UML 由 OMG 于 1997 年 11 月正式采纳为标准   UML 为人们提供了从不同的角度去观察和展示系统的各种特征的一种标准表达方式 UML 视角  使用实例：外部操作者 逻辑结构：从内部描述如何设计实现系统功能 构成 并发性 配置   UML 语义  元-元模型：元模型的基础体系结构，定义一种说明元模型的语言 元模型：元-元模型的一个实例，定义一种说明模型的语言 模型：元模型的一个实例，定义一种语言来描述信息领域 用户对象：模型的一个实例，定义一个特定的领域   UML 2.0 目标：服务于模型驱动软件开发  Superstructure：定义了用户级的构造块（constructs ），用于对系统的结构、行为进行详述（如，类图、顺序图等） Diagram Interchange：定义了针对 UML 的图交换标准，用于对模型以及模型图（包含图形的布局信息）进行交换 Infrastructure：定义了最基本的构造块，用于描述 UML 本身以及针对特定的域（如，实时领域）对 UML 进行定制 OCL：用于定义针对模型以及模型元素的约束信息   UML 工具  IBM Rational Rose Borland Together Eclipse: Papyrus, Topcased    功能  用例图  Use Case：用户与计算机之间为达到某个目的的一次典型交互作用 执行者 联系    结构   类图：描述了系统中的类及其相互之间的各种关系</description>
    </item>
    
    <item>
      <title>6. Differential Entropy</title>
      <link>https://zhengzangw.com/notes/information-theory/6-differential-entropy/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/information-theory/6-differential-entropy/</guid>
      <description>Entropy  (continuous) $X$ with cumulative distribution function $F(x)=Pr(X\leq x)$ support set of $X$: $f(x)&amp;gt;0$ differential entropy $h(x)$: $h(X)=-\int_Sf(x)\log f(x)dx$  $h(X+c) = h(X)$ $h(aX)=h(X)+\log|a|$ $h(AX)=h(X)+\log|\det A|$ $h(X)$ may be negative ($f(x)$ may $&amp;gt;1$)   uniform: $h(X)=\log a$ Gaussian: $h(X)=\frac{1}{2}\log 2\pi e\sigma^2$ $h(X)$: Infinite Information  does not serve as a measure of the average amount of information   $h(X_1,X_2,\cdots,X_n)=-\int f(x^n)\log f(x^n)dx^n$ $h(X|Y)=-\int f(x,y)\log f(x|y)dxdy)$ Relative Entropy: $D(f|g)=\int f\log\frac{f}{g}\geq 0$ mutual information: $I(X;Y)=\int f(x,y)\log\frac{f(x,y)}{f(x)f(y)}dxdy\geq 0$  Relation to discrete  $X^\Delta=x_i$ if $i\Delta\leq x&amp;lt;(i+1)\Delta$ $p_i=Pr(X^{Delta}=x_i)=f(x_i)\Delta$ $H(X^{\Delta})=-\sum\Delta f(x_i)\log f(x_i)-\log \Delta$ as $\Delta\rightarrow 0,H(X^\Delta)+\log \Delta\rightarrow h(f)=h(X)$  AEP  $-\frac{1}{n}\log f(X_1,X_2,\cdots,X_n)\rightarrow E(-\log f(X))=h(f)$ $A_\epsilon^{(n)}={(x_1,x_2,\cdots,x_n)\in S^n:|-\frac{1}{n}\log f(x_1,\cdots, x_n)-h(X)|\leq\epsilon}$ $\text{Vol}(A)=\int_Adx_1dx_2\cdots dx_n$ Properties  $Pr(A_\epsilon^{(n)})&amp;gt;1-\epsilon$ for $n$ sufficiently large $\text{Vol}(A_\epsilon^{(n)})\leq 2^{n(h(X)+\epsilon)}$ $\text{Vol}(A_\epsilon^{(n)})\geq (1-\epsilon)2^{n(h(X)-\epsilon)}$    Covariance Matrix  cov($X$, $Y$)=$E(X-EX)(Y-EY)=E(XY)-(EX)(EY)$ $\vec X$: $K_X=E(X-EX)(X-EX)^T=[\text{cov}(X_i;X_j)]$ correlation matrix: $\widetilde K_X=EXX^T=[EX_iX_j]$  symmetric and positive semidifinite   $K_X=\widetilde K_X-(EX)(EX^T)$ $Y=AX$  $K_Y=AK_XA^T$ $\widetilde K_Y=A\widetilde K_XA^T$    Multivariate Normal Distribution $f(x)=\frac{1}{(2\pi)^{\frac{n}{2}}}\exp(-\frac{1}{2}(x-\mu)^TK^{-1}(x-\mu))$</description>
    </item>
    
    <item>
      <title>Selected Awards</title>
      <link>https://zhengzangw.com/about/awards/</link>
      <pubDate>Mon, 07 Dec 2020 21:43:38 +0800</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/about/awards/</guid>
      <description> 2021, Outstanding Graduates of Nanjing University 2020, Outstanding Student of Nanjing University 2019, 2018 (2 times), National Elite Program First-Class Scholarship 2019, Zheng Gang Overseas Study Scholarship  </description>
    </item>
    
    <item>
      <title>方程求根</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/6-%E6%96%B9%E7%A8%8B%E6%B1%82%E6%A0%B9/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/6-%E6%96%B9%E7%A8%8B%E6%B1%82%E6%A0%B9/</guid>
      <description>方程求根  代数方程：$f(x)=\sum_{i=0}^n a_{n-i}x^{i}$  复数域中有 $n$ 个根   非线性方程  超越方程：必须明确定义域   搜索法求有根区间 二分法  收敛速度不快 可以确定初始区间    不动点迭代法  不动点迭代法：求 $f(x)=0$ 转换为求 $ x=\varphi(x)$ 的不动点  迭代法：$x_{k+1}=\varphi(x_k)$ 收敛：$\lim_{k\rightarrow\infty} x_k$ 存在 定理：$\varphi(x)\in C[a,b]$ 满足以下条件则在 $[a,b]$ 上存在唯一的不动点  $\forall x\in[a,b],a\leq \varphi(x)\leq b$ $\exists L\in (0,1),\forall x,y\in C[a,b],|\varphi(x)-\varphi(y)|\leq L|x-y|$ （或 $|\varphi&#39;(x)|\leq L&amp;lt;1$）   收敛充分条件：满足以上条件的函数，$\forall x_0\in[a,b]$，由 $x_{k+1}=\varphi(x_k)$ 得到的迭代序列 ${x_k}$ 收敛到不动点，且 $|x_k-x^*|\leq\frac{L^k}{1-L}|x_1-x_0|$ 迭代误差 $\epsilon_k=x_k-x^*$ $p$ 阶收敛：$\frac{\epsilon_{k+1}}{\epsilon_k^p}\rightarrow C\neq 0$   若 $x_{k+1}=\varphi(x_k),\varphi^{(p)}(x)$ 在 $x^$ 附件连续，且 $\varphi&#39;(x^)=\varphi&#39;&#39;(x^)=\cdots=\varphi^{(p-1)}(x^)=0,\varphi^{(p)}(x^)\neq 0$，则迭代过程在 $x^$ 附件 $p$ 阶收敛 局部收敛 全局收敛  牛顿法  基本思想：将非线性方程逐步线性化形成迭代公式 取 $x_0\approx x^*$，$f(x)$ 在 $x_0$ 处做一阶 Taylor 展开：$f(x)=f(x_0)+f&#39;(x_0)(x-x_0)+\frac{f&#39;&#39;(\xi)}{2}(x-x_0)^2$  $x^*\approx x_0-\frac{f(x_0)}{f&#39;(x_0)}$   牛顿法：$x_{k+1}=x_k-\frac{f(x_k)}{f&#39;(x_k)}$ 牛顿法收敛的充分条件：若 $f\in C^2[a,b]$  $f(a)f(b)&amp;lt;0$ $[a,b]$ 上 $f&#39;&#39;$ 不变号且 $f&#39;(x)\neq 0$ $\forall x_0\in[a,b],f(x_0)f&#39;&#39;(x_0)&amp;gt;0$   局部收敛性：$f\in C^2[a,b],x^$ 为 $f(x)$ 在 $[a,b]$ 上的根且 $f&#39;(x)\neq 0$，则存在 $x^$ 的邻域，使任意邻域上的初值产生的序列收敛到 $x^$，且 $\lim_{k\rightarrow\infty}\frac{x^-x_{k+1}}{(x^-x_k)^2}=-\frac{f&#39;&#39;(x^)}{2f&#39;(x^*)}$ 割线法：$x_{k+1}=x_k-\frac{f(x_k)(x_k-x_{k_1})}{f(x_k)-f(x_{k-1})}$ 下山法：若 $x_{k+1}$ 处的值不比原有的小，则在 $(x_k,x_{k+1})$ 间找一个更好的点使值变小：$\overline{x_{k+1}}=x_k-\lambda\frac{f(x_k)}{f&#39;(x_k)}$ 特殊情况  重根：线性收敛 $f&#39;(x^*)\neq 0$ 至少平方收敛    迭代过程加速方法  埃特金加速收敛方法（Aitken）：$x_{k+1}=x_k-\frac{(\tilde{x}{k+1}-x_k)^2}{\overline{x}{k+1}-2\tilde{x}_{k+1}+x_k}$  超线性收敛：$\lim_{k\rightarrow\infty}\frac{|e_{k+1}|}{|e_k|}=0$    </description>
    </item>
    
    <item>
      <title>运行时刻环境</title>
      <link>https://zhengzangw.com/notes/compiler/6-%E8%BF%90%E8%A1%8C%E6%97%B6%E5%88%BB%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/6-%E8%BF%90%E8%A1%8C%E6%97%B6%E5%88%BB%E7%8E%AF%E5%A2%83/</guid>
      <description>控制栈  实在参数 返回值 控制链 访问链 保存的机器状态 局部数据 临时变量  垃圾回收  基于引用计数的垃圾回收（存在循环垃圾） 基于跟踪的垃圾回收  标记-清扫式垃圾回收 标记并压缩垃圾回收 拷贝垃圾回收    </description>
    </item>
    
    <item>
      <title>6. Terminal</title>
      <link>https://zhengzangw.com/notes/command-line/6-terminal/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/6-terminal/</guid>
      <description>快捷键     功能     ctrl + a 移动到行首   ctrl + e 移动到行尾   ctrl + u 删除当前光标前面的文字   ctrl + l 清屏   ctrl + r 搜索历史记录   ctrl + z SIGSTOP 挂起   ctrl + c SIGINT   ctrl + s 阻止屏幕输出   ctrl + q 允许屏幕输出    Bang 命令 !! #上一条命令 ^foo^bar # 将上一条命令中 foo 替换为 bar ^foo # 将上一条命令中 foo 删除 !</description>
    </item>
    
    <item>
      <title>6-设计模式</title>
      <link>https://zhengzangw.com/notes/software-enginerring/6-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/6-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>设计模式简介  起源与建筑学：《A Pattern Language: Towns, Buildings, Construction》建筑的永恒之道，Christopher Alexander 模式：A Pattern Language: Towns, Buildings, Construction  Context：模式可适用的前提条件 Theme/Problem：在特定条件下要解决的目标问题 Solution：对目标问题求解过程中各种物理关系的记述   软件设计模式：《Design Patterns》Gang of Four 软件模式：软件开发的总体指导思路或参照样板  在软件生存期的每一个阶段都存在着一些被认同的模式 对软件开发这一特定“问题”的“解法”的某种统一表示 软件模式等于一定条件下的出现的问题以及解法 Pattern name, Problem, Solution, Consequences   大三律(Rule of Three)：只有经过三个以上不同类型（或不同领域）的系统的校验，一个解决方案才能从候选模式升格为模式 设计模式分类  目的  Creational: 创建对象 Structural: 处理类或对象的组合 Behavioral: 描述对类或对象怎样交互和怎样分配职责   范围  类模式：处理类和子类之间的关系，静态 对象模式：处理对象间的关系，动态      设计原则  开放封闭原则（Open Close Principle）：类、模块、函数等应该是可以拓展的，但是不可修改 里氏替换原则（Liskov Substitution Principle）：所有引用基类的地方必须能透明地使用其子类的对象。  如果对每一个类型为 T1 的对象 o1，都有类型为 T2 的对象 o2，使得以 T1 定义的所有程序 P 在所有的对象 o1 都代换成 o2 时，程序 P 的行为没有发生变化，那么类型 T2 是类型 T1 的子类型 类 B 继承类 A 时，除添加新的方法完成新增功能 P2 外，尽量不要重写父类 A 的方法，也尽量不要重载父类 A 的方法   依赖倒置原则（Dependence Inversion Principle）：高层模块不应该依赖于低层模块，两者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。 单一职责原则(Single Responsibility Principle)：就一个类而言， 应该仅有一个引起它变化的原因。  防止职责扩散   接口隔离原则（InterfaceSegregation Principles）：一个类对另一个类的依赖应该建立在最小的接口上。 迪米特原则（Law of Demeter）也称最少知识原则：一个软件实体应当尽可能少地与其他实体发生相互作用。  降低耦合，减少扇入扇出   合成复用原则  GoF 设计模式  单例（Singleton）模式：某个类只能生成一个实例，该类提供了一个全局访问点供外部获取该实例，其拓展是有限多例模式。 原型（Prototype）模式：将一个对象作为原型，通过对其进行复制而克隆出多个和原型类似的新实例。 工厂方法（Factory Method）模式：定义一个用于创建产品的接口，由子类决定生产什么产品。 抽象工厂（AbstractFactory）模式：提供一个创建产品族的接口，其每个子类可以生产一系列相关的产品。 建造者（Builder）模式：将一个复杂对象分解成多个相对简单的部分，然后根据不同需要分别创建它们，最后构建成该复杂对象。 代理（Proxy）模式：为某对象提供一种代理以控制对该对象的访问。即客户端通过代理间接地访问该对象，从而限制、增强或修改该对象的一些特性。 适配器（Adapter）模式：将一个类的接口转换成客户希望的另外一个接口，使得原本由于接口不兼容而不能一起工作的那些类能一起工作。 桥接（Bridge）模式：将抽象与实现分离，使它们可以独立变化。它是用组合关系代替继承关系来实现，从而降低了抽象和实现这两个可变维度的耦合度。 装饰（Decorator）模式：动态的给对象增加一些职责，即增加其额外的功能。 外观（Facade）模式：为多个复杂的子系统提供一个一致的接口，使这些子系统更加容易被访问。 享元（Flyweight）模式：运用共享技术来有效地支持大量细粒度对象的复用。 组合（Composite）模式：将对象组合成树状层次结构，使用户对单个对象和组合对象具有一致的访问性。 模板方法（TemplateMethod）模式：定义一个操作中的算法骨架，而将算法的一些步骤延迟到子类中，使得子类可以不改变该算法结构的情况下重定义该算法的某些特定步骤。 策略（Strategy）模式：定义了一系列算法，并将每个算法封装起来，使它们可以相互替换，且算法的改变不会影响使用算法的客户。 命令（Command）模式：将一个请求封装为一个对象，使发出请求的责任和执行请求的责任分割开。 职责链（Chain of Responsibility）模式：把请求从链中的一个对象传到下一个对象，直到请求被响应为止。通过这种方式去除对象之间的耦合。 状态（State）模式：允许一个对象在其内部状态发生改变时改变其行为能力。 观察者（Observer）模式：多个对象间存在一对多关系，当一个对象发生改变时，把这种改变通知给其他多个对象，从而影响其他对象的行为。 中介者（Mediator）模式：定义一个中介对象来简化原有对象之间的交互关系，降低系统中对象间的耦合度，使原有对象之间不必相互了解。 迭代器（Iterator）模式：提供一种方法来顺序访问聚合对象中的一系列数据，而不暴露聚合对象的内部表示。 访问者（Visitor）模式：在不改变集合元素的前提下，为一个集合中的每个元素提供多种访问方式，即每个元素有多个访问者对象访问。 备忘录（Memento）模式：在不破坏封装性的前提下，获取并保存一个对象的内部状态，以便以后恢复它。 解释器（Interpreter）模式：提供如何定义语言的文法，以及对语言句子的解释方法，即解释器。  </description>
    </item>
    
    <item>
      <title>6.曲线曲面理论基础</title>
      <link>https://zhengzangw.com/notes/computer-graphics/6-curve-and-surface/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-graphics/6-curve-and-surface/</guid>
      <description>曲面参数化  正常情况下参数域内的点与曲面上的点一一对应 曲面上任一点处总有一个 $u$ 向切矢 $p_u$，和一个 $v$ 向切矢 正则点：两切矢不平行的点 奇点  曲面上一一对应关系不成立的点 两切矢垂直的点 切矢为 0 向量的点   曲线曲面生成  数学函数：规则曲线曲面 树节点：自由曲线曲面   样条：柔软细长的弹性木条或金属条 样条曲线  数学：多段低次曲线段构成，连接处有连续一次和二次导数 计算机图形学：多项式曲线段连接，边界处满足特点连续条件   参数化样条曲线曲面：用参数表示的样条曲线曲面 $p()=\sum_{i=0}^na_i\phi_i()$  系数矢量：$a_i$ $p()$: 单/双参数的矢函数 $\phi_i()$: 单/双参数的基函数   基表示类型  规范基表示：曲线或曲面上的整体满足柯西条件：$\sum_{i=0}^n\phi_i=1$ 部分规范基表示：曲线或曲面上部分段满足：$\sum_{i=0}^{k&amp;lt;n}\phi_i=1$ 非规范基表示   几何不变性：在旋转和平移变换下不变  规范基和部分规范基表示具有几何不变性 非规范基不具有几何不变性   生成方法  插值：曲线通过每个控制点 逼近：不一定通过每个控制点 设计：已知点太少，增加一些点   凸包：包围一组控制点的凸多边形边界 控制多边形：连接有一定次序控制点的直线序列 参数连续性：公共部分匹配参数导数  零阶参数连续性 $C^0$：相连 一阶参数连续性 $C^1$：两段切向量变化率可能会不同（突变，设计应用） 二阶参数连续性 $C^2$：切线平滑变换（电影动画） 高阶参数连续性   几何连续性：两曲线段在相交处参数导数成比例  零阶几何连续性 $G^0$：相连 一阶几何连续性 $G^1$ 二阶几何连续性：曲率连续   函数曲线中参数连续性与几何连续性一致 参数曲线中，仅当曲线为正则是一致性成立 光顺性：过同一数据点且具有相同边界几何约束的两条平面插值曲线相对光顺的四项判据或准则  二阶几何连续 不存在奇点与多余的拐点 曲率变化较小 应变能较小    三次插值曲线曲面   三次插值样条性质</description>
    </item>
    
    <item>
      <title>6-场论</title>
      <link>https://zhengzangw.com/notes/calculus/section6/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/calculus/section6/</guid>
      <description> 场（向量场）：$\mathbf{X}:U\rightarrow\mathbb{R}^n$ 梯度场：$\Delta f=\text{grad} f=(\frac{\partial f}{\partial x},\frac{\partial f}{\partial y},\frac{\partial f}{\partial z})^T$  $0$ 阶微分形式的外微分   旋度场：$\text{curl} \mathbf{X} = \text{rot} \mathbf{X} = (\frac{\partial R}{\partial y}-\frac{\partial Q}{\partial z},\frac{\partial P}{\partial z}-\frac{\partial R}{\partial x},\frac{\partial Q}{\partial x}-\frac{\partial P}{\partial y})$  $1$ 阶微分形式的外微分   散度：$\text{div} \mathbf{X}=\frac{\partial P}{\partial x}+\frac{\partial Q}{\partial z}+\frac{\partial R}{\partial z}$  $2$ 阶微分形式的外微分   $\text{curl}({\nabla f})=0$ $\text{div}({\text{curl} \mathbf{X}})=0$  </description>
    </item>
    
    <item>
      <title>6. Existence by Counting</title>
      <link>https://zhengzangw.com/notes/combinatorics/6-existence-by-counting/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/6-existence-by-counting/</guid>
      <description>Existence by Counting  Shannon 1949: There is a boolean function $f:{0,1}^n\rightarrow{0,1}$ which cannot be computed by any circuit with $\frac{2^n}{3n}$ gates  $f$ computable by $t$ gates: $2^{2^n}$ circuits with $t$ gates: $&amp;lt;2^t(2n+t+1)^{2t}$    Double Counting  Handshaking Lemma: $\sum_{v\in V}d(v)=2|E|$ Sperner&amp;rsquo;s Lemma(1928): For any properly colored trangulation, there existst a cell receiving all three colors  trangulation: a decompostion of $abc$ to small triangles(cells) such that any two different cells are either disjoint or share and edge of vertex proper coloring: color with 3 color that  $a,b,c$ has different color The vertices in each of the three lines $ab,bc,ac$ receive two colors     Brouwer&amp;rsquo;s fixed point theorem (1911)  $\forall$ continous function $f:B\rightarrow B$ of an $n$-dimensional ball, $\exists$ a fixed point $x=f(x)$    Pigeonhole Principle  General Pigeonhole Principle: If a set consisting of more than $mn$ objects is partitioned into $n$ classes, then some class receives more than $n$ objects.</description>
    </item>
    
    <item>
      <title>Image Segmentation</title>
      <link>https://zhengzangw.com/notes/digital-image-process/5-segmentation/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/5-segmentation/</guid>
      <description>基础知识  $R$: 图像所占区域 图像分割：$R=\cup_{i=1}^n R_i$  $R_i$ 连通 $R_i\cap R_j=\emptyset$ $Q$: 用于划分区域的函数  $Q(R_i)=\text{T}$ $Q(R_i\cup R_j)=\text{F}$     分割依据  灰度的不连续性 灰度的相似性   边缘：连通的边缘像素的集合  边缘像素：灰度发生剧烈变化   线：特殊的边缘，两侧的灰度值都很大或小 点：长宽只有一个像素的线 孤立点检测  拉普拉斯算子 判断响应幅度是否大于阈值   线检测  拉普拉斯算子 双线效应 检测特定方向的线   边缘模型  台阶边缘 Step Edge：1个像素距离上发生灰度级理想过渡，理想边缘 斜坡边缘 Ramp Edge 屋顶边缘 Roof Edge: 穿过区域的线 存在噪声的边缘  视觉上噪声并不明显 噪声对导数影响很大 二阶导更敏感      边缘检测  基本边缘检测  梯度：最大变化率方向，边缘方向与梯度正交  大小：$M(x,y)=\sqrt{g_x^2+g_y^2}\approx|g_x|+|g_y|$ （边缘图） 方向：$\alpha(x,y)=\tan^{-1}(\frac{g_y}{g_x})$   梯度算子  罗伯特交叉梯度算子 Prewitt 算子 Sobel 算子     高级边缘检测  Marr-Hildreth 边缘检测器  $\nabla^2=\frac{\partial^2}{\partial x^2}+\frac{\partial^2}{\partial y^2}$ $G(x,y)=e^{-\frac{x^2+y^2}{2\sigma^2}}$ LoG(高斯的拉普拉斯)：$\nabla^2 G(x,y)=[\frac{x^2+y^2-2\sigma^2}{\sigma^4}]e^{-\frac{x^2+y^2}{2\sigma^2}}$ 零交叉：$x^2+y^2=2\sigma^2$ 生成不同尺寸的模板  对 $G(x,y)$ 进行采样，得到 $n\times n$ 的模板 与拉普拉斯模板卷积   算法  用 $n\times n$ 的高斯低通滤波器平滑图像 计算上图的拉普拉斯 寻找零交叉：检查某像素两个相对邻域像素的符号，符号相反且差异大于某阈值     Canny 边缘检测器  高斯函数平滑输入图像 计算图像梯度的大小与角度 非最大抑制：把梯度生成的粗边变细  四种边缘：水平，垂直，+45，-45 根据梯度方向确定边缘方向 $d_k$ 如果 $M(x,y)$ 的值比 $(x,y)$ 在 $d_k$ 方向任意邻居小则对其抑制   滞后阈值：减少伪边缘点  低阈值：$T_L,g_{\text{NL}}(x,y)=g(x,y)\geq T_H$ 高阈值：$T_H,g_{\text{NH}}(x,y)=g(x,y)\geq T_L$ 比值：2:1 或 3:1 $g_{\text{NL}}(x,y)=g_{\text{NL}}(x,y)-g_{\text{NH}}(x,y)$   连通性分析  遍历 $g_{\text{NH}}$ 中每一个点 $p$，保留 $g_{\text{NL}}$ 中和 $p$ 连通的点 去掉 $g_{\text{NL}}$ 剩余的点 合并 $g_{\text{NH}}$ 和 $g_{\text{NL}}$        边缘连接 将边缘像素组合成有意义的边缘或区域边界</description>
    </item>
    
    <item>
      <title>6-难问题求解</title>
      <link>https://zhengzangw.com/notes/problem-solving/6-hard-problems/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/6-hard-problems/</guid>
      <description>Definition Alphabet  $\Sigma$: alphabet  $\Sigma^*=\mathcal{P}(\Sigma)$ $\Sigma^+=\Sigma^*-{\lambda}$   $s\in\Sigma$: symbol  $s\in w$   $w\subseteq\Sigma, \omega\in\Sigma^*$: word over $\Sigma$  $w\in L$ $\lambda$: empty word $|w|$: length of word  $\Sigma^n={w\in\Sigma^*|\vert w\vert=n}$   #$_a(w)$: number of occurence of $a$ in $w$ $vw$: concatenation of $v$ and $w$  $w^{n+1}=ww^n,w^0=\lambda$   prefix, suffix, subword   $L\subseteq\Sigma^*$: language over $\Sigma$  $L^C =\Sigma^*-L$ $L_1L_2={uv\in(\Sigma_1\cup\Sigma_2)^*|u\in L_1,v\in L_2}$: concatenation   canonical ordering: let $s_1&amp;lt;&amp;hellip;&amp;lt;s_m$ be a linear ordering, $u&amp;lt;v$  if $\vert u\vert&amp;lt;\vert v\vert$ or $\vert u\vert=\vert v\vert,u=xs_iu&#39;,v=xs_jv&#39;,i&amp;lt;j$    Algorithmic Problems  polynomially related: codings $e_1\in L_1,e_2\in L_2,\exists f:L_1\rightarrow L_2,f(e_1)$ is polynomial decision Problem: $(L,U,\Sigma),L\subseteq U\subseteq \Sigma^*$  $A$ solves/decides $U$  $A(x)=1,x\in L$ $A(x)=0,x\in U-L$   $A$ accepts $U$: $A(x)=1,x\in L$  Halting Problem: Undecidable but acceptable     optimization Problem: $U=(\Sigma_I,\Sigma_O,L,L_I,M,cost,goal)$  briefly: $U=(L,$ constraints, costs, goal$)$ $\Sigma_I$: input alphabet $\Sigma_O$: output alphabet $L\subset\Sigma_I^*$: language of feasible Problem instances $L_I\subset L$: language of the actual Problem instance $M:L\rightarrow \mathcal{P}(\Sigma_O^*)$, $\mathcal{M}(x)$ is the set of feasible solutions for $x$ cost$:\mathcal{M}(x)\times L\rightarrow \mathbb{R}$ goal $\in{\min,\max}$ optimal solution $Opt_U(x)=cost(y,x)=goal_{x\in L_I}{cost(z,x)|z\in \mathcal{M}(x)}$ $Output_U(x)\subseteq \mathcal{M}(x)$: all optimal solutions for instance $x\in U$   Algorithm $A$ is consistent for $U$: $\forall x\in L_I,A(x)\in \mathcal{M}(x)$ Algorithm $B$ solves $U$  consistent $\forall x\in L_I,B(x)=Opt_U(x)$   $U_1$ is a subProblem of $U_2$ if $L_{I,1}\subseteq L_{I,2}$ (Others are same)  Turing Machine  Turing Machine: $M=(Q,\Sigma,\Gamma,\delta,q_0,q_{ac},q_{rej})$  $Q$: state set $\Sigma$: Input alphabet $\Gamma\subseteq\Sigma$: alphabet on tape $\delta:Q\times\Gamma\rightarrow Q\times\Gamma\times{L,R,-}$ $q_0\in Q$: initial satate   nondeterministic TM: $\delta:Q\times\Gamma\rightarrow \mathcal{P}(Q\times\Gamma\times{L,R})$ nondeterministic TM $M$ accept $L=L(M)$  $\forall x\in L,\exists$ computation of $M$ accepts $x$ $\forall y\not\in L$, all computations of $M$ rejects $y$   time complexity of nondeterministic TM $M$  $T_M(\omega)$: shortest accepting computation of $M$ on $\omega$ $T_M(n)=\max{T_M(x)|x\in L(M)\cap\Sigma^n}$   Church-Turing thesis: Problem $U$ can be solved by an algorithm iff $\exists$ Turing machine solving $U$ Theorem: for every increasing function $f:\mathbb{N}\rightarrow\mathbb{R}^+$  $\exists$ decision Problem such that every TM solving it has the time complexity in $\Omega(f(n))$ but $\exists$ TM solving it in $O(f(n)\log f(n))$   $L(M)$: language decided by $M$  Examples Decision  PRIM: test if a number is a prime EQ-POL: $p_1\equiv p_2$ in $\mathbb{Z}_p$ EQ-1BP: equivalence of one-time-only branching programs C-SAT: whether a formula with AND, NOT, OR gate is satisfiable SAT (kSAT): whether a CNF can be satisfied Clique: whether a graph contain $K_k$ VCP: whether graph contains a vertex cover of size $k$ HC: whether graph contains a Hamiltonian cycle SOL-IP: existence of a solution of linear integer programming  SOL-0/1-IP SOL-IP$_p$   PM: whether a bipartite graph has a perfect matching SUBSET-SUM: exists a subset $S&#39;\subseteq S$ sum up to $t$  Optimization  TSP: find a Hamiltonian cycle of the minial cost in a complete weighted graph  $\Delta$-TSP: metric traveling salespaerson Problem (satisfying triangle inequality) Euclidean TSP: geometrical, can be embedded in the two-dimensional Euclidean space   MSP: Makespan Scheduling Problem MIN-VCP: find minimum vertex cover  WEIGHT-VCP   SCP: Set Cover Problem MAX-CL: Maximum Clique Problem MAX/MIN-CUT KP: Knapsack Problem  SKP: Simple Knapsack Problem BIN-P: Bin-Packing Problem   MAX-SAT: maximize the number of stisfied clauses  MAX-kSAT MAX-EkSAT: exactly   LP: Linear Programming  IP: Integer Linear Programming 0/1-Linear Programming   MAX-LinModk: Maximum Linear Equation Problem Mod k  MAX-EmLinModk: k is prime, m is positive integer   MAX-CSP: $\max_{S,T}|E(S,T)|$  Complexity Theory  main objective of the complexity theory is:  find a formal specification of the class of practically solvable Problems to develop methodes enabling the classification of algorithmic Problemcs accoording to their membershiop in this class   uniform cost  all numbers bounded basic operation: $O(1)$   logarithmic cost  numbers $k$ takes $O(\lg k)$ bits addition, subtraction, assignment: $O(n)$ multiplication, division: $O(n\log n)$   pseudopolynomial time complexity:  $T(n)$ is polynomial in the numeric value of the input $T(n)$ is not polynomial in the number of bits required to repensent it of the input   bound  $T/S_A(x)$: time/space complexity on $x\in\Sigma_I$ $T/S_A(n)=\max{T/S_A(x)|x\in\Sigma_I^n}$: worst case analysis upper bound on the time complexity of $U$: $\exists A$ solving $U$ with $T_A(n)\in O(g(n))$ lower bound on the time complexity of $U$: $\forall B$ solving $U$ has $T_B(n)\in\Omega(f(n))$   There is a decision Problem such that $\forall A$ deciding $L$, $\exists B$ deciding $L$: $T_A(n)=\log_2T_B(n)$ optimal algorithm: $\text{Time}_C(n)\in O(g(n))$ and $\Omega(g(n))$ is a lower bound  Complexity Class  Complexity Zoo $\text{P}={L(M)|M$ is a TM, $\exists c&amp;gt;0,T_M(n)\in O(n^c)}$  tractable (solvable): $L\in P$, $L$ is accepted/decided by a polynomial-time algorithm intractable: $L\not\in P$   $\text{NP}={L(M)|M$ is a polynomial-time nondeterministic TM$}$  verifier for $L$: $A$ works on $\Sigma^\times{0,1}^$, $L=V(A)={\omega\in\Sigma^|\exists c\in{0,1}^,A$ accepts $(\omega,c)}$ $\text{NP}={V(A)|T_A(\omega,c)\in O(|\omega|^d)}$ closed under $\cap,\cup,\cdot,\star$   polynomial-time reduction (Karp, many-one) $L_1\leq_p L_2$: $\exists$ poly.</description>
    </item>
    
    <item>
      <title>6-事务处理</title>
      <link>https://zhengzangw.com/notes/database/6-%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/6-%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/</guid>
      <description>事务  事务：由某个用户执行的一个不能够被打断的对数据库的操作序列 影响因素  concurrency 并发控制 abort crash 故障恢复   事务的四个性质：ACID  Atomicity：要么全部发生，要么都不发生 Consistency：满足数据约束 Isolation：并发事务的可串行化 Durability：数据不丢失    事务控制   事务控制语句
  begin transaction
数据定义命令(DDL)：每条数据定义命令为一个单独的事务
自动提交方式(set autocommit on|off)：每条访问命令为单独的事务
数据操纵命令(DML)
  commit transaction
  rollback transaction
savepoint
    事务控制命令(DCL)
 set autocommit on|off set transaction readonly|readwrite set transaction isolation level readuncomitted|readcomitted|readrepeatable|serializable    并发错误
 更新丢失：对多个事务并发修改同一个数据对象的情况未加控制 脏读：一个事务读取到了另外一个事务没有提交的数据 不可重复读：在两次连续的读操作间插入了另一个事务的写操作 幻象读：在两次连续的查询操作间插入了另一个事务的插入操作       隔离级别 Dirty Read Non-repeatable Read Phantom Read     Read uncommited Possible Possible Possible   Read commited  Possible Possible   Repeatable read   Possible   Serializable       事务的语句组成  事务控制操纵  事务开始：START T0 提交事务：COMMIT T0 回退事务：ABORT T0   数据访问操纵  INPUT(A) OUTPUT(A) READ(A,t) WRITE(A,t)    并发控制 实现并发事务的可串行化调度</description>
    </item>
    
    <item>
      <title>Essemble Learning</title>
      <link>https://zhengzangw.com/notes/machine-learning/6-essemble/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/6-essemble/</guid>
      <description>集成学习  个体学习器  同质：基学习器，基学习算法 异质：组件学习器 准确性，多样性   学习器结合可能带来的好处  统计：学习任务假设空间大，多个假设在训练集上达到同等性能，使用单学习器可能因误选而导致泛化性能不佳 计算：降低陷入糟糕局部极小点的风险 表示：某些学习任务的真实假设可能不在当前算法所考虑的假设空间中，使用多学习器可能学得较好的近似    序列化方法  Boosting  Train a weak learner $h_t$ from distribution $D_t$ Evaluate the error $\epsilon_t$ of $h_t$ $D_{t+1}=\text{Adjust_Distribution}(D_t,\epsilon_t)$    AdaBoost  加性模型(additive model): $H(x)=\sum_{t=1}^T\alpha_th_t(x)$ exponential loss funciton: $l_{exp}(H|D)=E_{x\sim D}(e^{-f(x)H(x)})$  指数损失函数最小化，分类错误率也将最小化（与 0/1 损失函数一致）   分类器权重更新公式: $\alpha_t=\frac{1}{2}\ln\frac{1-\epsilon_t}{\epsilon_t}$ 调整样本分布: $D_{t+1}(x)=\frac{D_t(x)e^{-\alpha_tf(x)h_t(x)}}{Z_t}$  并行化方法 Bagging  采样 $T$ 次，训练 $T$ 个学习器，分类简单投票，回归简单平均 out-of-bag estimate: $H^{oob}(x)$ 为未使用 $x$ 训练的基学习器在 $x$ 上的预测  $H^{oob}(x)=\arg_{y\in Y}\max\sum_{t=1}^T[h_t(x)=y][x\not\in D_t]$ $\epsilon^{oob}=\frac{1}{|D|}\sum_{(x,y)\in D}[H^{oob}(x)\not=y]$    随机森林  Bagging + 在随机选择的 $k$ 个属性中选择最优属性  推荐值 $k=\log_2d$    结合策略 平均法  简单平均法: $H(x)=\frac{1}{T}\sum_{i=1}^Th_i(x)$ 加权平均法: $H(x)=\frac{1}{T}\sum_{i=1}^Tw_ih_i(x)$  投票法  绝对多数投票法  可能拒绝预测   相对多数投票法 加权投票法 $h(x)$ 输出不同  hard voting: 类标记投票 soft voting: 类概率投票 基学习器类型不同，其概率值不能直接进行比较    学习法  Stacking  初级学习器（个体学习器） 次级学习器（元学习器）   BMA(贝叶斯模型平均)  多样性 误差-分歧分解  $E=\overline{E}-\overline{A}$  $h_i$ 的分歧：$A(h_i|x)=(h_i(x)-H(x))^2$ 集成的分歧：$\overline{A}(h|x)=\sum_{i=1}^T\omega_iA(h_i|x))$ $E(h_i|x)=(f(x)-h_i(x))^2$ $\overline{E}(h|x)=\sum_{i=1}^T\omega_iE(h_i|x)$    多样性度量  预测结果列联表(contingency table), $m=a+b+c+d$      $h_i=+1$ $h_i=-1$     $h_j=+1$ a c   $h_j=-1$ b d       指标      不合度量(disagreement measure) $\text{dis}_{ij}=\frac{b+c}{m}$   相关系数 $\rho_{ij}=\frac{ad-bc}{\sqrt{(a+b)(a+c)(c+d)(b+d)}}$   $Q$-statistic $Q_{ij}=\frac{ad-bc}{ad+bc}$   $\kappa$-statistic $\kappa=\frac{p_1-p_2}{1-p_2}$   $\kappa$ 图 $\kappa$-平均误差图     取得一致的概率：$p_1=\frac{a+d}{m}$ 偶然取得一致的概率：$p_2=\frac{(a+b)(a+c)+(c+d)(b+d)}{m^2}$  多样性增强  数据样本扰动  Bootstrap 对不稳定基学习器（决策树，神经网络）有效   输入属性扰动  random subspace 算法   输出表示扰动  Flipping Output Output Smearing ECOC   算法参数扰动  负相关法 不同增强机制同时使用    </description>
    </item>
    
    <item>
      <title>6-数理统计基础</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/6-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/6-%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1%E5%9F%BA%E7%A1%80/</guid>
      <description>推断统计与描述统计
 总体：研究对象全体  个体：总体中每个成员   样本，抽样，样本容量，样本值 简单随机样本：代表性，独立性 统计量：$T(x_1,x_2,\cdots,x_n)$  样本均值：$\overline X=\frac{1}{n}\sum_{i=1}^n X_i$ 样本方差：$S^2=\frac{1}{n-1}\sum_{i=1}^n(X_i-\overline X)^2$  样本标准差   样本二阶中心矩：$S^{*2}=\frac{1}{n}\sum_{i=1}^n(X_i-\overline X^2)$ 样本$k$阶原点矩：$A_k=\frac{1}{n}\sum_{i=1}^kX_i^k$ 样本$k$阶中心矩：$B_k=\frac{1}{n}\sum_{i=1}^n(X_i-\overline X)^k$ 协方差：$S_{XY}=\frac{1}{n-1}\sum_{i=1}^n(x_i-\overline{x})(y_i-\overline{y})$ 协方差矩阵：$\Sigma(i,j)=S_{i,j}$  $X$ 标准化后，协方差矩阵 $\Sigma=XX^T$   样本相关系数：$\frac{S_{XY}}{S^_XS^_Y}$   大样本理论：$\frac{\sum_{i=1}^nX_i-n\mu}{\sqrt{n}\sigma}\rightarrow N(0,1)$, 则 $X_i\sim N(\mu,\frac{\sigma^2}{n})$ 正态总体  $\chi^2$ 分布：$X_i\sim N(0,1)$ 独立同分布，则 $\chi^2_n=\sum_{i=1}^nX_i^2\sim\chi^2(n)$, $p(x)=\frac{1}{2^{\frac{n}{2}}\Gamma(\frac{n}{2})}e^{-\frac{x}{2}x^{\frac{n}{2}-1}},x&amp;gt;0$  $\chi_1^2\sim\chi^2(n_1),\chi_2^2\sim\chi^2_2,\chi_1^2+\chi_2^2\sim\chi^2(n_1+n_2)$ Cochran 分解定理：$X_i\sim N(0,1)$ 独立同分布，$\sum_{i=1}^kQ_i=\sum_{i=1}^nX_i^2$,$Q_i$ 为秩为 $n_i$ 的$X_1,X_2,\cdots,X_n$ 的非负二次型，则 $Q_i(i=1,2,\cdots,k)$ 相互独立且分别服从于自由度为 $n_i$ 的$\chi^2$ 分布的充要条件为 $\sum_{i=1}^k=n$   t 分布：$X\sim N(0,1),Y\sim\chi^2(n)$, $X$ 与 $Y$ 独立，则$T=\frac{X}{\sqrt\frac{Y}{n}}\sim t(n)$, $p(x)=\frac{\Gamma(\frac{n+1}{2})}{\sqrt{n\pi}\Gamma(\frac{n}{2})}(1+=\frac{x^2}{n})^{-\frac{n+1}{2}}$ F 分布：$U\sim\chi^2(n_1),V\sim\chi^2(n_2)$, $U$ 与 $V$ 独立，则 $F=\frac{U/n_1}{V/n_2}\sim F(n_1,n_2)$, $p(x)=\frac{\Gamma((n_1+n_2)/2)}{\Gamma(n_1/2)\Gamma(n_2/2)}(\frac{n_1}{n_2})^\frac{n_1}{2}x^{\frac{n_1}{2}-1}(1+\frac{n_1}{n_2}x)^{-\frac{n_1+n_2}{2}}$  $F\sim F(n_1,n_2),\frac{1}{F}\sim F(n_2,n_1)$ $T\sim t(n),T^2\sim F(1,n)$   上 $\alpha$ 分位点 $\gamma_\alpha$: $P(X&amp;gt;\lambda_\alpha)=\alpha$  $u_{1-\alpha}=-u_\alpha$ $t_{1-\alpha}(n) = -t_\alpha(n)$ $F_{1-\alpha}(n_1,n_2)=\frac{1}{F_\alpha(n_2,n_1)}$         $N(0,1)$ $\chi^2(n)$ $t(n)$ $F(n_1,n_2)$     $u_\alpha$ $\chi^2_\alpha(n)$ $t_\alpha(n)$ $F_\alpha(n_1,n_2)$     样本 $X_i\sim N(\mu,\sigma)$  $\overline{X}\sim N(\mu,\frac{\sigma^2}{n})$ $\frac{(n-1)S^2}{\sigma^2}\sim\chi^2(n-1)$  $\overline{X}$ 与 $S^2$ 独立   $T=\frac{\overline{X}-\mu}{S/\sqrt{n}}\sim t(n-1)$ $F=\frac{S_1^2\sigma_2^2}{S_2^2\sigma_1^2}\sim F(n_1-1,n_2-1)$ $U=\frac{(\overline{X}-\overline{Y})-(\mu_1-\mu_2)}{\sqrt{\frac{\sigma_1^2}{n_1}+\frac{\sigma_2^2}{n_2}}}\sim N(0,1)$ $T=\sqrt{\frac{n_1n_2(n_1+n_2-2)}{n_1+n_2}}\frac{(\overline{X}-\overline{Y})-(\mu_1-\mu_2)}{(n_1-1)S_1^2+(n_2-1)S_2^2}\sim t(n_1+n_2-2)$    </description>
    </item>
    
    <item>
      <title>数据链路层</title>
      <link>https://zhengzangw.com/notes/data-communication/5-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/5-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</guid>
      <description>基本概念  $d$: 链路长度 $v$: 传播速度 $L$: 帧长度（比特） $B=RD$: 链路比特长度 $B&#39;$: 链路帧长度     性能指标      传输时间(transmission time) 与帧长度有关, $T=\frac{L}{R}$   传播时间(propagation time) 与链路有关，$D=\frac{d}{v}$   处理时延    排队时延 等待被传输的时间    流量控制  确保发送的数据不会超出接收实体接收数据能力的技术 Fragmentation：把大块的数据切分成小数据块传输  接收方缓存有限 重传大小小 避免一个站点长时间占用媒体传输    停止等待流量控制 Stop and Wait  (S)Send Data $\rightarrow$ (R)Receive Data &amp;amp; Send ACK $\rightarrow$ (S)Receive ACK &amp;amp; Send Data&#39; $T_F=D+T+D+t_{ack}+t_{proc}=2D+T$ $a=\frac{D}{T}=\frac{B}{L}$ $U=\frac{T}{T_F}=\frac{1}{1+2a}$  滑动窗口流量控制    参数      滑窗字段大小 $k$   帧编号 $0\sim2^{k}-1$   窗口大小 $W\leq 2^{k}-1$       帧类型      F$_n$ 数据帧，当窗口用完后停止发送   RR$_n$ 已接受到$n-1$的帧，准备接受$n$(双方更新窗口)   RNR$_n$ 已接受到$n-1$的帧，停止接受   捎带 双工时 F$_n$捎带确认信息    $$ U=\begin{cases} \frac{W}{2B&#39;+1} &amp;amp; W&amp;lt;2B&#39;+1\newline 1 &amp;amp; W\geq2B&#39;+1 \end{cases} $$</description>
    </item>
    
    <item>
      <title>实时多媒体通信</title>
      <link>https://zhengzangw.com/notes/multimedia/6-realtime/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/multimedia/6-realtime/</guid>
      <description>实时通信  IM (instant messaging) DAB（Digital Audio Broadcasting）：数字信号广播 卫星电视  数字电视  数字电视  NTSC DVD: 720x480 HDTV 720p: 1280x720 HDTV 1080p: 1920x1080 Digital Cinema - 2K: 2048x1080 Digital Cinema - 4K: 4096x2160 Super Hi-Vision: 7690x4320   数字电视标准  DVB 欧洲 ATSC 美国 ISDB 日 DTMB 中：清华 DMB-T 与上交 ADTB-T 融合   移动电视  基于地面广播：DVB-H, T-DMB 基于卫星广播：S-DMB, SDMB 基于移动网络：3GPP MBMS 中国标准：CMMB, STiMi   IPTV 交互电视  政策：网上传播视听节目许可证（共7家）   OTT TV(Over The Top)  181号文件   机顶盒  IPTV机顶盒 数字机顶盒（广电, DVB） OTT 电视盒   三网融合：通讯网、互联网、广电网  实时通信协议  QoS VoIP  PSTN H.</description>
    </item>
    
    <item>
      <title>Exception</title>
      <link>https://zhengzangw.com/notes/advanced-programming/6-exception/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/6-exception/</guid>
      <description>异常概述  语法错误：程序书写不符合语法规则，编译程序发现 逻辑错误：程序设计不当造成程序没有完成预期的功能，静态分析和同态测试发现 运行异常：程序设计对程序运行环境考虑不周而造成的程序运行错误 异常处理  就地处理  abort: 立即终止程序的执行，不作任何的善后处理工作 exit: 关闭被程序打开的文件、调用全局对象和 static 存储类的局部对象的析构函数（不要在这些对象类的析构函数中调用 exit）   异地处理  通过函数的返回值，或指针/引用类型的参数，或全局变量把异常情况通知函数的调用者，由调用者处理 通过语言提供的结构化异常处理机制进行处理      C++ 异常处理机制 try { &amp;lt;语句序列&amp;gt;; throw &amp;lt;表达式&amp;gt;; } catch (&amp;lt;类型&amp;gt; [&amp;lt;变量&amp;gt;]){ &amp;lt;语句序列&amp;gt; }  一个 try 语句块的后面可以跟多个 catch 语句块，用于捕获不同类型的异常对象并进行处理 try 语句块 throw 了异常对象，如果该 try 语句块之后  有能够捕获该异常对象的 catch 语句，则执行这个 catch 语句中的&amp;lt;语句序列&amp;gt;，然后继续执行这个 catch 语句之后的非 catch 语句 没有能够捕获该异常对象的 catch 语句，则由函数调用链上的上一层函数中的 try 语句的相应 catch 来捕获   try 语句嵌套  当在内层的 try 语句的执行中产生了异常，则首先在内层 try 语句块之后的 catch 语句序列中查找与之匹配的处理，如果内层不存在能捕获相应异常的 catch，则逐步向外层进行查找 如果抛掷的异常对象在程序的调用链上没有给出捕获，则调用系统的 terminate 函数进行标准的异常处理。默认情况下，terminate 函数将会去调用 abort 函数   异常处理实现机制  每个函数拥有一个 catch 表 每进入一个 try，都会把其后的所有 catch 入口地址记录在相应函数的 catch 表中 执行 throw 时，顺着调用链去搜索 catch 入口，并进行栈的处理 系统的异常处理为 terminate    程序调试  assertion 宏 assert: 在宏名 NDEBUG 没有定义时才有效  assert.</description>
    </item>
    
    <item>
      <title>6. Data Link Layer: Wireless</title>
      <link>https://zhengzangw.com/notes/conputer-network/6-data-link-layer-wireless/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/6-data-link-layer-wireless/</guid>
      <description>无线网络分类  单跳有基础设施  802.11 4G   单跳无基础设施  蓝牙 自组织模式 802.11   多跳有基础设施  无线网状网络   多跳无基础设施  移动自组织网络(MANET)    IEEE 802.11 无线局域网,WiFi
   术语      控制模块(CM) 含有网桥/路由器功能，无线局域网接口   用户模块(UM)    接入点(AP) 任何具有站点功能并能向建立连接的站点提供经过无线媒体及接入分发系统的实体   基本服务集(BSS) 单个协调功能所控制的站点集合   协调功能(coordination function) 判断在BSS内运行的节点何时允许传输，何时能够接收 PDU 的逻辑功能   分发系统(DS) 连接多个BSS以及综合局域网，形成ESS   扩展服务集(ESS)    MPDU MAC协议数据单元   MSDU MAC服务数据单元   站点(STA) 任何包含了 IEEE 802.</description>
    </item>
    
    <item>
      <title>Chapter 6</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/chapter6/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/chapter6/</guid>
      <description>储存器分类  储存元件  半导体储存器 磁表面储存器 光盘储存器（光介质）  基板，记录层，反射层，保护层，印刷层 CD(Compact disc) 1.2mm 700MB DVD(digital versatile disc) 0.6mm+0.6mm 4.7GB Blue-ray Disc     存取方式  RAM (Random Access Memory) SAM (Sequential Access Memory) DAM (Direct Access Memory) CAM (Content Addressed Memory) or AM (Associative Memory) : TLB   可更改性  ROM (Readly Only Memory)  Flash ROM 闪存 U盘，BIOS   RWM  SRAM: Static RAM 6个晶体管一个二进制位，cache DRAM: Dynamic RAM 一个晶体管一个二进制位，主存     断电后可保存性  Nonvolatile Memory Volatile Memory   功能  寄存器(1ns, &amp;lt;1KB) &amp;lt;- cache(2ns, 4MB) &amp;lt;- 主存储器(10ns, 500MB-4GB) &amp;lt;- 辅助存储器(辅存)(10ms, 40GB-500GB) &amp;lt;- 海量后备储存器 (10s, 10TB-100TB)(与辅存合称外部存储器)   储存器指标  访问时间：  读出时间：从存储器接到读命令开始至信息被送到数据线上所需的世界 读入时间：从存储器接到写命令开始至信息被写入存储器的时间   存储周期：存储器进行一次读写操作所需全部时间 带宽B：存储器被连续访问时可以提供的数据传送速率，位每秒    主存   SDRAM: Synchronous DRAM</description>
    </item>
    
    <item>
      <title>7. Gaussian Channel</title>
      <link>https://zhengzangw.com/notes/information-theory/7-gaussian-channel/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/information-theory/7-gaussian-channel/</guid>
      <description>Gaussian Channel  continuous alphet channel: input $X_i$, noise $Z_i$, output $Y_i$ Gaussian channel: $Y_i=X_i+Z_i,Z_i\sim\mathcal{N}(0,N)$ Energy Constraint: $\frac{1}{n}\sum_{i=1}^n x_i^2\leq P$ $C=\max_{f(x):EX^2\leq P}I(X;Y)$ Gaussian channel $C=\frac{1}{2}\log (1+\frac{P}{N})$, maximum attained when $X\sim\mathcal{N}(0,P)$  $N=EZ^2$ 信噪比：$\frac{P}{N}$   Guassian Noise is worest noise  </description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://zhengzangw.com/about/projects/</link>
      <pubDate>Mon, 07 Dec 2020 21:40:24 +0800</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/about/projects/</guid>
      <description> awesome-huge-models: Collection of huge AI models. hugo-theme-phd: Hugo theme for this page.  </description>
    </item>
    
    <item>
      <title>Monte Carlo Integration</title>
      <link>https://zhengzangw.com/notes/rendering/7-monte-carlo-integration/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/rendering/7-monte-carlo-integration/</guid>
      <description>数值积分  Limitation  对于 $d$ 维函数 $f$，一维情况下 $O(n^{-r})$ 收敛，则高维仅 $O(n^{-\frac{r}{s}})$ 收敛 不连续：$O(n^{-\frac{r}{s}})$   Monte Carlo Method: $\int_0^1f(x)dx =\frac{1}{N}\sum_{i=1}^Nf(x_i)$  Adavantage  Easy to implement Robust efficient for high dimensional integrals   Disadvantages  noisy: 按概率采样 slow     Monte Carlo estimator: $F_N=\frac{b-a}{N}\sum_{i=1}^Nf(X_i)$  $E[F_N]=\int_a^bf(x)dx$   sample  $F_N=\frac{1}{N}\sum_{i=1}^N\frac{f(X_i)}{p(X_i)}$ 最理想：$p(x)=\frac{f(x)}{\int f(x)dx}$   采样  inversion  求 CDF 逆函数 CDF$^{-1}$ 均匀采样   rejection  accept $U_1$ if $U_2&amp;lt;f(U_1)$ 一般方法  find $q(x)$, $p(x)&amp;lt;Mq(x)$ Dart throwing $\xi &amp;lt; p(X)/Mq(X)$   efficiency = area / area of rectangle   transform  $Y=y(X)$ $P_y(y(x))=P_x(x)$ $p_y(y)=(\frac{dy}{dx})^{-1}p_x(x)$ $p_y(T(x))=|J_T(x)|^{-1}p_x(x)$     Multidimensional sampling: sample with $p(x)$ and $p(y|x)$  </description>
    </item>
    
    <item>
      <title>代码生成</title>
      <link>https://zhengzangw.com/notes/compiler/7-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/7-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</guid>
      <description>目标语言   代码生成器的任务
 指令选择 寄存器分配和指派 指令排序    地址
  静态分配
  call callee
ST callee.staticArea, #here + 20 BR callee.codeArea   return
BR *callee.staticArea   name
LD 112, #0 LD 12(SP), #0     栈式分配
  call callee
ADD SP, SP, #caller.recordSize ST 0(SP), #here + 16 BR callee.codeArea   return
BR *0(SP) SUB SP, SP, #caller.recordSize       基本块与流图  确定 leader  第一个三地址指令 任一个跳转指令 任一个跳转目标指令   活跃性  开始时非临时变量活跃 反向扫描 i: x = y + z  x: 不活跃（之前的值不使用），无后续使用 y,z: 活跃，指明下一次使用设置为语句 i     循环定义  存在唯一入口结点，前驱在循环之外，到达其余结点路径必然经过该结点    DAG  DAG 图构造  为基本块中每个出现的变量建立结点 x = y op z：建立指令结点 N，标号 op，令 x 和 N 关联 x = y：假设 y 关联 N，则 x 关联 N   消除死代码：在 DAG 图上消除没有附加活跃变量的根节点 数组引用  x=a[i] 对应于 =[] 的结点 a[j]=y 对应于 []= 的结点   指针赋值、过程调用：无法消除死码 重组基本块：如果两个指令间互相影响，则其顺序不该改变  代码生成器  尽可能把值保留在寄存器中 寄存器描述符：寄存器存放了哪些变量 地址描述符：各个变量的当前值存放在哪些位置 getReg(I): 根据寄存器描述符合地址描述符等数据流信息，为指令 I 选择最佳的寄存器 减少 LD/ST 指令  寄存器分配  v 的地址描述符可以在别的地方找到 v 就是计算结果变量 v 在之后不会被使用 生成保存指令 ST v, R 并修改地址描述符  优化  窥孔优化:使用滑动窗口检查目标指令  冗余指令消除 控制流优化 代数化简/强度消减 机器特有指令使用   全局寄存器分配 树重写实现指令选择  重写规则：replacement &amp;lt;- template { action }    gcc 优化</description>
    </item>
    
    <item>
      <title>7. 线性方程组解法</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/7-%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E7%9A%84%E8%A7%A3%E6%B3%95/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/7-%E7%BA%BF%E6%80%A7%E6%96%B9%E7%A8%8B%E7%BB%84%E7%9A%84%E8%A7%A3%E6%B3%95/</guid>
      <description>求解线性方程组 $$Ax=b,A\in R^{n\times n},b\in R^n$$
假设 $A$ 非奇异，则方程有唯一解
直接解法：不考虑舍入误差的情况下，在预定的运算次数内求得精确解。如 Gauss 消去法
迭代解法：基于一定的递推格式，产生逼近精确解的近似序列。收敛性
向量范数  向量范数  正定性：$|x|\geq 1$ 齐次性：$|\lambda x|=|\lambda||x|$ 三角不等式：$|x+y|\leq|x|+|y|$   常用向量范数  $|x|2=(\sum{i=1}^n|x_i|^2)^{\frac{1}{2}}$ $|x|1=\sum{i=1}^n|x_i|$ $|x|\infty=\max{1\leq i\leq n}|x_i|$ $|x|p=(\sum{i=1}^n|x_i|^p)^{\frac{1}{p}}$ 对称正定矩阵 $A$, $|x|_A=\sqrt{(Ax,x)}=\sqrt{(x^TAx)}$   范数等价：任意两个范数，存在 $C_1,C_2$，$C_1|x|_B\leq |x|_A\leq C_2|x|_B$，则 $|x|_B$ 域 $|x|_A$ 等价 定理：$R^n$ 上一切范数等价 定理：向量序列 ${x^k}$ 收敛于 $x^$ $\iff$ $\lim_{k\rightarrow\infty}|x^k-x^|=0$  矩阵范数  矩阵范数  非负性 齐次性 三角不等式 相容性：$|AB|\leq|A||B|$   常用范数  矩阵算子范数：$|\cdot|$ 为向量范数，$|A|=\sum_{x\in R^n,x\neq 0}\frac{|Ax|}{|x|}=\max_{x\in R^n,|x|=1}|Ax|$ 列范数：$|A|1=\max{1\leq j\leq n}\sum_{i=1}^n|a_{ij}|$ 行范数：$|A|{\infty}\max{1\leq i\leq n}\sum_{j=1}^n|a_{ij}|$ $|A|2=\sqrt{\lambda{\max(A^TA)}}=\sqrt{\rho(A^TA)}$，最大特征值 Frobenius 范数：$|A|F=\sqrt{\sum{i=1}^n\sum_{j=1}^n|a_{ij}|^2}$   定理：任意算子范数范数等价 谱半径：$\rho(A)=\max{|\lambda_1|,\cdots,|\lambda_n|}$ 定理：任意算子范数，$\rho(A)\leq|A|$ 定理：若 $A$ 对称，则 $|A|_2=\rho(A)$ 定理：算子范数，$|A|&amp;lt;1$，则 $I+A$ 非奇异且$|(I+A)^{-1}|&amp;lt;\frac{1}{1-|A|}$  扰动分析  方程右端扰动影响：$\frac{|\delta x|}{|x|}\leq \text{cond}(A)\frac{|\delta b|}{|b|}$ $a_{ij}$ 扰动影响：$\frac{|\delta x|}{|x+\delta x|}\leq \text{cond}(A)\frac{|\delta A|}{|A|}$ 条件数：$\text{cond}(A)=|A||A^{-1}|$  $\text{cond}(A){\infty}=|A|{\infty}|A^{-1}|_{\infty}$ $\text{cond}(A)_2=|A|_2|A^{-1}|_2$ $A$ 对称，$\text{cond}(A)_2=\frac{\max|\lambda|}{\min|\lambda|}$   病态：$\text{cond}(A)&amp;raquo;1$ 良态：$\text{cond}(A)$ 较小  直接解法 高斯消元法  记 $A^{(1)}=A=(a_{ij}^{(1)})_{n\times n},b^{(1)}=b=(b_1^{(1)},\cdots,b_n^{(1)})^T$ 消元：将 $A$ 化为上三角矩阵  Step 1: $a_{11}^{(1)}\neq 0,m_{i1}=\frac{a_{i1}^{(1)}}{a_{11}^{(1)}},i=2,\cdots,n$, 将增广矩阵第 $i$ 行减去 $m_{i1}\times$ 第一行 Step k: $m_{ik}=\frac{a_{ik}^{(k)}}{a_{kk}^{(k)}},i=k+1,\cdots,n$ 共进行 $n-1$ 步   回代：逆次序逐一求出三角方程组的解  $x_i=\frac{b_i^{i}-\sum_{j=i+1}a_{ij}^{(i)}x_j}{a_{ii}^{(i)}}$   若 $A$ 的所有顺序主子式均不为 $0$，则高斯消元无需换行即可进行  高斯主元素消元法  当 $|a_{kk}^{(k)}|=0$ 或出现很小的数时，算法不稳定 每次选一列中最大的元素为主元素 消元过程  选主元：$|a_{i_kk}^{(k)}|=\max_{k\leq i\leq n}|a_{ik}^{(k)}$ 若为零则 $|A|=0$ 若 $i_k\neq k$，交换 $i$ 与 $k$ 消元    三角分解法  $A=LU$ (高斯消元为因式分解)  $m_{ij}=\frac{a_{ij}}{a_{jj}}$ $L_k$: 单位阵的第 $k$ 列 $1$ 下方元素分别为 $-m_{k+1,k},\cdots,-m_{n,k}$ $L_k^{-1}$: 下方元素变为 $m_{k+1,k},\cdots,m_{n,k}$ $L=\prod_{i=1}^{n-1}L_i^{-1}$   $A$ 的顺序主子式均不为 $0$ 则 $A$ 的 $LU$ 分解唯一（$L$ 为单位下三角阵） $AX=LUX=b\Rightarrow UX=Y,LY=b$  $y_i=b_i-\sum_{j=1}^{i-1}l_{ij}y_j,n=1,\cdots,n$ $x_i=(y_i-\sum_{j=i+1}^nu_{ij}x_j)/u_{ii},i=n,n-1,\cdots,1$   Doolittle 分解：单位下三角  $A=LU$ $u_{ri}=a_{ri}-\sum_{k=1}^{r-1}l_{rk}u_{ki},i=r,r+1,\cdots,n$ $l_{ir}=(a_{ir}-\sum_{k=1}^{r-1}l_{ik}u_{kr})/u_{rr},i=r,r+1,\cdots,n$   Crout 分解：单位上三角  $A=\widetilde L\widetilde U$   LDU 分解 Cholesky 分解：$A\in\mathbb{R}^{n\times n}$ 为对称正定矩阵，存在非奇异下三角矩阵 $L$ 使得 $A=LL^T$。当 $L$ 的主对角元为正时，分解存在且唯一  $A=L_1DL_1^T=(L_1D^{\frac{1}{2}})(L_1D^{\frac{1}{2}})^T=LL^T$ $l_{ij}=(a_{ij}-\sum_{k=1}^{j-1}l_{ik}l_{jk})/l_{jj},i\geq j$    追赶法解三对角方程组  对角占优条件  $|b_1|&amp;gt;|c_1|&amp;gt;0$ $|b_i|\geq |a_i|+|c_i|$ $|b_n|&amp;gt;|a_n|&amp;gt;0$   严格占优条件：$|b_i|&amp;gt;|a_i|+|c_i|$ 满足（严格）对角占优条件的三对角矩阵 $A$ 可以分解为 $A=LU$，$L$ 主对角线上 $\alpha_i$，主对角线下方一条 $\gamma_i$，单位上三角矩阵 $U$ 主对角线上方一条 $\beta_i$  $\alpha_i=b_i-a_i\beta_{i-1}, \alpha_1=b_1$ $\beta_i=\frac{c_i}{\alpha_i}$ $\gamma_i=a_i$   追赶法求解 $Ax=f$  计算 $\beta$ （追）解 $Ly=f$：$y_i=\frac{f_i-\alpha_iy_{i-1}}{b_i-a_i\beta_{i-1}},i=2,3,\cdots,n$ （赶）解 $Ux=y$：$x_i=y_i-\beta_ix_{i+1},i=n-1,n-2,\cdots,2,1$   算法稳定 时间复杂度 $O(6n)$ 应用：  计算 $|A|$ 计算 $A^{-1}$    迭代解法  针对大型稀疏矩阵 迭代格式 $x=Bx+f$  Jacobi 迭代  从第 $k$ 个方程中解出 $x_k$ 构造迭代格式 $A=D-L-U$，严格上/下三角矩阵 $L,U$ 迭代格式：$x=D^{-1}(L+U)x+D^{-1}b$  Gauss-Seidel 迭代  计算第 $i$ 个分量时，带入第 $i-1$ 个分量的计算结果 $x_i^{(k+1)}=\frac{1}{a_{ii}}(b_i-\sum_{j=1}^{i-1}a_{ij}x_j^{(k+1)}-\sum_{j=i+1}^na_{ij}x_j^{(k)})$ $Dx^{(k+1)}=(Lx^{(k+1)}+Ux^{(k)})+b$ $x^{(k+1)}=(D-L)^{-1}Ux^{(k)}+(D-L)^{-1}b$  收敛性   $\epsilon^{(k)}=x^{(k)}-x^*$</description>
    </item>
    
    <item>
      <title>7. Security</title>
      <link>https://zhengzangw.com/notes/command-line/7-security/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/7-security/</guid>
      <description>Encode # hash printf &amp;#39;hello&amp;#39; | sha1sum sha1sum README.md # encrypt openssl aes-256-cbc -salt -in README.md -out README.enc.md openssl aes-256-cbc -d -in README.enc.md -out README.md User whoami cat /etc/passwd </description>
    </item>
    
    <item>
      <title>7. 实体造型技术基础</title>
      <link>https://zhengzangw.com/notes/computer-graphics/7-solid-modeling/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-graphics/7-solid-modeling/</guid>
      <description>实体的表示 点集拓扑表示  有效物体（实体）：具有一定形状，具有确定的封闭边界（表面），是一个内部连通的三维点集  内点：点集中完全包含于该点集充分小邻域的点 边界点   正则运算 $r$：先对物体取内点再取闭包  边界 $b$ 内点 $i$   正则点集：$A=rA$ 实体的可计算性：对于一个占据空间的正则点集，如果其表面是二维流形，则该正则点集为实体 正则集合运算 $A \text{ op}^*\ B=r(A \text{ op } B)$  只需计算 $b(A\text{ op}^*\ B)$ $b(A\cap^* B)=(bA\cap iB)\cup(bB\cap iA)\cup(bA\cap bB)_{\text{same side}}$    形体表示  形体信息  集合信息：欧式空间中位置和大小 拓扑信息：各分量数目及其互相间的连接关系   习题表面：封闭，有向，非自交，有界，连续 形体自身：刚性，三维一致性，表示有限性 几何元素  体：欧式空间中非空有界的封闭子集 体素：能用有限个尺寸参数定义一个简单封闭空间  长方体，圆柱体，球体，代数半空间，参数定义的截面旋转   壳：在观察方向上所能看到的形体的最大外轮廓线 面：有限非零的区域，有一个外环和若干个内环界定范围 环：由有序有向边组成的封闭边界  面上沿环前进，左侧面内   边：两个邻面或多个邻面的交界 点：不允许孤立点   拓扑关系表示：相邻性，包含性  实体的造型   多边形表面表示：用一组包围物体内部的表面多边形描述边界</description>
    </item>
    
    <item>
      <title>Combination Logic Design</title>
      <link>https://zhengzangw.com/notes/digital-circuit/combination-logic-design/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-circuit/combination-logic-design/</guid>
      <description>竞争与冒险  竞争：某一输入量经不同路径传输后，到达电路某一汇合点的时间有先有后 冒险：由于竞争是电路输出发生瞬间错误 通过卡诺图消除竞争：增加冗余项  Combinational PLDs  PLD: Programmable Logic Arrays, two-level AND-OR device that can be programmed to realize any sum-of-products logic expression PAL: Programmable Array Logic, a special case of PLA, fixed OR array  编码器 二进制电平转换为二进制编码
优先编码器
译码器 二进制代码转换为对应高低电平
数据选择器(MUX, multiplexer) $2^n$ 位地址输入、$2^n$ 位数据输入、1位输出，每次在地址输入的控制下，从多路输入数据中选择一路输出
数据分配器(DEMUX, demultiplexer) 将输入数据按地址送到输出端上
计算  数据比较器 加法器 ALU(arithmetic and logic unit) Combinational Multipliers  </description>
    </item>
    
    <item>
      <title>Sequential Logic Design</title>
      <link>https://zhengzangw.com/notes/digital-circuit/sequence-logic-design/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-circuit/sequence-logic-design/</guid>
      <description>基本器件  S-R 锁存器（Latch）     S R Q QN     0 0 last Q last QN   0 1 0 1   1 0 1 0   1 1 0 0     D Latch     C D Q QN     1 0 0 1   1 1 1 0   0 x last Q last QN      Flip-Flop 触发器：某个信号处于上升沿或者下降沿的时候工作</description>
    </item>
    
    <item>
      <title>7. Markov Chain Monte Carlo Methods</title>
      <link>https://zhengzangw.com/notes/advanced-algorithm/7-markov-chain-monte-carlo-methods/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-algorithm/7-markov-chain-monte-carlo-methods/</guid>
      <description>Monte Carlo Method  (P)Problem  Universe $U$, subset $S\subseteq U$ where $\rho=\frac{|S|}{|U|}$ Assume a uniform sampler for elements Estimate $Z=|S|$   Monte Carlo Method (for estimating)  Sample $X_1,X_2,\cdots,X_N$ uniformly and independently from $U$ $Y_i=[X_i\in S]$ counting: $\hat Z=\frac{|U|}{N}\sum_{i=1}^NY_i$   $\epsilon$-approx estimator: $(1-\epsilon)Z\leq\hat Z\leq(1+\epsilon)Z$ Estimator Theorem(Naive): $N\geq\frac{4}{\epsilon^2\rho}\ln\frac{2}{\delta}=\Theta(\frac{1}{\epsilon^2\rho}\ln\frac{1}{\delta})\Rightarrow P(\hat Z$ is $\epsilon$-approx of $|S|)\geq 1-\delta$ Monte Carlo Method (for sampling)  rejection sampling: inefficient if $\rho$ is small    Counting DNF Solutions  (P)Counting DNF Solutions: #$\text{P}$-hard  Input: DNF formula $\phi:{T,F}^n\rightarrow{T,F},U={T,F}^n$ Output: $Z=|\phi^{-1}(T)|,S=\phi^{-1}(T)$ $\rho=\frac{|S|}{|U|}$ can be exponentially small   (P)Union of Sets  Input: $m$ sets $S_1,S_2,\cdots,S_m$, estimate $|\bigcup_{i=1}^mS_i|$ Output: $|\bigcup_{i=1}^mS_i|$   Coverage Algorithm: $\rho\geq \frac{1}{m}$  $U={(x,i)|x\in S_i}$ (multiset union) $\overline{S}={(x,i^)|x\in S_{i^}\text{ and }x\in S_i\Rightarrow i^*\leq i}$ Sample unifomr $(x,i)\in U$  Sample $i\in{1,2,\cdots,m}$ Sample uniform $x\in S_i$   check if $(x,i)\in\overline{S}$  $x\in S_i$ and $\forall j&amp;lt;i,x\not\in S_j$     Counting by Coverage Algorithm: $|U|=\sum_i|S_i|$ Sampling by Coverage Algorithm: Rejection Sampling  Markov Chain $${X_t|t\in T},X_t\in\Omega$$</description>
    </item>
    
    <item>
      <title>7-常微分方程</title>
      <link>https://zhengzangw.com/notes/calculus/section7/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/calculus/section7/</guid>
      <description>变量可分方程 $$ p(y)dy=q(x)dx $$
 通解 $\int p(y)dy=\int q(x)dx$ 初值问题：有初始条件，解为特解 解的存在于唯一性定理 解的延伸定理  一阶线性方程 $$\frac{dy}{dt}+p(t)y=q(t)$$
 通解：$y=e^{-\int p(t)}\int e^{\int p(t)}q(t)dt$  常系数齐次方程 $$\sum_{j=0}^na_j\frac{d^jy}dt^j=0$$
 解的线性组合仍为解 特征多项式：$P(\lambda)=\sum_{j=0}^na_j\lambda^j=\prod_{j=1}^k(\lambda-r_j)^{m_j}$ 特征根：$P(\lambda)$ 的根  $e^{rt}$ 为解 $\iff P(r)=0$   $y(t)=\sum_{i=1}^{k}\sum_{j=0}^{m_k-1}t^je^{r_it}$  常系数非齐次方程 $$\sum_{j=0}^na_j\frac{d^jy}dt^j=q(t)$$
 Lagrange 常数变易法  </description>
    </item>
    
    <item>
      <title>7-概率图</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/7-pgm/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/7-pgm/</guid>
      <description>图模型  $p(x)=\prod_{k=1}^{K}p(x_k|x_1,\cdots,x_{k-1})$ 联合概率表：需要 $2^K-1$ 个参数 图模型基本问题  表示问题：如何用图结构描述变量间的依赖关系 学习问题：结构学习，参数学习 推断问题：已知部分变量，求其它变量条件分布概率   有向图模型：贝叶斯网(信念网, Judea Pearl) 无向图模型：马尔可夫网  有向图模型  $B=\langle G,\Theta\rangle$  $G$: 有向无环图 (DAG) $\Theta$: 条件概率表 (CPT)  $\theta_{x_i|\pi_i}=P_B(x_i|\pi_i)$     联合分布：$P(x_1,\cdots,x_n)=\prod_{i=1}^nP(x_i|\text{Parent}(x_i))$  独立性判断  三变量间的典型依赖关系  同父结构: $x_3\perp x_4|x_1$ 顺序结构：$y\perp z|x$ 冲撞结构(V-structure): $x$⫫$y|z$  marginal independece: $z$ 完全未知则独立，给定 $z$ 则不独立     有向分离 (D-seperation，或道德化)  转化为无向图 (moral graph)  有向边改无向边 V 型结构两个父节点之间加边   $x$ 与 $y$ 有向分离：$\exists Z$, $x,y$ 在 $G\backslash Z$ 中分属两个连通分支则 $x\perp y|Z$   马尔科夫覆盖  常见有向图模型  Sigmoid 信念网络  变量取值为 ${0,1}$ $p(x_k=1|x_{\pi_k};\theta)=\sigma(\theta_0+\sum_{x_i\in x_{\pi_k}}\theta_ix_i)$ $M$ 个父节点  表格记录：$2^M$ 参数 参数化模型：$M+1$ 参数     朴素贝叶斯分类器: 条件独立性假设 隐马尔科夫网  结构学习  搜索最优贝叶斯网络结构: $\text{NP}$-hard 评分搜索：$G^*=\arg\max_G g(G:D)$  MDL(最小描述长度)：综合编码长度最短的网络  $s(B|D)=f(\theta)|B|-\text{LL}(B|D)$ $\text{LL}(B|D)=\sum_{i=1}^m\log P_B(x_i)$ AIC 准则: $f(\theta)=1$ BIC 准则: $f(\theta)=\frac{\log m}{2}$     常用策略  贪心法 网络结构约束    无向图模型  马尔科夫网：  $V$: 随机变量 $E$: 变量间的依赖关系 $x_{{k}}$: 第$k$个团随机变量   无向图为马尔科夫网络 $\iff$ 满足以下三条性质之一  Pairwise Markov Property: $X_u\perp X_v|X_{V\backslash{u,v}},{u,v}\not\in E$ Local Markov Property: $X_v\perp X_{V\backslash\text{ne}(v)}|X_{\text{ne}(v)}$  $\text{ne}(v)$: 邻居，马尔科夫毯   Global Markov Property: $X_A \perp X_B|X_S$，$A,B$ 两个子集间任何一条路径都经过子集$S$，则给定 $S$ 后，$A,B$ 两个子集相互条件独立   构造  如果满足 $P\not\vDash(X\perp Y|V-{X,Y})$，则 $X,Y$ 加边 给定 $X$ 的马尔可夫毯，$X$ 独立于余下的变量   Hammersley-Clifford 定理：$p(x)&amp;gt;0$ 满足局部马尔科夫性质当且仅当可表为马尔科夫网上的吉布斯分布  吉布斯分布：$p(x)=\frac{1}{Z}\prod_{c\in\mathcal{C}}\phi_c(x_c)$ 势函数：$\phi_k(x_{{k}})$ 配分函数：$Z=\sum_{x\in \mathcal{X}}\prod_{c\in\mathcal{C}}\phi_c(x_c)$ 势函数：$f_k(x_{{k}})=e^{\omega_k^T\phi_k(x_{{k}})}$   一般定义为玻尔兹曼分布  $\phi_c(x_c)=\exp(-E_c(x_c))$    常见无向图模型  对数线性模型（最大熵模型）  $\phi_c(x_c|\phi_c)=\exp(\theta_c^Tf_c(x_c))$ $\log p(x;\theta)=\sum_{c\in\mathcal{C}}\theta_c^Tf_c(x_c)-\log Z(\theta)$ 条件最大熵模型（Softmax 回归模型）：$p(y|x;\theta)=\frac{\exp(\theta^Tf(x,y))}{\sum_{y}\exp(\theta^Tf_y(x,y))}$   条件随机场（CRF）：$p(y|x;\theta)=\frac{1}{Z(x;\theta)}\exp(\sum_{c\in\mathcal{C}}\theta_c^Tf_c(x,y_c))$  线性链条件随机场   马尔科夫逻辑网 (MLN) = Markov Net + 一阶逻辑  判断一个知识库中是否包含公式 $F$，$F$ 在所有满足知识库的世界中恒真  公式附加权值的一阶逻辑知识库 基本思想：将一阶逻辑的限制放松，即一个可能世界违反公式越多，其发生的概率越小   $L$：${(F_i,w_i)}$  $F_i$: 一阶逻辑闭规则（无变元） $w_i$: 实数表示权重 $C$: 有限常数集   马尔科夫逻辑网 $M_{L,C}$  $L$ 中的任意闭原子对应一个二值结点，真为 $1$，假为 $0$ $L$ 任意闭规则对应一个特征值，若规则为真，特征值为 $1$ 否则为 $0$。权重为 $\omega_i$ $P(X=x)=\frac{1}{Z}\text{exp}(\sum_{i=1}^F\omega_in_i(x))$  $n_i$: $F_i$ 在 $X$ 中所有取真值的公式的数量        参数学习 无隐变量  有向图：$L(D,\theta)=\frac{1}{N}\sum_{n=1}^N\sum_{k=1}^K\log p(x_k^{(n)}|x_{\pi_k}^{(n)};\theta_k)$ 无向图：$L(D,\theta)=\frac{1}{N}\sum_{n=1}^N\log p(\sum_{c\in\mathbb{C}}\theta_c^Tf_c(x_c^{(n)}))-\log Z(\theta)=E_{x\sim\tilde p(x)}f_c(x_c)-E_{x\sim p(x;\theta)}f_c(x_c)=\frac{1}{N}\sum_{n=1}^Nf_c(x_c^{(n)})-\sum_xp(x;\theta)f_c(x_c)$  采样近似第二个期望 坐标上升法：固定其它参数，优化一个参数    有隐变量  EM 算法  推断  条件概率查询：$p(q|e)=\frac{\sum_z p(q,e,z)}{\sum_{q,z}p(q,e,z)}$ 因果推理  已知网络中的祖先节点而计算后代节点的条件概率   诊断推理  已知后代节点计算祖先节点，贝叶斯定理   支持推理  原因间的相互影响    精确推断  精确推断：NP-hard 变量消除法 信念传播算法（BP, 合积算法，消息传递算法）  链上的 BP 算法  $p(x_t)=\frac{1}{Z}\prod_{t=1}^{T-1}\phi(x_t,x_{t+1})$ $p(x_t)=\frac{1}{Z}\sum_{x_1}\cdots\sum_{x_{t-1}}\sum_{x_{t+1}}\cdots\sum_{x_T}\prod_{t=1}^{T-1}\phi(x_t,x_{t+1})$ $p(x_t)=\frac{1}{Z}\mu_{t-1,t}(x_t)\mu_{t+1,t}(x_t)$ $\mu_{t-1,t}(x_t)=\sum_{x_{t-1}}\phi(x_{t-1},x_t)\mu_{t-2,t-1}(x_{t-1})$ $\mu_{t+1,t}(x_t)=\sum_{x_{t+1}}\phi(x_t,x_{t+1})\mu_{t+2,t+1}(x_{t+1})$   树结构上的 BP 算法 图结构上的 BP 算法：联合树算法    近似推断  环路信念传播：使用信念传播算法在含环图上获得近似解  变分推断  变分推断（变分贝叶斯）：寻找简单分布 $q^*(z)$ 近似条件概率密度 $p(z|x)$ 泛函优化问题：$q^*(z)=\argmin_{q(z)\in Q}\text{KL}(q(z)|p(z|x))=\arg\max_{q(z)\in Q}\text{ELBO}(q,x)$ 候选分布族 $Q$  平均场分布族：$q(z)=\prod_{m=1}^Mq_m(z_m),z_m\subseteq Z$ 神经网络拟合 $p(z|x)$   $\text{ELBO}(q,x)=\int \prod_{m=1}^Mq_m(z_m)(\log p(x,z)-\sum_{m=1}^M\log q_m(z_m))dz=\int q_j(\int\prod_{m\neq j}q_m\log p(x,z)dz_m)dz_j-\int q_j\log q_j dz_j+C$  $\text{ELBO}(q,x)=\int q_j\log \tilde p(x,z_j)dz_j-\int q_j\log q_j dz_j+C$ $\log \tilde p(x,z_j)=E_{q(z_{\backslash j})}\log p(x,z) + C$ 关于 $z_j$ 未归一化分布 最优化 $q_j^*(z_j)=\tilde p(x,z_j)$   坐标上升法：迭代优化 $q_j^*(z_j),j=1,\cdots,M$，使其收敛到局部最优解  采样法  随机采样：cdf 递增，则在 cdf 逆函数上进行均匀采样 拒绝采样  未归一化分布 $\hat p(x)$ 采样样本 $\hat x$ 提议分布（参考分布） $q(x),\exists k,\forall x,kq(x)\geq \hat p(x)$ 接受概率：$\alpha(\hat x)=\frac{\hat p(\hat x)}{kq(\hat x)}$   重要性采样：从参考分布中采样  $E_p[f(x)]=\int_x f(x)p(x)dx=E_q(f(x)\omega(x)]$ 重要性权重：$\omega(x)=\frac{p(x)}{q(x)}$ 未归一：$E_p(f(x))=\frac{\int_x\hat p(x)f(x)dx}{\int_x\hat p(x)dx}\approx\frac{\sum_{n=1}^Nf(x^{(n)}\hat\omega(x^{(n)}))}{\sum_{n=1}^N\hat\omega(x^{(n)})}$   拒绝采样和重要性采样的效率随空间维数的增加而指数降低 MCMC 方法采样  预烧期（Burn-in Period） 相邻样本高度相关：每间隔 $M$ 次随机游走取一个样本   Metropolis-Hastings 算法  根据 $q(x|x_t)$ 采样 $\hat x$ 以如下概率接受：$A(\hat x,x_t)=\min(1,\frac{p(\hat x)q(x_t|\hat x)}{p(x_t)q(\hat x|x_t)})$   Metropolis 算法：MH 算法中提议分布对称  $A(\hat x,x_t)=\min(1,\frac{p(\hat x)}{p(x_t)})$   Gibbs Sampling：使用全条件概率作为提议分布，$A=1$  $p(x_m|x_{\backslash m})=p(x_n|x_1,\cdots,x_{m-1},x_{m+1},\cdots,x_M)$ 按下标顺次采样    </description>
    </item>
    
    <item>
      <title>7. Probabilistic Method</title>
      <link>https://zhengzangw.com/notes/combinatorics/7-probabilistic-method/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/7-probabilistic-method/</guid>
      <description>Existence by Probability $$\exists x,A(x)\Leftarrow P(A(x))&amp;gt;0$$
$$\exists x,A(x)\Leftarrow P(\neg A(x))&amp;lt;1$$
$$P(A)=P(\wedge_{i=1}^n\overline{A}i)&amp;gt;0\Leftarrow P(\vee{i=1}^nA_i)&amp;lt;1\Leftarrow \sum_{i=1}^nP(A_i)$$
Lower Bound for Ramsey&amp;rsquo;s Number  $R(k,k),\forall$ two coloring of $K_n,n&amp;gt;R(k,k),\exists$ a monochromactic $K_k$ Erdős Theorem(1947): ${n\choose k}2^{1-C_k^2}&amp;lt;1$ then it is possible to color the edges of $K_n$ with two colors so that there is no monochromatic $K_k$ subgraph  Paradoxical Tournament  orientation of the edges of the complete graph on set of vertices $V$ $k$-paradoxical: $\forall V, |V|=k,\exists v$ beats them all Theorem (Erdős 1963): if ${n\choose k}(1-2^{-k})^{n-k}&amp;lt;1$, there is a tournament on $n$ vertices that is $k$-paradoxical  The Averaging principle $$\exists x,A(x)\geq t\Leftarrow E(x)\geq t$$</description>
    </item>
    
    <item>
      <title>Compressing</title>
      <link>https://zhengzangw.com/notes/digital-image-process/6-compression/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/6-compression/</guid>
      <description>冗余  压缩比： $C=\frac{b}{b&#39;}$ 相对冗余： $R=1-\frac{1}{C}$  编码冗余  $r_k$: $M\times N$ 大小图像的灰度数值  $p(r_k)=\frac{n_k}{MN}$ 平均比特数：$L_{\text{avg}}=\sum_{k=0}^{L-1}l(r_k)p_r(r_k)$ 固定比特数：$l(r_k)=m,L_{\text{avg}}=m$    空间和时间冗余  行程对（run-length pairs）  灰度值：某灰度连续出现的次数   相邻像素的灰度差 映射  可逆映射 不可逆映射    不相关的信息  有损压缩  被视觉系统忽略的信息 与图像用途无关的信息   量化  度量  信息：$I(E)=\log\frac{1}{P(E)}=-\log P(E)$  $m$ 为底：$m$元单位 $2$：比特   熵：$H=-\sum_{j=1}^JP(a_j)\log P(a_j)$  信源符号：$a_j$ 零记忆信源：独立   灰度信源的熵：$H=-\sum_{k=0}^{L-1}p_r(r_k)\log_2p_r(r_k)$ (bits/pixel) 香农第一定理：$\lim_{n\rightarrow\infty}\frac{L_{avg,n}}{n}=H$  图像像素有相关性：马尔科夫信源，有限记忆信源   保真度  $e(x,y)=\hat f(x,y)-f(x,y)$ 总误差：$\sum\sum |e(x,y)|$ 均方根误差：$e=(\frac{1}{MN}\sum\sum e(x,y)^2)^{\frac{1}{2}}$ $\text{SNR}_{\text{ms}}=\frac{\sum\sum \hat f(x,y)^2}{\sum\sum e(x,y)^2}$ 主观误差    图像压缩  (Mapper -&amp;gt; Quantizer -&amp;gt; Symbol coder)[encoder] -&amp;gt; (Symbol decoder -&amp;gt; Inverse mapper)[decoder]  Mapper: 转换为便于去掉空间和时间冗余，可逆 Quantizer: 根据保真度准则降低精度，不可逆 Symbol decoder: 生成定长/变长编码   霍夫曼编码：对符号概率排序，合并低概率符号 行程编码(run-length pairs) 符号编码：将图像表示为符号的集合  符号：图像中频繁出现的子图像 三元组集合：${(x_1,y_1,t_1),\cdots}$    二值图像压缩方法</description>
    </item>
    
    <item>
      <title>7-数据库的物理组织</title>
      <link>https://zhengzangw.com/notes/database/7-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%89%A9%E7%90%86%E7%BB%84%E7%BB%87/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/7-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%89%A9%E7%90%86%E7%BB%84%E7%BB%87/</guid>
      <description>物理组织  常用的磁盘块分配方式  连续分配法 链接分配法 索引分配法 集簇分配法   数据分类  数据主体与辅助数据 数据字典：数据的描述信息 数据间的联系信息 数据存储路径信息 其它信息：日志信息，用户信息，审计信息   文件记录组织  数据文件：储存关系表中元组的记录式文件 堆文件组织 顺序文件组织：按照某个属性的取值进行排序构成的数据文件  主关键字：$O(\log n)$   散列文件组织 聚集文件组织    索引技术  索引关键字：查询条件的属性 索引项：索引关键字-元组指针 索引文件：与某个数据文件相关的所有索引项组成的文件 稠密索引：数据文件中每条记录在索引文件中都存在一个对应索引项  磁盘I/O时间小 索引关键字排序：加速 可在内存中操作   稀疏索引：数据文件为顺序文件，为每个磁盘块设计一个索引项 多级索引：在索引上建立稀疏索引 重复键值顺序文件稠密索引  为每个索引关键字定义一个索引项（索引文件中索引关键字唯一） 读取直到不为 $K$   重复键值顺序文件稀疏索引  为每个磁盘块定义索引项，关键字值为磁盘块中第一条记录的关键字值（关键字不唯一）   重复键值非顺序文件索引  稠密索引指向记录指针桶   多维索引：根据多个属性值的组合来建立的索引文件  B/B+树  B+树性质  平衡性 过半性 顺序性 自适应性   B+树的查找 B+树的区间查找 B+树的插入  叶节点的分裂 树节点的分裂   B+树的删除 B树：索引关键字可以出现在B树任意一个结点中  扇出（一个结点可以拥有的最大子结点数目）小    散列技术  $h:K\rightarrow B$: 将项值集合映射到桶地址集合 扩展散列  增加溢出页 重组（代价大） 使用仅储存桶指针的目录数组，翻倍目录数组  全局位深度 局部位深度     位图索引：对于关系上的属性的每个可能取值，bit_v[i]=1 if 取值为 $v_i$  </description>
    </item>
    
    <item>
      <title>Cluster</title>
      <link>https://zhengzangw.com/notes/machine-learning/7-cluster/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/7-cluster/</guid>
      <description>性能度量  性能度量，有效性指标 validity index 外部指标：与某个参考模型比较  簇划分：$\mathcal{C}={C_1,C_2,\cdots,C_k}$, 参考模型簇划分 $\mathcal{C}^={C_1^,C_2^,\cdots,C_s^}$,$\lambda,\lambda^*$ 为分别为两者簇标记向量，定义  $a=|\text{SS}|,\text{SS}={(x_i,x_j)|\lambda_i=\lambda_j,\lambda_i^=\lambda_j^,i&amp;lt;j}$ $b=|\text{SD}|,\text{SD}={(x_i,x_j)|\lambda_i=\lambda_j,\lambda_i^\not=\lambda_j^,i&amp;lt;j}$ $c=|\text{DS}|,\text{DS}={(x_i,x_j)|\lambda_i\not=\lambda_j,\lambda_i^=\lambda_j^,i&amp;lt;j}$ $d=|\text{DD}|,\text{DD}={(x_i,x_j)|\lambda_i\not=\lambda_j,\lambda_i^\not=\lambda_j^,i&amp;lt;j}$ $a+b+c+d=\frac{m(m-1)}{2}$   JC (Jaccard Coefficent)  $\text{JC}=\frac{a}{a+b+c}$   FMI (Fowlkes and Mallows Index)  $\text{FMI}=\sqrt{\frac{a}{a+b}\frac{a}{a+c}}$   RI (Rand Index)  $\text{RI}=\frac{2(a+d)}{m(m-1)}$     内部指标  簇划分：$\mathcal{C}={C_1,C_2,\cdots,C_k}$  $\text{avg}(C)=\frac{2}{|C|(|C|-1)}\sum_{1\leq i&amp;lt;j\leq|C|}\text{dist}(x_i,x_j)$ 簇内样本平均距离 $\text{diam}(C)=\max_{1\leq i&amp;lt;j\leq|C|}\text{dist}(x_i,x_j)$ 簇内样本间最远距离 $d_{\min}(C_i,C_j)=\min_{x_i\in C_i,x_j\in C_j}\text{dist}(x_i,x_j)$ $d_{\text{cen}}(C_i,C_j)=\text{dist}(\mu_i,\mu_j)$   DBI (Davies-Bouldin Index)  $\text{DBI}=\frac{1}{k}\sum_{i=1}^k\max_{j\not=i}(\frac{\text{avg}(C_i)+\text{avg}(C_j)}{d_{\text{cen}}(C_i,C_j)})$ 越小越好   DI (Dunn Index)  $\text{DI}=\min_{1\leq i\leq k}(\min_{j\not=i}(\frac{d_{\min}(C_i,C_j)}{\max_{1\leq l\leq k}\text{diam}(C_l)}))$ 越大越好      原型聚类  SOM: self-organizing maps  k-means  最小化平均误差 $E=\sum_{i=1}^k\sum_{x\in C_i}||x-\mu_i||_2^2$ ($\text{NP}$-hard) 贪心策略：迭代优化 k-medoids: represented by objects near center  LVQ Learning Vector Quantization 学习向量量化</description>
    </item>
    
    <item>
      <title>7-参数估计</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/7-%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/7-%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/</guid>
      <description>点估计  总体分布 $F(x;\theta)$, $\theta=(\theta_1,\theta_2,\cdots,\theta_k)&#39;$, 根据 $X_1,X_2,\cdots,X_n$ 构造一个统计量 $\hat\theta(X_1,X_2,\cdots,X_n)$ 作为 $\theta$ 的点估计  矩估计  求总体的各阶原点矩 $\mu_i=g_i(\theta_1,\theta_2,\cdots,\theta_k)$ 解得 $\theta_i=h_i(\mu_1,\mu_2,\cdots,\mu_k)$ 用样本矩代替总体矩的矩估计 $\hat\theta_i=h_i(A_1,A_2,\cdots,A_k)$ 相合性：$h$ 为已知的连续函数，$h(A_1,A_2,\cdots,A_k)\overset{P}{\rightarrow}h(\mu_1,\mu_2,\cdots,\mu_k)$  极大似然估计  $X$ 为连续性随机不变量，密度函数为 $p(x;\theta),\theta\in\Theta$, 样本 $(X_1,X_2,\cdots,X_n)$ 落在点 $(x_1,x_2,\cdots,x_n)$ 的领域的概率近似为 $\prod_{i=1}^np(x_i;\theta)dx_i$ 似然函数 $L(\theta)=L(x_1,\cdots,x_n;\theta)=\prod_{i=1}^np(x_i;\theta)$ 极大似然估计值$\hat\theta(x_1,x_2,\cdots,x_n)$：$L(x_1,x_2,\cdots,x_n;\hat\theta)=\max_{\theta\in\Theta}L(x_1,x_2,\cdots,x_n;\theta)$ 极大似然估计量$\hat\theta(X_1,X_2,\cdots,X_n)$ 对数似然函数 $\ln L(\theta)$ 不变性原则：$\hat\theta$ 为 $\theta$ 的极大似然估计，$\phi(\theta)$ 有单值反函数，则$\hat{\phi(\theta)}=\phi(\hat\theta)$ $X_{(1)}=\min(X_i),X_{(n)}=\max(X_i)$  $F_{(n)}(X)=F^{n}(X)$    EM  对数边际似然：$L(D;\theta)=\frac{1}{N}\sum_{n=1}^N\log p(x^{(n)};\theta)=\frac{1}{N}\sum_{n=1}^N\log \sum_zp(x^{(n)},z;\theta)$ 变分函数：$q(z)$ 为 $Z$ 上的分布 证据下界 $\text{ELBO}(q,x;\theta)=\sum_z q(z)\log\frac{p(x,z;\theta)}{q(z)}\leq \log\sum_zq(z)\frac{p(x,z;\theta)}{q(z)}=\log p(x;\theta)$  $q(z)=p(z|x;\theta)$ 时，对数边际似然与下界相等   EM 算法  Expectation: 固定 $\theta_t$，寻找 $q_{t+1}(z)$ 使 $\text{ELBO}(q,x;\theta_t)=\log p(x;\theta_t)$  理想分布：$q(z)=p(z|x;\theta_t)$ 推断问题   Maximization: 固定 $q_{t+1}(z)$，寻找参数最大化证据下界 $\theta_{t+1}=\arg\max_{\theta}\text{ELBO}(q_{t+1},x;\theta)$   信息论视角： $\log p(x;\theta)=\text{ELBO}(q,x;\theta)+\text{KL}(q(z)|p(z|x;\theta))$  估计量的评价标准  无偏性  $\hat\theta(X_1,X_2,\cdots,X_n)$ 为 $\theta$ 的估计量，$\Theta$ 为 $\theta$ 的取值范围，若$E(\hat\theta)=\theta,\theta\in\Theta$, 则 $\hat\theta$ 为 $\theta$ 的无偏估计 $E(A_k)=\mu_k$ $E(S^2)=\sigma^2$ 渐进无偏估计：$n\rightarrow\infty$ 时无偏 正态分布的矩估计和极大似然估计：  $\hat\mu = \overline{X}$ $\hat\sigma^2 = S$     均方误差准则  $M(\hat\theta,\theta)=E(\hat\theta-\theta)^2$ 值越小越好 $M(\hat\theta,\theta)=D(\hat\theta)+(E\hat\theta-\theta)^2$  偏差：$E\hat\theta-\theta$     一致性(相合性)  $\hat\theta_n\overset{P}{\rightarrow}\theta$    区间估计  $(\hat\theta_1,\hat\theta_2)$ 是 $\theta$ 的置信度为 $1-\alpha$ 的置信区间：$P(\hat\theta_1&amp;lt;\theta&amp;lt;\hat\theta_2)=1-\alpha$  置信下限 $\hat\theta_1$ 置信上限 $\hat\theta_2$ 置信度 $1-\alpha$   $(\hat\theta_1,+\infty)$ 为 $\theta$ 的置信度为 $1-\alpha$ 的单侧置信区间：$P(\hat\theta_1&amp;lt;\theta)=1-\alpha$ 枢轴变量法  枢轴变量：$U(X_1,X_2,\cdots,X_n;\theta)$ 分布已知 根据分布找到两个常数 $a,b$ 使得 $P(a&amp;lt;U&amp;lt;b)=1-\alpha$ 利用 $a&amp;lt;U&amp;lt;b$ 求解 $\hat\theta_1&amp;lt;\theta&amp;lt;\hat\theta_2$   正态分布 （置信度$1-\alpha$）  $\mu$  $\sigma^2$ 已知：枢轴变量 $U=\frac{\overline{X}-\mu}{\sigma/\sqrt{n}}\sim N(0,1)$  $[\overline{X}-u_{\alpha/2}\frac{\sigma_0}{\sqrt{n}}, \overline{X}+u_{\alpha/2}\frac{\sigma_0}{\sqrt{n}}]$   $\sigma^2$ 未知：枢轴变量 $T=\frac{\sqrt{n}(\overline{X}-\mu)}{S}\sim t(n-1)$  $[\overline{X}-t_{\alpha/2}(n-1)\frac{S}{\sqrt{n}},\overline{X}+t_{\alpha/2}(n-1)\frac{S}{\sqrt{n}}]$     $\sigma^2$  $\mu$ 未知：$(n-1)S^2/\sigma^2\sim\chi^2(n-1)$  $[\frac{(n-1)S^2}{\chi^2_{\alpha/2}(n-1)},\frac{(n-1)S^2}{\chi^2_{1-\alpha/2}(n-1)}]$   $\mu$ 已知  $[\frac{\sum_{i=1}^n(X_i-\mu)^2}{\chi^2_{1-\alpha/2}(n)},\frac{\sum_{i=1}^n(X_i-\mu)^2}{\chi^2_{\alpha/2}(n)}]$     $\mu_1-\mu_2$  $\sigma_1^2,\sigma^2$ 已知：$U=\frac{\overline{X}-\overline{Y}-(\mu_1-\mu_2)}{\sqrt{\frac{\sigma_1^2}{n_1}+\frac{\sigma_2^2}{n_2}}}\sim N(0,1)$  $[(\overline{X}-\overline{Y})-u_{\alpha/2}\sqrt{\frac{\sigma_1^2}{n_1}+\frac{\sigma_2^2}{n_2}}, (\overline{X}-\overline{Y})+u_{\alpha/2}\sqrt{\frac{\sigma_1^2}{n_1}+\frac{\sigma_2^2}{n_2}}]$   $\sigma_1^2=\sigma_2^2=\sigma^2$ 未知：$T=\sqrt{\frac{n_1n_2(n_1+n_2-2)}{n_1+n_2}}\frac{(\overline{X}-\overline{Y})-(\mu_1-\mu_2)}{(n_1-1)S_1^2+(n_2-1)S_2^2}\sim t(n_1+n_2-2)$   $\sigma_1^2/\sigma_2^2$  $\mu_1,\mu_2$ 未知：$F=\frac{S_1^2\sigma_2^2}{S_2^2\sigma_1^2}\sim F(n_1-1,n_2-1)$  $[\frac{S_1^2}{S_2^2}\frac{1}{F_{\alpha/2}(n_1-1,n_2-1)}, \frac{S_1^2}{S_2^2}\frac{1}{F_{1-\alpha/2}(n_1-1,n_2-1)}]$       非正态总体均值 大样本法  $\frac{\overline{X}-\mu}{\sigma/\sqrt{n}}\approx N(0,1)$ $\sigma$ 未知：用 $S$ 代替    </description>
    </item>
    
    <item>
      <title>复用</title>
      <link>https://zhengzangw.com/notes/data-communication/6-%E5%A4%8D%E7%94%A8/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/6-%E5%A4%8D%E7%94%A8/</guid>
      <description>多个点对点通信共享数据链路容量
频分复用 (Frequency Division Multiplexing) 各路信号$m_i(t)$ $\rightarrow$ (副载波调制器$f_i$ $\rightarrow$ $s_i(t)$ $\rightarrow$ 叠加$\Sigma$)复用器 $\rightarrow$ 复合基带调制信号 $m_b(t)$ $\rightarrow$ 发送器$f_c$ $\rightarrow$ FDM 信号 $s(t)$ $\rightarrow$ (主接收器 $\rightarrow$ 复合基带信号 $\rightarrow$ 带通滤波器$f_i$)分用器 $\rightarrow$ $s_i(t)$ $\rightarrow$ 解调器$f_i$ $\rightarrow$ $m_i(t)$
 有效带宽大于被传输的信号的带宽：$B&amp;gt;\sum_{i=1}^nB_i$ 串扰  防护频带：未被使用的部分   互调噪声  FDM 机制  基群  带宽：48kHz 话音数量：12 频谱：60-108kHz   超群，主群  AT&amp;amp;T ITU-T 波分复用 WDM  不同频率光路在同一光纤上传输  正交频分复用 (OFDM，多载波调制)  副载波正交  实际可用 IFFT -&amp;gt; FFT 循环前缀   一个数据源 $R$ bps, 每个比特持续时间为 $\frac{1}{R}$， 通过 OFDM，每个比特的持续时间为 $\frac{N}{R}$ 优点  衰减仅影响部分副载波 克服码间干扰    同步时分复用 (Synchronous Time Division Mutliplexing) 各路信号$m_i(t)$ $\rightarrow$ 缓存 $\rightarrow$ $m_i(t)$ $\rightarrow$ 扫描操作 $\rightarrow$ TDM 流 $m_c(t)$ $\rightarrow$ 调制解调器 $\rightarrow$ $s(t)$ $\rightarrow$ 调制解调器 $\rightarrow$ TDM 流 $\rightarrow$ 扫描操作 $\rightarrow$ $m_i(t)$ $\rightarrow$ 缓存 $\rightarrow$ $m_i(t)$</description>
    </item>
    
    <item>
      <title>Windows</title>
      <link>https://zhengzangw.com/notes/advanced-programming/7-windows/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/7-windows/</guid>
      <description>Windows 简介  Windows: 基于图形界面的多任务操作系统  多任务：同时运行多个应用程序 窗口：应用程序通过窗口与用户交互 输入：鼠标单击/双击/拖放，菜单选择，键盘输入   Windows 功能  工具：资源管理器，记事本，画图 &amp;hellip; 函数库：作为 Windows 应用程序接口（API）提供 windows.h   应用程序类型  单文档应用  只能对一个文档数据操纵 必须首先结束当前文档的所有操作之后，才能进行下一个文档的操作   多文档应用  同时可以对多个文档的数据进行操作 不必等到一个文档的所有操作结束，就可以对其它文档进行操作，对不同文档的操作是在不同的子窗口中进行的   对话框应用  以对话框的形式操作一个文档数据 对文档数据的操作以各种“控件”（control）来实现 程序以按&amp;lt;确定&amp;gt;或&amp;lt;取消&amp;gt;等按钮来结束      消息驱动程序结构  Windows 应用程序的结果属于消息（事件）驱动的结构：程序的任何一个动作都是在接收到一条消息后发生的     Windows 消息      WM_KEYDOWN/WM_KEYUP 键盘按键   WM_CHAR 字符   WM_LBUTTONDOWN/WM_LBUTTONUP/WM_LBUTTONDBLCLK/WM_MOUSEMOVE 鼠标按键   WM_COMMAND 菜单   WM_PAINT 窗口内容刷新   WM_TIMER 定时器消息     消息队列：Windows 系统会把属于各个应用程序的消息放入各自的消息队列  大部分消息关联到某个窗口 每个窗口有一个消息处理函数   消息循环：取消息-处理消息  取到 WM_QUIT，循环结束   可再入：函数的调用者要自带工作区（数据空间）  由于消息处理函数在处理一条消息时可能会主动产生一些新消息，这些消息并不放入消息队列，而是直接调用消息处理函数来处理这些消息，这样就有可能导致消息处理函数的一次执行还未结束，另一次执行就开始的现象，这可能会引起数据的不一致错误。 函数需要的数据要通过参数来传递 函数不能有 static 存储类的局部变量 在函数中访问全局变量也可能导致函数不可再入    Windows API  基于 Windows API 的过程式 Windows 应用程序设计  是一种基于过程抽象的程序设计范式 通过调用 API 函数编写程序的粒度太细、太繁琐，开发效率不高   主函数 WinMain：每个 Windows 应用程序都必须提供  注册窗口类（窗口基本信息）  窗口类的名字、窗口的基本风格、消息处理函数名、图标、光标、背景颜色以及菜单 每类窗口（不是每个窗口）都需要注册   创建应用程序主窗口 进入消息循环 为每类窗口提供一个消息处理函数，用于处理发送到它的消息    #include &amp;lt;windows.</description>
    </item>
    
    <item>
      <title>7. Security</title>
      <link>https://zhengzangw.com/notes/conputer-network/7-security/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/7-security/</guid>
      <description>安全通信要求  CIA triad  Confidentiality  Data confidentiality Privacy   Integrity  Data Integrity System integrity   Availability   Authenticity Accountability operational security  Threats    Threat consequence Thread Action     Unauthorized Disclosure Exposure,Interception,inference,Intrusion   Deception Masquerade,Falsification,repudiation   Disrupction Incapacitation,Corruption,Obstruction   Usurpation Misappropriation,Misuse        Availability Confidentiality Integrity     Hardware denying service     Software Programs deleted unauthorized copy of software working program modified   Data Files deleted unauthorized read files modified, new files fabricated   Communication Lines Messages destroyed Messages read Messages modified    Intruders  Masquerader: An individual who is not authorized to use the computer and who penetrates a system&amp;rsquo;s access controls to exploit legitimate user&amp;rsquo;s account Misfeasor: A legitimate user access authorized data or programs Clandestine user: An individual seizes supervisory control of the system  Malicious software(malware)    Name Description     Virus Malware that, when executed, tries to replicate itself into other executable code; when it succeeds the code is said to be infected.</description>
    </item>
    
    <item>
      <title>字符编码</title>
      <link>https://zhengzangw.com/notes/multimedia/7-charset/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/multimedia/7-charset/</guid>
      <description>&lt;h2 id=&#34;现代字符编码模型&#34;&gt;现代字符编码模型&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;工作&lt;/th&gt;
&lt;th&gt;元素&lt;/th&gt;
&lt;th&gt;集合&lt;/th&gt;
&lt;th&gt;Remark&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;抽象字符表(ACR)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;字符&lt;/td&gt;
&lt;td&gt;字符集&lt;/td&gt;
&lt;td&gt;封闭(ASCII,ISO/IEC 8859) 开放(Unicode)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;编号字符集(CCS)&lt;/td&gt;
&lt;td&gt;逻辑编号&lt;/td&gt;
&lt;td&gt;Code Point(码点)&lt;/td&gt;
&lt;td&gt;Code Space(码点空间)&lt;/td&gt;
&lt;td&gt;Unicode Scalar Value; 可能一对多，可能使用多个码点组成的码点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;字符编码方式(CEF)&lt;/td&gt;
&lt;td&gt;逻辑编码（储存格式）&lt;/td&gt;
&lt;td&gt;Code Unit Sequence(码元序列)&lt;/td&gt;
&lt;td&gt;编码空间&lt;/td&gt;
&lt;td&gt;定长编码空间大小固定，变长编码可增大&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;字符编码模式(CES)&lt;/td&gt;
&lt;td&gt;物理编码（序列化格式）&lt;/td&gt;
&lt;td&gt;字节序列&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;储存时的编码；考虑大小端序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;传输编码语法(TES)&lt;/td&gt;
&lt;td&gt;适应性编码处理&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;映射到受限值域/压缩字节序列；传输时的编码&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>7-Number Theory</title>
      <link>https://zhengzangw.com/notes/problem-solving/7-number-theory/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/7-number-theory/</guid>
      <description>背景知识  自然数的集合论定义：  $a^+:=a\cup{a}$ 归纳集  $\emptyset\in A$ $\forall a(a\in A\rightarrow a^+\in A)$   $\mathbb{N}$ 为所有归纳集之交   Peano 结构  $e\in S$ $\forall a\in S,f(a)\in S$ $\forall b\in S,\forall c\in S,f(b)=f(c)\rightarrow b=c$ $\forall a\in S,f(a)\not= e$ $\forall A\subseteq S, (e\in A\wedge(\forall a\in A)(f(a)\in A))\rightarrow A=S$   良序公理与数学归纳法原理等价  数论基础  带余除法: $a=bq+r,b&amp;gt;0,0\leq r&amp;lt;b$  存在性证明：良序公理 唯一性证明   整除及其性质  $a|b,a|c\Rightarrow a|nb+mc$   最大公因子 (hcf/gcd)  裴蜀定理：$\gcd(a,b)=ar+bs$  证明：良序公理+带余除法   Strong Duality for GCD: $\max{d_i:d\in\mathbb{Z},d|a,d|b}=\min{ax+by:x\in\mathbb{Z},y\in\mathbb{Z},ax+by&amp;gt;0}$  证明  $d|s,s|d$ Weak Duality + $\exists$   唯一性证明   $\text{lcm}(a,b)\gcd(a,b)=ab$  证明  Isomorphism Theorem Unique Factorization $d|(a,b)\Leftrightarrow d|\frac{ab}{[a,b]}$   $(a,b,c)[a,b,c]=\frac{abc}{[(a,b),(b,c),(c,a)]}$ $[a,b,c]=\frac{abc(a,b,c)}{(a,b)(a,c)(b,c)}$   $\gcd(a,b,c)=\gcd(\gcd(a,b),c)$   质数  $\pi(x)\sim\frac{x}{\ln{x}}$ 无限质数证明  $P=p_1p_2\cdots p_n+1$ Fermat Numer $F_n=2^{2^n}+1$ 两两互素  $F_n-2=\prod_{k=1}^{n-1}F_k$   Mersenne Number $2^p-1$  $2^p\equiv 1\pmod{q}\Rightarrow p|q-1$     Dirichlet&amp;rsquo;s Theorem: $\gcd(a,m)=1$ then there are infinitely many primes $p,p\equiv a\pmod{m}$   筛法求素数 算术基本定理  存在性证明：良序公理（找不满足中最小的） 唯一性证明：$1\rightarrow n$     $\varphi(n)=n\prod_{p|n}(1-\frac{1}{p}),p$ is prime  $\varphi(p)=p-1$ $\varphi(n)&amp;gt;\frac{n}{e^\gamma\ln\ln n+\frac{3}{\ln\ln n}},\gamma=0.</description>
    </item>
    
    <item>
      <title>7-软件测试和验证</title>
      <link>https://zhengzangw.com/notes/software-enginerring/7-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%92%8C%E9%AA%8C%E8%AF%81/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/7-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%92%8C%E9%AA%8C%E8%AF%81/</guid>
      <description>软件缺陷  Error: 人的错误行为导致软件中出现不希望或不可接受的内部状态 Fault: 软件运行时出现不希望或不可接受的状态 Failure: 软件运行时产生了不希望或不可接受的外部行为结果 incident: 软件运行中出现了与失效类似的现象 anomaly: 软件运行中出现了未预期的现象 Vulnerability: 能被利用进行攻击的代码缺陷 variance: 软件中于要求不一致处 Defect (Bug): 存在于软件生存期中哪些不希望或不可接受的偏差  错误 遗漏 额外实现   因需求产生的缺陷最多 在软件生存期中，缺陷发现和清除的越晚，需付出的代价越大 技术手段  需求/设计  自然语言：评审 半形式语言（UML）：评审+验证 形式语言：自动验证   代码  评审 分析：程序分析 验证：模型检验、推理证明   可执行系统  测试：白盒、黑河、灰盒 运行时验证 监控/容错      程序分析  静态分析与动态分析 工具：Coverity, PCLint, Clang, Klocwork  软件测试  测试活动：标识 - 设计 - 开发 - 执行 - 比较   功能测试与非功能测试  黑盒方法  将测试对象看做黑色盒子，只依据程序的需求规格说明书，检查程序的功能是否符合它的功能说明 穷尽测试：黑盒测试中穷尽所有可能输入条件和输出条件（不可能）  等价类划分法  将程序输入域划分为若干部分，每个子集中选取少数具有代表性的数据作为测试用例 有效等价类：检验程序是否实现了规格说明中预先规定的功能和性能 无效等价类：无意义的、不合理的输入数据所构成的集合 标准等价类测试：不考虑无效数据值，测试用例使用每个等价类中的一个值 健壮等价类测试：对无效输入，一个测试用例有一个无效值，其他值均取有效值  需要花费精力定义无效测试用例的期望输出 对强类型的语言没有必要考虑无效的输入   测试用例设计   构建等价类表</description>
    </item>
    
    <item>
      <title>Chapter 7</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/chapter7/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/chapter7/</guid>
      <description>基本概念  CPU 控制流：CPU 所执行的地址序列 正常控制流：按指令存放顺序或转移类指令指示地址得到的控制流 ECF: Excptional Control of Flow process descriptor: 结构类型 task_structure task_list: 双向循环列表，每个元素为进程描述符 TSS: Task State Segment 逻辑控制流：进程确定的指令执行地址序列 物理控制流：多个逻辑控制流组成 concurrency: 并发，不同进程的逻辑控制流在时间上交错 parallelism: 并行，并发的特例，同时进行的两个进程 time slice: 连续执行同一个进程的时间段 时间片轮转处理器调度  context switching 实现班班通进程中指令交替执行的机制
 进程的上下文：物理实体和支持进程运行的环境 用户堆栈：运行时堆和用户栈 用户级上下文：程序块、数据块、用户堆栈等组成的用户空间信息 系统级上下文：进程标识信息、进程现场信息、进程控制信息（各种内核数据结构）和系统内核栈组成的内核空间信息 硬件/寄存器上下文 上下文切换  将寄存器上下文保存到当前进程的系统级上下文中 将新进程系统级上下文中的现场信息恢复到寄存器中 将控制转移到新进程    memory mapping 将进程虚拟地址空间中的一个区域与硬盘上一个对象关联，初始化一个 vm_area_struct 结构
mmap 函数
 void *mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset 返回值 MAP_FAILED(-1), 成功则为指向映射区域的指针 prot 访问权限 PROT_EXE/READ/WRITE/NONE flags 对象类型  普通文件  MAP_PRIVATE: 只读代码和已初始化数据，私有对象，写时拷贝  私有的写时拷贝页   MAP_SHARED: 共享对象   匿名文件：MAP_ANON 内核创建，全部由 0 组成。对应区域页面称为 demand-zero page    loader  execve() 启动加载器 int execve(char *filename, char *argv[], *envp[]) 失败 -1 成功 _start(定义于 crtl.</description>
    </item>
    
    <item>
      <title>8-Methodology</title>
      <link>https://zhengzangw.com/notes/deep-learning/8-methodology/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/8-methodology/</guid>
      <description>半监督学习  自训练（Self-Training, Self-Teaching, Bootstrapping）：先用标注数据训练一个模型，将预测置信度较高的样本的位标签加入训练集重新训练 协同训练（Co-Training）：基于不同视角的分类器促进训练  在训练集上根据不同视角分别训练两个模型 $f_1$ 和 $f_2$ 在无标注训练集上预测，各选取预测置信度比较高的样本加入训练集，重新训练两个不同视角的模型    多任务学习  多任务学习：归纳迁移学习的一种，利用相关任务中的信息作为归纳偏置提高泛化能力 共享模式  硬共享模式：让不同任务的神经网络共同使用一些共享模块提取通用特征 软共享模式：每个任务从其它任务获得一些信息（如隐状态、注意力机制） 层次共享模式：一般神经网络中不同层抽取的特征类型不同，低层一般抽取一些低级的局部特征，高层抽取一些高级的抽象语义特征 共享-私有模式：将共享模块和任务特定(私有)模块的责任分开    迁移学习  领域：一个样本空间极其分布 $\mathcal{D}=(\mathcal{X},\mathcal{Y},p(x,y))$ 机器学习任务：建模 $\mathcal{D}$ 上的条件概率 $p(y|x)$  Inductive Trasfer Learning Different Tasks: $p_S(y|x)\neq p_T(y|x), p_S(x)=p_T(x)$
 Multi-task Learning: Source Domain Labels are available  learn source and target   Self-taught Learning: Source Domain Labels are unavailable  feature based: learn good feature on source fine-tuning: pretrain model    Transductive Transfer Learning $p_S(x,y)\neq p_T(x,y)$，假设源领域有大量标记数据，目标领域有无标记数据</description>
    </item>
    
    <item>
      <title>8-特征值计算</title>
      <link>https://zhengzangw.com/notes/numerical-analysis/8-%E7%89%B9%E5%BE%81%E5%80%BC%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/numerical-analysis/8-%E7%89%B9%E5%BE%81%E5%80%BC%E8%AE%A1%E7%AE%97/</guid>
      <description>特征值与特征向量  特征值：求代数方程 $\varphi(\lambda)=|\lambda I-A|= 0$ 的根 特征向量：求代数方程 $(\lambda I-A)x=0$ 的非零解 若 $\lambda_i$ 是矩阵 $A$ 的特征值，则  $\sum_{i=1}^n\lambda_i=\text{tr} A$ $|A|=\prod \lambda_i$   $A$ 与 $B$ 互为相似矩阵 $\exists T,|T|\neq 0,B=T^{-1}AT$ 则  $A$ 与 $B$ 有相同的特征值 $x$ 是 $B$ 的一个特征向量，则 $Tx$ 是 $A$ 的特征向量   Gerschgorin&amp;rsquo;s 定理：$A$ 的每个特征值必属于以下某个圆盘之内 $|\lambda -a_{ii}|\leq \sum_{j=1,j\neq i}^n|a_{ij}|,i=1,\cdots,n$  特征向量第 $i$ 个分量最大，则属于第 $i$ 个圆盘   $A$ 为对称矩阵，$R(x)=\frac{(Ax,x)}{(x,x)}$ 为对应向量 $x$ 的 Rayleigh 商 (特征值次序 $\lambda_1\geq \cdots \lambda_n$)  $\lambda_n\leq\frac{(Ax,x)}{(x,x)}\leq\lambda_1$ $\exists x\in\mathbb{R}^n,x\neq 0$ 使等号成立    幂法  主特征值：最大特征值和相应特征向量 $v_{k+1}=Av_k$  $v_0=\sum_{i}a_ix_i$ $v_k=Av_{k-1}=\lambda_1^k(a_1x_1+\epsilon_k)$ $\epsilon_k=\sum_{i=2}^na_1(\frac{\lambda_i}{\lambda_1})^kx_i$ $\lim_{k\rightarrow\infty}\frac{(v_{k+1})_i}{(v_k)_i}=\lambda_1$   规范化：$u=\frac{v}{\max(v)},\max(v)$ 为绝对值最大的分量  $v_k=Au_{k-1}=\frac{A^kv_0}{\max(A^{k-1}v_0)}$ $u_k=\frac{v_k}{\max(v_k)}=\frac{A^kv_0}{\max(A^kv_0)}$ $\max(v_k)\rightarrow\lambda_1$ 收敛比率：$r=\frac{\lambda_2}{\lambda_1}$   加速方法  原点平移法：$B=A-pI,B$ 特征值为 $\lambda_i-p$ 且特征相同，$|\frac{\lambda_2-p}{\lambda_1-p}|&amp;lt; |\frac{\lambda_2}{\lambda_1}|$ 特征值为实数时：$p=\frac{\lambda_1+\lambda_{n-1}}{2}$ Rayleigh 商加速法：$\frac{(Au_k,u_k)}{(u_k,u_k)}=\lambda_1+O((\frac{\lambda_2}{\lambda_1})^{2k})$   反幂法：$A^{-1}$ 应用幂法，得主特征 $\frac{1}{\lambda_n}$  Householder 方法   $A\in\mathbb{R}^{n\times n},\exists$ 正交阵 $R$，对角块为一阶或二阶矩阵，每个一阶对角块为 $A$ 的实特征值，二阶对角块的两个特征值是 $A$ 的一对共轭复特征值</description>
    </item>
    
    <item>
      <title>机器无关优化</title>
      <link>https://zhengzangw.com/notes/compiler/8-%E6%9C%BA%E5%99%A8%E6%97%A0%E5%85%B3%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/compiler/8-%E6%9C%BA%E5%99%A8%E6%97%A0%E5%85%B3%E4%BC%98%E5%8C%96/</guid>
      <description>优化  公共子表达式消除 复制传播 死代码消除 常量折叠  数据流分析 </description>
    </item>
    
    <item>
      <title>8. Network</title>
      <link>https://zhengzangw.com/notes/command-line/8-network/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/8-network/</guid>
      <description>Download curl wget </description>
    </item>
    
    <item>
      <title>8-博弈论</title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/8-game-theory/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/8-game-theory/</guid>
      <description>博弈论 策略  囚徒困境 布雷斯悖论（Braess&amp;rsquo;s paradox） 最优策略  帕里托优(Pareto Efficiency)  不存在另一个方案 $x&#39;$, $\exists t,\text{UTILITY}{x&#39;}(t)&amp;gt;\text{UTILITY}{x}(t),\forall t,\text{UTILITY}{x&#39;}(t)\geq\text{UTILITY}{x}(t)$   社会福利：和最优 Nash 均衡：没有参与者可以独自行动而增加收益  无纯策略纳什均衡解 多纳什均衡解   优超(Dominant)：不依赖其它参与者    投票  投票  $A$: Agent 集合 $O$: 投票结果集合 投票结果：$\succ_i\subseteq O\times O$ 社会偏序：$\succ^*$  对任意 $o,o&#39;\in O$ 有定义 非对称且传递 帕里托优：$\forall i,o\succ_io&#39;\Rightarrow o\succ^*o&#39;$ 投票方案对不相关的候选人是独立的 没有 Agent 可以独裁   阿罗不可能定理   投票方案：使结果帕里托优  多数投票：所有候选人同时进行比较，得票最高者获胜  不满足无关方案独立原则   二叉投票  不满足无关方案独立原则 与序相关   计分投票：排名第一的得 $|O|$ 分，排名第二的得 $|O|-1$ 分，以此类推  不满足无关方案独立原则      拍卖  拍卖方案：使拍卖者增加自己的利益  英格兰拍卖：first-price open-cry 密封拍卖：first-price sealed-bid Vickery 拍卖：second-price sealed-bid 荷兰式拍卖：减价式拍卖    谈判  谈判方案  公理谈判机制：不变性、对称性、无关性、帕里托优 策略谈判机制  物品的折扣因素: $\pi_1=\frac{1-\delta_2}{1-\delta_1\delta_2}$ 谈判的代价因素      </description>
    </item>
    
    <item>
      <title>8. Extremal Graph Theory</title>
      <link>https://zhengzangw.com/notes/combinatorics/8-extremal-graph-theory/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/8-extremal-graph-theory/</guid>
      <description>How many edges that a graph $G$ can have if $G$ has some property
Triangle-free graph contains no triangle as subgraph
 Mantel&amp;rsquo;s Theorem (1907): if $G(V,E)$ has $|V|=n$ and is triangle-free, then $|E|\leq\frac{n^2}{4}$  for $n$ is even, extremal graph: $K_{\frac{n}{2},\frac{n}{2}}$ First Proof: Induction Second Proof: $d_u+d_v\leq n$ Third Proof    Cliques-free graph  Turán&amp;rsquo;s Theorem (1941): If $G(V,E)$ has $|V|=n$ and is $K_r$-free, then $|E|\leq\frac{r-2}{2(r-1)}n^2$  First Proof: Induction Second Proof: weight shifting Third Proof: the probalilistic method Fourth Proof: Turán graph $T(n,r)=K_{n_1,\cdots,n_r},\sum_{i=1}^rn_i=n,n_i\in{\lfloor\frac{n}{r}\rfloor,\lceil\frac{n}{r}\rceil}$, $T(n,r-1)$ has no $K_r$   Turán&amp;rsquo;s Theorem (independent set): $G(V,E)$ has $|V|=n$ and $|E|=m$ then $G$ has an independent set of size $\geq\frac{n^2}{2m+n}$ Parallel Max: compute max of $n$ distinct numbers  1-round: ${n\choose 2}$ 2-round: $O(n^{\frac{4}{3}}),k=n^{\frac{2}{3}}$    Cycles-free graph  $g(G)\geq 5,|E|\leq\frac{1}{2}n\sqrt{n-1}$  Specific-substructure-free graph  $\text{ex}(n,H)=\max_{G\not\supset H,|V(G)|=n}|E(G)|$  Turan&amp;rsquo;s Theorem: $\text{ex}(n,K_r)=|T(n,r-1)|\leq\frac{r-2}{2(r-1)}n^2$ $K_s^r=K_{s,s,\cdots,s}=T(rs,r)$: complete $r$-partite graph with $s$ vertices in each part   Fundamental theorem of extremal graph theory (Erdős–Stone 1946): $\text{ex}(n,K_s^r)=(\frac{r-2}{2(r-1)}+o(1))n^2$ Corollary: For any nonempty graph $H$, $\lim_{n\rightarrow\infty}\frac{\text{ex}(n,H)}{n\choose 2}=\frac{\chi(H)-2}{\chi(H)-1}$  extremal density of subgraph $H$: $\frac{\text{ex}(n,H)}{n\choose 2}$    </description>
    </item>
    
    <item>
      <title>Morphology</title>
      <link>https://zhengzangw.com/notes/digital-image-process/7-morphology/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/7-morphology/</guid>
      <description>形态学基本概念  形态学(morphology)：生物学的分支，研究动植物形态和结构 数学形态学：提取表示区域形状的图像成分  数学语言：集合论   集合的反射：$\hat B={w|w=-b,\forall b\in B}$ 集合的平移：$(B)_z={c|c=b+z,\forall b\in B}$ 结构元：研究图像性质的小集合（子图像），黑点表示结构元的原点  矩形填充：背景，使可以容纳结构元   腐蚀(erosion)：$A\ominus B={z|(B)_z\subset A}={z|(B)_z\cap A^c=\emptyset}$ $B$对$A$的腐蚀  形态学滤波   膨胀(dilation)：$A\oplus B={z|(\hat B)z\cap A\neq\emptyset}=\bigcup{b\in B}(A)_b$ $(A\ominus B)^c=A^c\oplus\hat B$ $(A\oplus B)^c=A^c\ominus\hat B$ 开操作(opening)  平滑轮廓，断开窄连接，消除细突出 $A\circ B=(A\ominus B)\oplus B=\cup{(B)_z\subseteq A}$   闭操作(closing)  平滑轮廓，熔合窄间断，消除缝隙和孔洞 $A\cdot B=(A\oplus B)\ominus B={z|(B)_z\cap A\neq\emptyset}$   hit-or-miss 变换：检测图像中的形状  $A\star B=(A\ominus D)\cap[A^c\ominus(W-D)]$ $B$ 为集合$D$及其背景    形态学基本算法 提取图像成分，预处理与后处理</description>
    </item>
    
    <item>
      <title>8-Cryptography</title>
      <link>https://zhengzangw.com/notes/problem-solving/8-cryptography-and-coding/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/8-cryptography-and-coding/</guid>
      <description>概论  密码系统：$(\mathcal{K}, \mathcal{M}, \mathcal{C})$  $\mathcal{K}$ 所有可能秘钥组成的集合 $\mathcal{M}$ 所有可能明文组成的集合 $\mathcal{C}$ 所有可能密文组成的集合   密码：$(E,D)$  $E$: 加密算法 $\mathcal{M}\times\mathcal{K}\rightarrow\mathcal{C}$ $D$: 解密算法 $\mathcal{D}\times\mathcal{K}\rightarrow\mathcal{M}$   一致性原则：$\forall m\in M,k\in K,D(k,E(k,m))=m$  通常 $E$ 是一个随机化算法 $D$ 一定是一个确定化算法    OTP (One Time Pad)  $K={0,1}^n$ $M={0,1}^n$ $C={0,1}^n=\mathcal{M}$ $E(m,k)=k\oplus m$ $D(c,k)=k\oplus c$  PRG 伪随机数生成器  高效，确定，不可预测  流密码 A stream cipher is a symmetric key cipher where plaintext digits are combined with a pseudorandom cipher digit stream (keystream).</description>
    </item>
    
    <item>
      <title>8-数据交换</title>
      <link>https://zhengzangw.com/notes/database/8-%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/8-%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2/</guid>
      <description>初级阶段：交换方式（命令执行方式） 中级阶段：嵌入式方式，自含方式（可编程SQL），调用层方式 近期方式：Web方式  数据交换的管理  会话管理  数据客体模式设定（网络环境，目录层，模式层） 语言模式设定（字符集） 时间模式设定（时区） 标识符设定   连接管理  连接语句 connect to &amp;lt;连接目标&amp;gt; 断开连接 disconnect &amp;lt;断开对象&amp;gt;   游标管理  --declare EXEC SQL DECLARE agent_dollars CURSOR FOR select aid, sum(dollars) from orders where cid = :cust_id --:cust_id is stored in host variable  group by aid FOR READ ONLY; --open exec sql open agent_dollars --fetch exec sql whenever not found goto finish; while (TRUE){ exec sql fetch agent_dollars into :agent_id, :dollar_sum; printf(&amp;#34;%s %11.</description>
    </item>
    
    <item>
      <title>Dimension Reduction</title>
      <link>https://zhengzangw.com/notes/machine-learning/8-reduction/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/8-reduction/</guid>
      <description>线性降维  维数灾难 curse of dimensionality  高维空间样本稀疏 计算内积难    MDS Multiple Dimensional Scaling, 多维放缩
 样本间距离在低维空间保持 算法  由距离矩阵 $D$ 求内积矩阵：$b_{ij}=-\frac{1}{2}(D_{ij}^2-D_{i*}^2-D_{*j}^2+D_{**}^2)$ 特征值分解：$B=V\Lambda V^T$，非零特征值构成 $\Lambda_=diag{\lambda_1,\lambda_2,\cdots,\lambda_{d^}}$ 坐标 $Z=\Lambda_^{\frac{1}{2}}V_^T$，可取前 $d&#39;$ 个最大特征值    PCA (Principal Component Analysis)  最近重构性：样本点到这个超平面距离足够近 最大可分性：样本点在这个超平面上的投影尽可能的分开  $$ \begin{aligned} \max &amp;amp;\ \text{tr}(W^TXX^TW)\newline s.t &amp;amp;\ W^TW=1 \end{aligned} $$
 算法  中心化 计算协方差矩阵 $XX^T$ 并特征值分解 取最大 $d&#39;$ 个特征向量为投影矩阵   PCA: 最佳描述特征 LDA: 最佳分类特征  非线性降维 核化线性降维  KPCA KLDA  流形学习 Isomap  只考虑局部距离 算法  最短路径算法求出任意两点距离 代入 MDS    LLE(Locally Linear Embedding 局部线性嵌入)   只考虑邻域内样本间的线性关系，在低维空间重构权值</description>
    </item>
    
    <item>
      <title>8-假设检验</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/8-%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/8-%E5%81%87%E8%AE%BE%E6%A3%80%E9%AA%8C/</guid>
      <description>假设检验  原假设/null hypothesis $H_0$  备择假设/alternate hypothesis $H_1$ 单边假设/双边假设 简单假设/复合假设 参数检验假设/非参数假设检验   假设检验的错误  第一类错误（弃真错误）  P(拒绝 $H_0$|$H_0$)=$\alpha$ 显著性水平 $\alpha$   第二类错误（存伪错误）  P(接受 $H_0$|$H_1$)=$\beta$   Neyman-Pearson 原则  在控制第一类错误 $\alpha$ 的前提下，使第二类错误的概率 $\beta$ 尽量小 拒绝有充分证据 接受：目前找不到拒绝 $H_0$ 的理由，先接受 $H_0     参数假设检验  参数处理的假设检验问题  $H_0$ and $H_1$ $\alpha$ and $n$ 确定检验统计量 $U$ 和临界值、接受域、拒绝域 计算统计量的观察值，判断是接受还是拒绝 $H_0$   正态总体均值的假设检验  $\sigma^2$ 已知 （$u$ 检验）  $U=\frac{\overline{X}-\mu_0}{\sigma/\sqrt{n}}$ 双边拒绝域：$W={|U|\geq u_{\alpha/2}}$   $\sigma^2$ 未知但相等 （$t$ 检验）  $T=\frac{\overline{X}-\mu_0}{S/\sqrt{n}}$ 双边拒绝域：$W={|T|\geq t_{\alpha/2}(n-1)}$ 成对数据：成对$t$检验     两个正态总体的均值差  $\sigma_1^2,\sigma_2^2$ 已知：$U=\frac{\overline{X}-\overline{Y}}{\sqrt{\frac{\sigma_1^2}{n_1}+\frac{\sigma_2^2}{n_2}}}$  双边拒绝域 $W={|U|\geq u_{\alpha/2}}$   $\sigma_1^2,\sigma_2^2$ 未知：$T=\sqrt{\frac{n_1n_2(n_1+n_2-2)}{n_1+n_2}}\frac{(\overline{X}-\overline{Y})}{(n_1-1)S_1^2+(n_2-1)S_2^2}$   方差的假设检验 ($\chi^2$ 检验法)  $\chi^2=\frac{(n-1)S^2}{\sigma_0^2}$ 双边拒绝域 $W={\chi^2\leq \chi^2_{1-\alpha/2}(n-1)}\cup{\chi^2\geq\chi_{\alpha/2}^2(n-1)}$   方差比 $\sigma_1^2/\sigma_2^2$  $F=\frac{S_1^2}{S_2^2}$ 双边拒绝域 $W={F\leq F_{1-\alpha/2}(n_1-1,n_2-1)}\cup{F\geq F_{\alpha/2}(n_1-1,n_2-1)}$     分布拟合优度检验  假设 $H_0:F(x)=F_0(x;\theta)$ 皮尔逊$\chi^2$拟合优度检验  将样本空间分为 $k$ 个互不相交的事件 $A_1,A_2,\cdots,A_k$ 计算 $A_i$ 上的理论频数：若 $\theta$ 未知，可利用极大似然估计，$\hat p_i=P(X\in A_i|\theta=\hat\theta)$ 计算实际频率 $n_i$ 计算两者偏差方之和 $\chi^2=\sum_{i=1}^k\frac{(n_i-n\hat p_i)^2}{n\hat p_i}$ 由 Pearson-Fisher 定理，拒绝域：$W={\chi^2\geq \chi^2_{\alpha}(k-r-1)}$  大样本，$n\geq 50, n\hat p_i&amp;gt;5$       独立性检验  假设 $H_0:X\perp Y$ 列联表：$r\times s$ 列联表  独立性检验：$H_0:p_{ij}=p_i*p_j$ 极大似然估计：$\hat p_{i*}=\frac{n_{i*}}{n},\hat p_{*j}=\frac{n_{*j}}{n}$ $\chi^2=\sum_{i=1}^r\sum_{j=1}^s\frac{n_{ij}-n_{i*}n_{j}/n}{n_{i}n_{*j}/n}$      </description>
    </item>
    
    <item>
      <title>交换</title>
      <link>https://zhengzangw.com/notes/data-communication/8-%E4%BA%A4%E6%8D%A2/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/8-%E4%BA%A4%E6%8D%A2/</guid>
      <description>名词 解释     站点(station) 需要通信的终端设备   结点(node) 提供通信功能的交换设备   通信网络 结点集合   QoS quality of Service     分组交换：Best Effort  Paket Drop Congestion delay 方差高 解决方法：多发选收    电路交换  两个站点间有一条专用的通信通路  电路建立  通路中的每一对结点必须为该信道保留容量 网络连接透明   数据传输 电路断连    应用  公共电话网 PSTN 专用小交换机 PBX 专线网路  电路交换结点  数字交换机  空分交换 时分交换   网络接口 控制单元  建立连接 维护连接 拆除连接    空分交换 信号通路之间在物理上被空间分隔的交换机</description>
    </item>
    
    <item>
      <title>Qt</title>
      <link>https://zhengzangw.com/notes/advanced-programming/8-qt/</link>
      <pubDate>Wed, 13 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/8-qt/</guid>
      <description>&lt;h2 id=&#34;桌面应用开发框架&#34;&gt;桌面应用开发框架&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows
&lt;ul&gt;
&lt;li&gt;C++: Qt, MFC, WTL, wxWidgets, DirectUI, Htmlayout&lt;/li&gt;
&lt;li&gt;C#: WinForm, WPF&lt;/li&gt;
&lt;li&gt;Java: AWT, Swing&lt;/li&gt;
&lt;li&gt;Python: Tkinter, wxpython, PyQt, PythonWin&lt;/li&gt;
&lt;li&gt;Pascal: Delphi&lt;/li&gt;
&lt;li&gt;aardio&lt;/li&gt;
&lt;li&gt;Visual Basic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux
&lt;ul&gt;
&lt;li&gt;C++: Qt, GTK+, wxWidgets&lt;/li&gt;
&lt;li&gt;Java: AWT, Swing&lt;/li&gt;
&lt;li&gt;Python: Tkinter, wxpython, PyQt, PyGTK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mac
&lt;ul&gt;
&lt;li&gt;Objective-C: Cocoa&lt;/li&gt;
&lt;li&gt;swift: Cocoa&lt;/li&gt;
&lt;li&gt;C++: Qt&lt;/li&gt;
&lt;li&gt;Python: Tkinter, wxpython, PyQt&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基于 Web 技术桌面开发
&lt;ul&gt;
&lt;li&gt;浏览器内核（渲染引擎）
&lt;ul&gt;
&lt;li&gt;Trident: IE&lt;/li&gt;
&lt;li&gt;Gecko: Firefox&lt;/li&gt;
&lt;li&gt;WebKit: Safari&lt;/li&gt;
&lt;li&gt;Chromium: 基于 WebKit, Chrome&lt;/li&gt;
&lt;li&gt;Blink: WebKit 精简版&lt;/li&gt;
&lt;li&gt;Presto: Opera (已放弃，转为Webkit)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;JS引擎
&lt;ul&gt;
&lt;li&gt;Mozilla: SpiderMonkey, TraceMonkey, JagerMonkey&lt;/li&gt;
&lt;li&gt;Google: V8 (nodejs 基于 V8)&lt;/li&gt;
&lt;li&gt;Microsoft: Chakra, JScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NW.js (node-webkit): 基于 Chromium, node.js, 通过 HTML 和 JavaScript 编写应用程序&lt;/li&gt;
&lt;li&gt;heX&lt;/li&gt;
&lt;li&gt;Electron&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;macdeployqt-错误&#34;&gt;macdeployqt 错误&lt;/h2&gt;
&lt;p&gt;ERROR: Unexpected prefix &amp;ldquo;@loader_path&amp;rdquo;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>8. Multimedia</title>
      <link>https://zhengzangw.com/notes/conputer-network/8-multimedia/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/8-multimedia/</guid>
      <description>流式存储视频  UDP 流 HTTP 流  预取视频 客户端应用缓存和TCP缓存   DASH  IP 语音  消除延时抖动：播放时延 从丢包恢复  前向纠错 交织 差错掩盖    通信量管理  丢弃的选择  公平性 服务质量 预留   通信量整形(traffic shaping)  通过减轻分组的堆集，使流量平滑 关注离开交换机的通信量   通信量管制(traffic policing)  判断传入分组是否符合服务质量规约 关注进入交换机的通信量    权标桶  权标补充速率 $R$: 可连续支持的数据率 桶大小 $B$：短时间内允许数据率超过 $R$ 的量 任意时间段 $T$ 内，发送的数量不能超过 $RT+B$ 权标生成器以 $R$ bps 向桶中补充权标，到达的分组消耗一定数量的权标进行传输  漏桶  计数器 $X$: 泄露速率为 1 的漏桶 每当有一个分组到达，计数器上升 $I$ 使计数器超过最大值的分组违规  多媒体网络  尽可能服务 区分服务 每连接服务质量(QoS)保证  Y.</description>
    </item>
    
    <item>
      <title>8-软件维护和演化</title>
      <link>https://zhengzangw.com/notes/software-enginerring/8-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E5%92%8C%E6%BC%94%E5%8C%96/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/8-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E5%92%8C%E6%BC%94%E5%8C%96/</guid>
      <description>软件支持  产品缺陷性支持与非缺陷性支持 支持成本  商用软件：服务收费 开源软件：Stackoverflow, github   外层：客服  咨询电话 在线提交问题   技术问题  交付及安装补丁集    软件维护  软件维护原则  不损害程序的质量 保持程序风格的一致性和功能的完整性 应有利于将来程序的改变 对用户没有不利的影响   基于缺陷的软件维护  缺陷定位/调试：程序频谱 缺陷修复：自动修复技术 回归测试 集成    软件演化  变更控制  发起变更请求 批准变更请求 执行变更请求 跟踪和关闭变更请求   程序理解 二次开发 集成  Devops   DevOps: 版本研发 + 交付上线
 版本研发：持续交付 流程：敏捷开发    开发过程
 集成 Integration：编译、测试、打包 部署 Deployment：应用组件或基本设施的代码或配置变更在产品环境生效称为“部署” 发布 Release：具有业务影响的功能变化对最终用户可见 交付 Delivery：从 Deployment 到 Release 之间的阶段，更多的强调的是一种能力    三个阶段</description>
    </item>
    
    <item>
      <title>Chapter 8</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/chapter8/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/chapter8/</guid>
      <description>I/O子系统  runtime system(runtime environment/runtime) I/O子系统  用户空间I/O软件（用户I/O软件）  I/O请求 运行时系统   内核空间I/O软件（系统I/O软件）  与设备无关的I/O软件 设备驱动程序 中断服务程序   I/O硬件  I/O总线结构 I/O接口（设备管理器，I/O端口） I/O设备     用户程序中I/O函数  C标准I/O库函数  文件I/O函数 控制台I/O函数 缓冲  _IOFBF: fully buffered _IOLBF: line buffered _IO_NBF: no buffering     系统调用封装函数  头文件unistd.h int creat(char *name, mode_t perms);  perms:访问权限：文件拥有者+拥有者所在组成员+其它用户的读、写、执行权限   int open(char *name, int flags, mode_t perms);  perms = 0: 非创建方式 flags: 定义在 fcntl.</description>
    </item>
    
    <item>
      <title>9. Extremal set theory</title>
      <link>https://zhengzangw.com/notes/combinatorics/9-extremal-set-theory/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/9-extremal-set-theory/</guid>
      <description>How large or how small a collection of finite objects can be, if it has to satisfy certain restrictions
Sunflower  set system $\mathcal{F}\subset 2^{[n]}$ with ground set $[n]$ a sunflower of size $r$ with center $C$  $|\mathcal{F}|=r$ $\forall S,T\in\mathcal{F},S\cap T=C$   Sunflower Lemma (Erdős-Rado 1960)  $\mathcal{F}\subset{[n]\choose k},|\mathcal{F}|&amp;gt;k!(r-1)^k\Rightarrow\exists$ a sunflower $\mathcal{G}\subset\mathcal{F}$ such that $|\mathcal{G}|=r$   Sunflower Conjecture: $|\mathcal{F}|&amp;gt;c(r)^k$  Mutually Intersecting  Erdős-Ko-Rado Theorem: $\mathcal{F}\subset{[n]\choose k},n\geq 2k,\forall S,T\in\mathcal{F},S\cap T\neq\emptyset\Rightarrow|\mathcal{F}|\leq{n-1\choose k-1}$  Katona&amp;rsquo;s proof: double counting Erdős&#39; proof: shifting   Shifting(Compression)  Define a shift operator  perserve desired property original problem is easy on shifted elements   e.</description>
    </item>
    
    <item>
      <title>概率不等式与鞅论</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/9-%E6%A6%82%E7%8E%87%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%B8%8E%E9%9E%85%E8%AE%BA/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/9-%E6%A6%82%E7%8E%87%E4%B8%8D%E7%AD%89%E5%BC%8F%E4%B8%8E%E9%9E%85%E8%AE%BA/</guid>
      <description>Basic Tail inequality Markov&amp;rsquo;s Inequality
$$P(X\geq t)\leq\frac{E(x)}{t}$$
Chebyshev&amp;rsquo;s Inequality
$$P(|X-E(X)|\geq t)\leq\frac{V(X)}{t^2}$$
Moment Generating Functions Moment-generating function of a random variable $X$:
$$M_X(t)=E[e^{tX}]=\sum_{k=0}^\infty\frac{t^k}{k!}E(X^k)=\int_{-\infty}^{\infty}e^{tx}f(x)dx,t\in\mathbb{R}$$
Some Moment-generating function
   $t\sim$ $M_X(t)$     Bernoulli $p$ $1-p+pe^t$   Geometric $p$ $\frac{pe^t}{1-(1-p)e^t}$   Binomial $B(n,p)$ $(1-p+pe^t)^n$   Poisson $P(\lambda)$ $e^{\lambda(e^t-1)}$   Normal $N(\mu,\sigma^2)$ $e^{t\mu+\frac{1}{2}\sigma^2t^2}$    Chernoff Bound Generic Chernoff Bound:
$$P(X\geq t)=P(e^{\lambda X}\geq e^{\lambda t})\leq\frac{E[e^{\lambda X}]}{e^{\lambda t}}\newline P(X\leq t)=P(e^{-\lambda X}\geq e^{-\lambda t})\leq\frac{E[e^{-\lambda X}]}{e^{-\lambda t}}$$</description>
    </item>
    
    <item>
      <title>Pattern Recognition</title>
      <link>https://zhengzangw.com/notes/digital-image-process/8-recognition/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/digital-image-process/8-recognition/</guid>
      <description>基本概念  模式识别  feature: 描述符 pattern: 描述符的排列 pattern class：具有共同属性的模式 $\omega_1,\omega_2,\cdots,\omega_W$   常见的模式排列  vector string: 结构描述 tree: 结构描述   决策论方法  $x\in\omega_i$: $d_i(x)&amp;gt;d_j(x),\forall j\neq i$ 决策边界：$d_ij(x)=d_i-d_j(x)=0$    匹配 每个类表示为原型模式向量，一个模式被分配给最近的类
 最小距离分类器  $m_j=\frac{1}{N_j}\sum_{x_j\in\omega_j}x_j$ $D_j(x)=|x-m_j|$ 等价计算：$d_j(x)=x^Tm-\frac{1}{2}m_j^Tm_j$   基于相关的匹配  相关定理：$f(x,y)\star w(x,y)\iff F^*(u,v)W(u,v)$ 归一化相关系数：$\gamma(x,y)=\frac{\sum_s\sum_t[w(s,t)-\overline{w}][f(x+s,y+t)-\overline{f}{xy}]}{{\sum_s\sum_t[w(s,t)-\overline{w}]^2\sum_s\sum_t[f(x+s,y+t)-\overline{f}{xy}]^2}^{\frac{1}{2}}}$    最佳统计分类器  条件平均风险：$r_j(x)=\sum_{k=1}^WL_{kj}p(w_k|x)$ 0-1损失：$L_{ij}=1-\delta_{ij}$ 0-1损失下决策函数：$d_j(x)=p(x|w_j)P(w_j)$ 0-1损失贝叶斯分类器：$\arg\max_i p(x|\omega_i)P(\omega_i)$ 假设 $p(x|\omega_i)$ 为高斯函数  $p(x|\omega_j)=\frac{1}{(2\pi)^{n/2}|C_j|^{1/2}}e^{-1/2(x-m_j)^TC_j^{-1}(x-m_j)}$ 估计参数  $m_j=\frac{1}{N_j}\sum_{x\in\omega_j}x$ $C_j=\frac{1}{N_j}\sum_{x\in\omega_j}xx^T-m_jm_j^T$   决策函数：$d_j(x)=\ln O(\omega_j)-\frac{1}{2}\ln|C_j|-\frac{1}{2}[(x-m_j)^TC_j^{-1}(x-m_j)]$    神经网络 </description>
    </item>
    
    <item>
      <title>9-数据库设计</title>
      <link>https://zhengzangw.com/notes/database/9-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 26 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/database/9-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1/</guid>
      <description>数据库设计概述  数据库设计：根据用户需求(数据需求，处理需求)和平台约束(硬件，操作系统和DBMS)设计数据模式 数据库设计的生命周期  需求分析（需求分析说明书） 概念设计（概念数据模型） 逻辑设计（逻辑数据模型） 物理设计（数据库内模式） 编码测试运行，迭代    需求分析  Things Attributes of Things Relationship among Things  概念设计  工具：E-R模型，EE-R模型，面向对象模型 设计过程  用户分解：将用户分为功能相对独立的若干组 视图设计：针对每个用户设计其数据视图 视图集成  等同：多个数据对象具有相同语义 聚合：数据对象间的一种组成关系 抽取：不同实体中的相同属性提取成一个新的实体，并构成具有继承关系的结构   视图修改  命名冲突 概念冲突 域冲突 约束冲突      逻辑设计 将 EE-R 转换为 DBMS 支持的逻辑数据模型（转换为关系数据库模式）
 命名与属性域的处理  在同一个数据库模式中，关系名具有唯一性 在同一个关系模式中，属性名具有唯一性 根据DBMS的选型进行必要的数据类型转换   非原子属性处理  集合属性：原有关系的一个元组将被纵向展开成多个元组 元组属性：将一个元组属性横向展开成多个属性   联系的特殊转换  一个联系可以被转换成一个关系 联系也可被归并到相关联的实体所对应的关系模式中去 根据 1:1,1:n,m:n 转换为 1/2/3 个关系   继承的转换  每个实体集都转换为一个关系 只有最底层的叶子结点才会被转换为关系，并从其所有超实体集中继承属性 被转换为单个关系，其中含有所有实体集中的属性。   规范化：至少满足 3NF RDBMS 性能调整  逆规范化：减少连接运算次数 关系的分割  水平分割：将一个关系的元组集合划分为若干个不相交的子集，每个子集对应一个子关系模式 将一个关系模式纵向分解成若干个子关系模式   尽量使用快照   约束条件设置  物理设计  存储方式的设计  索引  在主关键字和外关键字上建立索引 以读为主的关系应尽可能多地建立索引   集簇  将有关的数据元组集中存放于一个或相邻的物理块内或同一柱面内以提高查询效率   HASH   存储结构的设计  分区设计：数据存放位置的设计  减少访盘冲突，提高 I/O 并行性 分散热点数据，均衡 I/O 负担   系统参数配置    </description>
    </item>
    
    <item>
      <title>Distance Learning</title>
      <link>https://zhengzangw.com/notes/machine-learning/9-distance/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/9-distance/</guid>
      <description>距离  正定性 对称性 三角不等式  有序距离  闵可夫斯基距离：$l=(\sum_{i=1}^n|x_i-y_i|^p)^{\frac{1}{p}}$  切比雪夫距离：$l_\infty=\max_{i=1}^n|x_i-y_i|$ 欧几里得距离：$l_2=\sqrt{\sum_{i=1}^n(x_i-y_i)^2}$ 曼哈顿距离：$l_1=\sum_{i=1}^n|x_i-y_i|$ 加权闵可夫斯基距离：$l=(\sum_{i=1}^nw_i|x_i-y_i|^p)^{\frac{1}{p}}$   马氏距离：$d(\vec x,\vec y)=\sqrt{(\vec x-\vec y)^TS^{-1}(\vec x-\vec y)}$  $S$: 协方差矩阵 $dist^2_{mah}(x_i,x_j)=(x_i-x_j)^TM(x_i-x_j)=||x_i-x_j||^2_M$，度量矩阵 $M$ 为半正定矩阵 $M=PP^T$  $\Vert x_i-x_j\Vert_M=\Vert P^Tx_i-P^Tx_j\Vert$     余弦距离：$d(x,y)=\frac{&amp;lt;x,y&amp;gt;}{|x||y|}$  离散距离 簇  VDM(Value Difference Metric)  $m_{u,a}$: 在属性 $u$ 上取值为 $a$ 的样本数 $m_{u,a,i}$: 第$i$个样本簇在属性为 $a$ 的样本数 $\text{VDM}p(a,b)=\sum{i=1}^k|\frac{m_{u,a,i}}{m_{u,a}}-\frac{m_{u,b,i}}{m_{u,b}}|$   $\text{MinkovDM}p=(\sum|x{iu}-x_{ju}|^p+\sum\text{VDM}p(x{iu},x_{ju}))^{\frac{1}{p}}$  字符串  海明距离 Lee 距离 Levenshtein (编辑距离)  $$ \text{lev}{a,b}=\begin{cases} \max(i,j); \min(i,j)=0\newline \min(\text{lev}{a,b}(i-1,j)+1,\text{lev}{a,b}(i,j-1)+1,\text{lev}{a,b}(i-1,j-1)+[a_i\not=b_i]) \end{cases} $$</description>
    </item>
    
    <item>
      <title>9. Debugging</title>
      <link>https://zhengzangw.com/notes/command-line/9-debugging/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/9-debugging/</guid>
      <description>System stress -c # brew install stress # Log ls /var/log # Log file cat /var/log/system.log | lnav # brew install lnav log show # macos log show --last 1m logger &amp;#34;Hello Logs&amp;#34; # 查询系统调用 sudo strace ls -l &amp;gt; /dev/null # dtrace for macos # static analysis writegood notes.md # brew install write-good # time time curl https://google.com # perf sudo perf stat stress -c 1 sudo perf record stress -c 1 sudo perf report # computer status top htop du # disk usage ncdu lsof # list open files # benchmark hyperfine --warmup 3 &amp;#39;fd -e jpg&amp;#39; &amp;#39;find .</description>
    </item>
    
    <item>
      <title>蜂窝无线网络</title>
      <link>https://zhengzangw.com/notes/data-communication/9-%E8%9C%82%E7%AA%9D%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/9-%E8%9C%82%E7%AA%9D%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C/</guid>
      <description>蜂窝(cell)  Area divided into cells  约 6.5km - 13km 每个蜂窝有自己的天线  低功率发送器：~100W   每个蜂窝分配一个频带  相邻蜂窝指派频率不同以防止干扰   每个蜂窝分配一个基站提供服务  传输功率控制：既可以使通信使用给定的频率，又要限制该功率逃逸到邻近蜂窝     六边形  Distance from center to vertex equals to length $d=\sqrt{3}R$ $R$ 为其外接圆半径   频率重用  频率总数为 $K$（通常指派10-50个频率）  每个蜂窝有$\frac{K}{N}$个频率   重用系数 $N$：重复模式中的蜂窝数  六边形中，$N=I^2+J^2+IJ,I,J\in\mathbb{N}$   $D$: 使用相同频率的蜂窝（即同波道）中心间最小距离  $\frac{D}{d}=\sqrt{N}$     增大容量  添加新信道 频率借用 蜂窝分裂  最小一般 1.</description>
    </item>
    
    <item>
      <title>9. SDN</title>
      <link>https://zhengzangw.com/notes/conputer-network/9-sdn/</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/9-sdn/</guid>
      <description>通用转发  基于目的地转发的特征：匹配 + 动作 分组交换机（同时负责第三和第二层）  匹配动作表：远程控制器计算，安装和更新（位于控制平面） 基于匹配动作表更新：数据平面    SDN (Software Defined Network) 利用定义成熟的 API 将网络设备的数据与控制功能分离，集中管理，可编程化 可编程交换机: Google B4 20%-&amp;gt;80%
 需求  服务器虚拟化应用越来越广泛 流量要求灵活 企业员工越来越多使用移动设备访问，应对资源、QoS和安全性要求       SDN 体系结构 功能     应用平面 云端管理，业务应用，SDN应用   控制平面 流量工程，路由选择，移动性   数据平面 路由器，分组交换机等网络设备     SDN 域  SDNi 协议   Networking Operating System  OC-Y SONiC (Software for Open Networking in the Cloud) (Microsoft)    OpenFlow (ONF) 在MAC层仅支持以太网，在上层支持各种协议和网络服务</description>
    </item>
    
    <item>
      <title>9-实际开发流程案例</title>
      <link>https://zhengzangw.com/notes/software-enginerring/9-%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/software-enginerring/9-%E5%AE%9E%E9%99%85%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B%E6%A1%88%E4%BE%8B/</guid>
      <description>开发流程人员安排  产品总监：确定产品方向（问题定义）  BRD MRD 竞品分析文档 产品体验报告 评审：会议纪要   产品经理：可行性研究+需求获取  产品原型 PRD 需求分析报告 需求规格说明书   UI 设计师：界面设计、需求设计、研发设计  界面效果图、UI设计规范   研发工程师：概要设计、详细设计、软件设计说明书 研发项目经理：项目研发周报 测试工程师：项目测试周报，测试结果报告，系统使用说明书 系统上线  </description>
    </item>
    
    <item>
      <title>REVIEW</title>
      <link>https://zhengzangw.com/notes/conputer-network/review/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/conputer-network/review/</guid>
      <description>访问 Web 页面的过程 电缆 -&amp;gt; 以太网交换机 -&amp;gt; 路由器(提供 DHCP, NAT) -&amp;gt; ISP(提供 DNS)
 获取IP: [DHCP|UDP|IP(255.255.255.255)|以太网(FF:FF:FF:FF:FF:FF)] -&amp;gt; 交换机 -&amp;gt; 路由器 分配 CIDR块 68.85.2.0/24（同时获得默认网关 IP 地址） HTTP -&amp;gt; DNS -&amp;gt; ARP: IP=网关地址 HTTP -&amp;gt; DNS: 网关 -&amp;gt; ISP DNS 查询 HTTP: [HTTP|TCP|IP(DNS结果)|以太网(网关MAC地址)]  知识提纲  接入网络  网络边缘 接入方法 ISP 组织方式   运输层：提供逻辑链路  多路复用与多路分解 完整性检验 可靠数据传输 拥塞控制   网络层  尽力而为服务 分片与重组 路由服务   链路层  成帧 链路接入 差错检验与纠正    算法  TCP 拥塞传输算法 DV 路由选择 LS 路由选择 CSMA/CD 随机接入 CSMA/CA 随机接入  </description>
    </item>
    
    <item>
      <title>Simple Proof of Security of the BB84 Quantum Key Distribution</title>
      <link>https://zhengzangw.com/notes/quantum-computation/%E8%AF%BE%E7%A8%8B%E8%AE%BA%E6%96%87/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/%E8%AF%BE%E7%A8%8B%E8%AE%BA%E6%96%87/</guid>
      <description>Classical linear codes CSS codes Modified Lo-Chau </description>
    </item>
    
    <item>
      <title>10. Git</title>
      <link>https://zhengzangw.com/notes/command-line/10-git/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/10-git/</guid>
      <description>&lt;h2 id=&#34;规范化-commit&#34;&gt;规范化 Commit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;commitizen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cz-conventional-changelog&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```bash
echo &amp;quot;{\&amp;quot;path\&amp;quot;: \&amp;quot;cz-conventional-changelog\&amp;quot;}&amp;quot; &amp;gt; .czrc
```
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;conventional-changelog-cli&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;conventional-changelog&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```bash
conventional-changelog -p angular -i CHANGELOG.md -s -r 0 # 重新生成
conventional-changelog -p angular -i CHANGELOG.md -s # 叠加生成
```
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;standard-version&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```bash
standard-version
```
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;github&#34;&gt;Github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;hub&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;commit-message&#34;&gt;commit message&lt;/h2&gt;
&lt;p&gt;Angular Git Commit Guidelines&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;commitizen&#34;&gt;commitizen&lt;/h3&gt;
&lt;p&gt;使用 commitizen 规范信息，需要 nodejs&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;using namespace std;

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
string s;

vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; d[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;];
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; nex[&lt;span style=&#34;color:#ae81ff&#34;&gt;100005&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {};
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; dp[&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {};

&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prepare&lt;/span&gt;() {
  memset(dp, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(dp));
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;c) {
    nex[n][c] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nex[n &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][c] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n;
  }
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;i) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;c) {
      nex[i][c] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nex[i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][c];
    }
    nex[i][s[i] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yarn global add commitizen
npm init --yes
ln -s /Users/username/node_modules ./node_modules
commitizen init cz-conventional-changelog --save --save-exact
git cz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>10. Ramsey&#39;s Theory</title>
      <link>https://zhengzangw.com/notes/combinatorics/10-ramsey-theory/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/10-ramsey-theory/</guid>
      <description>2-color Ramsey  $R(k,l)$ is the smallest integer satisfying: if $n\geq R(k,l),\forall$ 2-coloring $K_n$, there exists a red $K_k$ or a blue $K_l$ Remsey Theorem (In graph theory): $R(k,l)$ is finite  $R(k,2)=k,R(2,l)=l$   Upper Bound: $R(k,l)\leq R(k,l-1)+R(k-1,l)$  $R(k,l)\leq {k+l-2\choose k-1}$   Lower Bound: $R(k,k)\geq n=\Omega(k2^{\frac{k}{2}})$  mix-color Ramsey  $R(r;k_1,k_2,\cdots,k_r)$: if $n\geq R(r;k_1,k_2,\cdots,k_r)$ for any $r$-coloring of $K_n$, there exists a monochromatic $k_i$-clique with color $i$ for some $i\in{1,2,\cdots,r}$ $R(r;k_1,k_2,\cdots,k_r)\leq R(r-1;k_1,k_2,\cdots,k_{r-2},R(2;k_{r-1},k_r))$  hypergraph Ramsey  if $n\geq R_t(r;k_1,k_2,\cdots,k_r)$ for any $r$-coloring of ${[n]\choose t}$, there exists a monochromatic $S\subseteq [n],|S|=k_i$, ${S\choose t}$ are colored $i$  Erdos-Rado partition arrow: $n\rightarrow(k_1,k_2,\cdots,k_r)^t$   $R_{t}(r;k_{1},k_{2},\ldots ,k_{r})\leq R_{t}(r-1;k_{1},k_{2},\ldots ,k_{r-2},R_{t}(2;k_{r-1},k_{r}))$  Application  Erdos-Szekeres(1935, The Happy Ending Problem) Theorem: $\forall m\geq 3,\exists N(m)$ such that any set of $n\geq N(m)$ points in the plane, no three on a line, contains $m$ points that are the vertices of a convec $m$-gon  $N(m)=R_3(2;m,m)$   Problem: Is $x\in S,S\in{[N]\choose n},x\in[N]$  Theorem (Yao 1981): If $N\geq 2n$, on sorted table, any search Alg requires $\Omega(\log n)$ accesses in the worst-case Theorem (Yao 1981): For sufficiently large $N$, on any implicit data structure, any search Alg requires $\Omega(\log n)$ accesses in the worst-case    </description>
    </item>
    
    <item>
      <title>Balls into Bins</title>
      <link>https://zhengzangw.com/notes/probability-and-mathematical-statistics/10-balls-into-bins/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/probability-and-mathematical-statistics/10-balls-into-bins/</guid>
      <description>Balls into Bins $m$ balls into $n$ bins uniformly and independently
Birthday Problem the mapping is 1-1
 pigeonhole principle: $P=1,m&amp;gt;365$ $P(\text{one-to-one})=\prod_{k=1}^{m-1}(1-\frac{k}{n})\approx e^{-\frac{m^2}{2n}}$ $P(\text{collision})=1-P=1-\epsilon,m=\sqrt{2n\ln\frac{1}{\epsilon}}$  $P&amp;gt;0.99,m&amp;gt;57$    Coupon Collector Problem the mapping is on-to
 $X$ is the number of balls thrown uniformly and independtly to $n$ bins until no bin is empty $\mathbb{E}(X)=nH(n)=n\sum_{i=1}^n\frac{1}{i}$ $P(X\geq n\ln n+cn)&amp;lt;e^{-c},\forall c&amp;gt;0$ $\lim_{n\rightarrow\infty}P(X\geq n\ln n+cn)=1-e^{-e^{-c}}$  Occupancy Problem the maximum load of bins</description>
    </item>
    
    <item>
      <title>Quantum Error Correction</title>
      <link>https://zhengzangw.com/notes/quantum-computation/quantum-error-correction/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/quantum-error-correction/</guid>
      <description>Distance Measures over distribution Given two distribution ${p_x},{q_x}$
 Trace distance (Total variance): $D(p_x,q_x) = \frac{1}{2}\sum_{x\in X}|p_x-q_x|$ Fidelity: $F(p_x,q_x)=\sum_{x\in X}\sqrt{p_xq_x}$ Properties (distribution)  $[0,1]$ $D(p_x,q_x)=0\iff F(p_x,q_x)=1\iff \forall x p_x=q_x$ $D(p_x,q_x)=1\iff F(p_x,q_x)=0\iff \forall x ,\text{supp}(p_x)\cap\text{supp}(q_x)=\emptyset,\text{supp}(p_x)={x|p_x&amp;gt;0}$ $D(p_x,q_x)=\max_{S\subseteq X}|p_x-q_x|$    Distance Measures over quantum states Given two quantum states
 Trace distance: $D(\rho,\sigma)=\frac{1}{2}|\rho-\sigma|_2$  $D(\rho,\sigma)=D(U\rho U^\dagger,U\sigma U^\dagger),\forall$ unitary $U$ $D(\rho,\sigma)=\max_P Tr(P(\rho-\sigma))$ Total error $=\frac{1}{2}-\frac{1}{2}|\rho-\sigma|$   Theorem: $D(\mathcal{E}(\rho),\mathcal{E}(\sigma))\leq D(\rho,\sigma)$ Fidelity: $F(\rho,\sigma)=Tr\sqrt{\rho^{\frac{1}{2}}\sigma\rho^{\frac{1}{2}}}$ purification: Given a density operator $\rho$ in system $A$, a bipartite pure state $|\psi\rangle^{AB}$ is a purification of $\rho$ if $Tr_A|\psi\rangle\langle\psi|=\rho$  existence  $\rho=\sum_i\lambda_i|u_i\rangle\langle u_i|^A$ $|\psi\rangle=\sum_i\sqrt{\lambda_i}|u_i u_i\rangle^{AB}$     Uhlman&amp;rsquo;s theorem: Suppose $\rho$ and $\sigma$ are states of a quantum system $Q$.</description>
    </item>
    
    <item>
      <title>Feature Selection</title>
      <link>https://zhengzangw.com/notes/machine-learning/10-featureselection/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/10-featureselection/</guid>
      <description>特征选择方法  冗余特征  去除：减轻负担 保留：对应中间概念   特征选择方法  子集搜索  前向 后向   子集评价    过滤式选择 先过滤，再训练
Relief  near-hit: 同类样本中最近 near-miss: 异类样本中最近 相关统计量（属性$j$）: $\delta^j=\sum_i-\text{diff}(x_i^j,x_{i,nh}^j)^2+\text{diff}(x_i^j,x_{i,nm}^j)^2$  若 $x_i$ 与其猜中邻近在属性上的距离小于猜错邻近，增大相关统计量    Relief-F  $\delta^j=\sum_i-\text{diff}(x_i^j,x_{i,nh}^j)^2+\sum_{l\not=k}(p_l*\text{diff}(x_i^j,x_{i,l,nm}^j)^2)$  $p_l$ 为所占比例    包裹式选择 先训练，再选择
 LVW(Las Vegas Wrapper)  随机抽取特征 $A$ 后评估    嵌入式选择  L1 正则化（LASSO，Least Absolute Shrinkage and Selection Operator）  PGD 近端梯度下降  满足 L-Lipschitz 条件 二阶泰勒在 $x_k$ 展开：$\hat f(x)\simeq \frac{L}{2}||x-(x_k-\frac{1}{L}\nabla f(x_k)||^2_2+C$ 最小值取在 $x_{k+1}=x_k-\frac{1}{L}\nabla f(x_k)$     L2 正则化（岭回归）  </description>
    </item>
    
    <item>
      <title>扩频</title>
      <link>https://zhengzangw.com/notes/data-communication/10-%E6%89%A9%E9%A2%91/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/data-communication/10-%E6%89%A9%E9%A2%91/</guid>
      <description>在扩频码（伪随机数）下调制使带宽增加
Spread Spectrum Frequency Hopping(FHSS)  signal is broadcast over seemingly random series of frequencies receiver hops between frequencies in sync with transmitter Slow $T_{\text{shift}}\geq T_{\text{symbol}}$ Fast $T_{\text{shift}}&amp;lt; T_{\text{symbol}}$ 信号带宽远大于数据信号带宽 提高抗人为干扰能力  直接序列扩频(DSSS)  each bit is represented by multiple bits using a spreading code  Code Division Multiple Access  break each bit into k chips according to a fixed chipping code specific to each user 用户码 码片率：新信道码片数据率 接收器解码：用相同用户码做乘积，若为 $\pm N$ 则接受，否则拒绝  </description>
    </item>
    
    <item>
      <title>Quantum Error Correction</title>
      <link>https://zhengzangw.com/notes/quantum-computation/quantum-crytography/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/quantum-crytography/</guid>
      <description>Vernam cipher/ One-time pad: 绝对安全（信息论安全），Eve 做任何计算  加密前后概率分布需一样 Theorem: the secret key has to be as long as the message   密码学安全：Eve 在多项式时间内无法得到任何有效信息 DH Key Exchange: 离散对数问题，量子计算机下不安全 Information reconciliation  Condition: flipped bits $\leq\delta$ fraction of bits Goal: Alice and Bob Error encoding code   BB84 QKD protocol  $a,b\in_R{0,1}^{(4+\delta)n}$ $|\psi\rangle=\otimes_{k=1}^{(4+\delta)n}|\psi_{a_k,b_k}\rangle$  $|\psi_{0,0}\rangle=|0\rangle,|\psi_{1,0}\rangle=|1\rangle,|\psi_{0,1}\rangle=|+\rangle,|\psi_{1,1}\rangle=|-\rangle$   Bob announce achievement Bob $b&#39;\in_R{0,1}^{(4+\delta)n}$  $b&#39;_i=0$ measure $i$-th bit at ${|0\rangle,|1\rangle}$ $b&#39;_i=1$ measure $i$-th bit at ${|+\rangle,|-\rangle}$   Alice announce $b$ Discard the bits where $b$ and $b&#39;$ differ Together select a subset of $n$ bits Announce these $n$ bits and compare Information reconciliation privacy amplification  Collision entrop: $H_c(X)=-\log(\sum_xp(x)^2)$     QKD 应用  京沪干线 墨子号卫星   Q Monkey  基于长时间保存量子态   Post-Quantum Cryptography  经典密码学 单向函数设计时对付量子计算机 替换大数分解  Lattice-based: 理论完善（量子计算难） Multivariate Hash-based Code-based Supersingular elliptic curve isogeney   NIST: Post-Quantum Cryptography Standardization   Delegated Q.</description>
    </item>
    
    <item>
      <title>11. Matching Theory</title>
      <link>https://zhengzangw.com/notes/combinatorics/11-matching-theory/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/combinatorics/11-matching-theory/</guid>
      <description>Hall Theorem  SDR: system of Distinct Representives  distinct $x_1,x_2,\cdots,x_m,x_i\in S_i,i=1,2,\cdots,m$   Hall&amp;rsquo;s Theorem (marriage theorem): $S_1,S_2,\cdots,S_m$ have a SDR $\iff \forall I\subseteq{1,2,\cdots,m},|\bigcup_{i\in I}S_i|\geq|I|$ Hall&amp;rsquo;s Theorem (graph theory form): A bipartite graph $G(U,V,E)$ has a matching of $U$ $\iff\forall S\subseteq U,|N(S)|\geq|S|$  $N(S)={v|\exists u\in S,uv\in E}$ proof: induction, divide into two cases according to critical family ($|\bigcup_{i=1}^kS_i|=k$)    Min-Max Theorems  König-Egerváry theorem: in bipartite graph, $\min$ vertex cover = $\max$ matching  matchign: $M\subseteq E,\neg\exists e_1,e_2\in M$ share a vertex vertex cover: $C\subseteq V,\forall e\in E$ adjacent to some $v\in C$   König-Egerváry theorem (matrix form): For any 0-1 matrix, the maximum number of independent 1&amp;rsquo;s $s$ equals the minimum number of rows and columns required to cover all the 1&amp;rsquo;s $t$  $r\leq s$ $r\geq s$: Hall Thoerem   Dilworth&amp;rsquo;s theorem: $\max$ size of antichain $r$ in poset $P$ $=$ $\min$ size $s$ of smallest partition of $P$ into chains  chain: totally ordered set, all pairs of elements are comparable antichain: all pairs of elements are incomparable $r\leq s$ $r\geq s$:   Erdős-Szekeres Theorem: A sequence of more than $mn$ different real numbers must contain either an increasing subsequence of length {\displaystyle m+1}{\displaystyle m+1}, or a decreasing subsequence of length $(m+1)(n+1)$.</description>
    </item>
    
    <item>
      <title>11. Lovász Local Lemma</title>
      <link>https://zhengzangw.com/notes/advanced-algorithm/6-lovasz-local-lemma/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-algorithm/6-lovasz-local-lemma/</guid>
      <description>Unique Games Conjecture  Unique Label Cover(ULC): An undirected graph $G(V,E)$, $q$ colors, each dege $e$ associated with a bijection $\phi_e:[q]\rightarrow[q]$. A coloring $\sigma\in[q]^V$ satisfies the constraint of the edge $e=(u,v)\in E$ if $\phi_{e}(\sigma_u)=\phi_e(\sigma_v)$ UGC(2002 Khot): $\forall e,\exists q$ such that this is $\text{NP}$-hard to ditinguish between ULC instances:  $&amp;gt;1-\epsilon$ fraction of edges satisfied by a coloring; no more than $\epsilon$ fraction of edges satisfied by any coloring    Constraint Satisfaction Problem  CSP Definition  variables: $V={v_1,v_2,\cdots,v_n},v_i\in\Omega$ constraints: $C_1,C_2,\cdots,C_m,C_i:\Omega^{S_i}\rightarrow{T,F},S_i\subset X$ assignment: $\sigma\in[q]^V$ $\mu(\sigma)=\prod_{i=1}^mC_i(\sigma_{S_i})/Z$   CSP  satisfiability: determine whether $\exists$ an assignment satisfying all constraints  search: find an assignment   optimization: find an assignment satisfying as may constraints as possible  refutation: find a proof of no assignment can satisfy $&amp;gt;m^$ constraints for $m^$ as small as possible   counting: estimate the number of satisfying assignments  sampling: random sample a satisfying assignments inference: calculate the possibility of a variable being assigned certain value         CSP Satisfiability Optimization Counting     2SAT P NP-hard #P-complete   3SAT NP-complete NP-hard #P-complete   matching P P #P   2-coloring(cut) P NP-hard FP   3-coloring NP-complete NP-hard #P-complete     Poly-time inter-reducible  appox.</description>
    </item>
    
    <item>
      <title>Dictionary Learning</title>
      <link>https://zhengzangw.com/notes/machine-learning/11-dictionary/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/11-dictionary/</guid>
      <description>稀疏表达 稀疏表达（稀疏编码，字典学习）
 $x=Az$  字典 $A$：过完备，一般不独立且不正交   优化目标：$\min_{B,\alpha_i}\sum_i^m||x_i-B\alpha_i||2^2+\lambda\sum{i=1}^m||\alpha_i||_1$ 变量交替优化  固定 $B$，LASSO 求解 $\alpha_i$ 固定 $\alpha$，求解 $B$  KSVD     稠密向量：分布式表达 稀疏编码  减少计算量 可解释性 特征自动选择    压缩感知  $y=\Phi x$  $x$: 长度为 $m$ $y$: 长度为 $n&amp;laquo;m$ 低于奈奎斯特采样频率采样，难以还原 $x$   $y=\Phi\Psi s=As, s=\Psi x$  $\Psi=\mathbb{R}^{m\times m}$ $A$: 字典 若 $s$ 具有稀疏性，则可以还原   感知测量：对原始信号处理得到稀疏样本表示  傅里叶变换 小波变换 字典学习   重构恢复（压缩感知）：基于稀疏性从少量观测中恢复原信号  限定等距性 RIP  k-RIP: $A$ 满足 $\exists\delta_k\in(0,1),\forall s,$ 子矩阵$A_k\in\mathbb{R}^{n\times k}$ 有 $(1-\delta_k)||s||_2^2\leq||A_ks||_2^2\leq(1+\delta_k)||s||^2_2$ 可通过 $\min ||s||_0, y=As$ 恢复出稀疏信号 $s$ ($\text{NP}$-hard)     矩阵补全  $\min_X \text{rank}(X),s.</description>
    </item>
    
    <item>
      <title>11. Make</title>
      <link>https://zhengzangw.com/notes/command-line/11-make/</link>
      <pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/11-make/</guid>
      <description>&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-f,&amp;ndash;file&lt;/td&gt;
&lt;td&gt;指定其它文件作为 Makefile&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-C,&amp;ndash;directory&lt;/td&gt;
&lt;td&gt;切换目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-d,&amp;ndash;debug&lt;/td&gt;
&lt;td&gt;输出 debug 信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-s,&amp;ndash;silent&lt;/td&gt;
&lt;td&gt;不显示命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r, &amp;ndash;no-builtin-rules&lt;/td&gt;
&lt;td&gt;禁用内置隐含规则&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-R, &amp;ndash;no-builtin-variables&lt;/td&gt;
&lt;td&gt;禁用内置变量设置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n, &amp;ndash;just-print&lt;/td&gt;
&lt;td&gt;不要实际运行任何命令;仅仅输出他们&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-B&lt;/td&gt;
&lt;td&gt;强制更新所有&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VAR=STRING&lt;/td&gt;
&lt;td&gt;定义参数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;gcc -M main.c &lt;span style=&#34;color:#75715e&#34;&gt;#输出用于 Make 的规则&lt;/span&gt;
gcc -MM &lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt;.c &lt;span style=&#34;color:#75715e&#34;&gt;#不包含系统头文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;var&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 使用变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; string &lt;span style=&#34;color:#75715e&#34;&gt;# 将整个makefile展开后，再决定变量的值&lt;/span&gt;
var &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; string &lt;span style=&#34;color:#75715e&#34;&gt;# 立即赋值&lt;/span&gt;
var &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; string &lt;span style=&#34;color:#75715e&#34;&gt;# 追加赋值&lt;/span&gt;
var &lt;span style=&#34;color:#f92672&#34;&gt;?=&lt;/span&gt; string &lt;span style=&#34;color:#75715e&#34;&gt;# 若无定义则定义&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 定义空格
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;nullstring &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt;
space &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;nullstring&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;内置变量与常用变量&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-makefilet&#34; data-lang=&#34;makefilet&#34;&gt;.RECIPEPREFIX = &amp;gt; # 默认命令前为 \t
OUTPUT_OPTION = -o \$@
CC = cc

CC = gcc
CFLAGS = -O -g
CPPFLAGS = -Iinclude -DMAKEFILE

$(VERBOSE).SILENT # Suppress display of executed command
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;自动变量&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;自动变量&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$@&lt;/td&gt;
&lt;td&gt;Target&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$&amp;lt;&lt;/td&gt;
&lt;td&gt;规则中第一个条件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$?&lt;/td&gt;
&lt;td&gt;规则中所有比目标新的条件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$^&lt;/td&gt;
&lt;td&gt;规则中所有条件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;通配符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$$&lt;/td&gt;
&lt;td&gt;进程号&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;基础语法&#34;&gt;基础语法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RULE:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; prerequisite
  command1 &lt;span style=&#34;color:#75715e&#34;&gt;# 对于 Makefile 中的每个以 Tab 开头的命令，make 会创建一个 Shell 进程去执行它。&lt;/span&gt;
  @command2 &lt;span style=&#34;color:#75715e&#34;&gt;# 不显示命令&lt;/span&gt;
  -command3 &lt;span style=&#34;color:#75715e&#34;&gt;# 错误继续执行&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;%.o&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; %.c &lt;span style=&#34;color:#75715e&#34;&gt;# 模式匹配
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>12. Vim</title>
      <link>https://zhengzangw.com/notes/command-line/12-vim/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/12-vim/</guid>
      <description></description>
    </item>
    
    <item>
      <title>13. VM and Docker</title>
      <link>https://zhengzangw.com/notes/command-line/13-vm-and-docker/</link>
      <pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/13-vm-and-docker/</guid>
      <description>Docker alias dk=&amp;lsquo;docker&amp;rsquo; alias dka=&amp;lsquo;docker attach&amp;rsquo; alias dkb=&amp;lsquo;docker build&amp;rsquo; alias dkd=&amp;lsquo;docker diff&amp;rsquo; alias dkdf=&amp;lsquo;docker system df&amp;rsquo; alias dke=&amp;lsquo;docker exec&amp;rsquo; alias dkE=&amp;lsquo;docker exec -it&amp;rsquo; alias dkh=&amp;lsquo;docker history&amp;rsquo; alias dki=&amp;lsquo;docker images&amp;rsquo; alias dkin=&amp;lsquo;docker inspect&amp;rsquo; alias dkim=&amp;lsquo;docker import&amp;rsquo; alias dkk=&amp;lsquo;docker kill&amp;rsquo; alias dkl=&amp;lsquo;docker logs&amp;rsquo; alias dkli=&amp;lsquo;docker login&amp;rsquo; alias dklo=&amp;lsquo;docker logout&amp;rsquo; alias dkls=&amp;lsquo;docker ps&amp;rsquo; alias dkp=&amp;lsquo;docker pause&amp;rsquo; alias dkP=&amp;lsquo;docker unpause&amp;rsquo; alias dkpl=&amp;lsquo;docker pull&amp;rsquo; alias dkph=&amp;lsquo;docker push&amp;rsquo; alias dkps=&amp;lsquo;docker ps&amp;rsquo; alias dkpsa=&amp;lsquo;docker ps -a&amp;rsquo; alias dkr=&amp;lsquo;docker run&amp;rsquo; alias dkR=&amp;lsquo;docker run -it &amp;ndash;rm&amp;rsquo; alias dkRe=&amp;lsquo;docker run -it &amp;ndash;rm &amp;ndash;entrypoint /bin/bash&amp;rsquo; alias dkRM=&amp;lsquo;docker system prune&amp;rsquo; alias dkrm=&amp;lsquo;docker rm&amp;rsquo; alias dkrmi=&amp;lsquo;docker rmi&amp;rsquo; alias dkrn=&amp;lsquo;docker rename&amp;rsquo; alias dks=&amp;lsquo;docker start&amp;rsquo; alias dkS=&amp;lsquo;docker restart&amp;rsquo; alias dkss=&amp;lsquo;docker stats&amp;rsquo; alias dksv=&amp;lsquo;docker save&amp;rsquo; alias dkt=&amp;lsquo;docker tag&amp;rsquo; alias dktop=&amp;lsquo;docker top&amp;rsquo; alias dkup=&amp;lsquo;docker update&amp;rsquo; alias dkV=&amp;lsquo;docker volume&amp;rsquo; alias dkv=&amp;lsquo;docker version&amp;rsquo; alias dkw=&amp;lsquo;docker wait&amp;rsquo; alias dkx=&amp;lsquo;docker stop&amp;rsquo;</description>
    </item>
    
    <item>
      <title>14. 多媒体转换</title>
      <link>https://zhengzangw.com/notes/command-line/14-multimedia-transform/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/14-multimedia-transform/</guid>
      <description>视频 ffmpeg  ffmpeg -formats 查看支持容器 ffmpeg -codec 查看支持编码 ffmpeg -encoders 查看编码器 ffmpeg -hide_banner     参数 效果     -i 输入文件   -c copy 直接复制   -c:v libx264 视频编码器   -c:a acc 音频编码器   -an 去除音频流   -vn 去除视频流   -preset ultrafast, superfast, medium, slow, veryslow   -y 覆盖同名   -vf scale=480:-1 分辨率   -ss 00:01:24 -t 00:00:01 裁剪一秒视频   -ss 01:02:03 -vframes 1 -q:v 2 截取一帧，质量为 2   -loop 1 -shortest 音频文件化为带封面的视频   -r 24 强制帧数   -b:v 64k 输出文件比特率（缺省 200kb/s）   -minrate 964K -maxrate 3856K -bufsize 2000K 码率调整     普屏4:3：320240 640480 宽屏16:9：480272 640360 672378 720480 1024600 1280720 1920*1080 获取封面：ffmpeg -ss 00:00:10 -i test1.</description>
    </item>
    
    <item>
      <title>15. Linux</title>
      <link>https://zhengzangw.com/notes/command-line/15-linux/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/15-linux/</guid>
      <description>&lt;p&gt;Linux 私房菜&lt;/p&gt;
&lt;h1 id=&#34;命令&#34;&gt;命令&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>16. Comments and Autodoc</title>
      <link>https://zhengzangw.com/notes/command-line/16-comments-and-autodoc/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/16-comments-and-autodoc/</guid>
      <description>注释风格 File Comments Python
#!/usr/bin/env python # -*- coding: utf-8 -*- # @Time : ${DATE} ${TIME} # @Author : Shark # @Site : ${SITE} # @File : ${NAME}.py # @Software: ${PRODUCT_NAME} C++
// // @brief: 简单介绍 // @copyright: Copyright 2020 Google Inc // @license: GPL // @birth: created by Dablelv on 2018-08-02 // @version: V1.1.1 // @revision: last revised by lvlv on 2018-09-02 // C++ Doxygen
/** *&amp;lt;A short one line description&amp;gt; * *&amp;lt;Longer description&amp;gt; *&amp;lt;May span multiple lines or paragraphs as needed&amp;gt; * *@param &amp;lt;参数名&amp;gt; &amp;lt;参数说明&amp;gt; *@param .</description>
    </item>
    
    <item>
      <title>17. Formats and Linters</title>
      <link>https://zhengzangw.com/notes/command-line/17-formats-and-linters/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/17-formats-and-linters/</guid>
      <description>Formats C/C++ 代码风格：Google, linux, gnu
indent astyle --style=gnu src/*.cpp include/*.h # brew install astyle In Vscode: &amp;quot;C_Cpp.clang_format_style&amp;quot;: &amp;quot;{ BasedOnStyle: Google, IndentWidth: 4}&amp;quot;
Python 代码风格：pep8
autopep8 --in-place --aggressive test.py # pip install pep8 Frontend Prettier
Lint 静态代码检测
 pylint eslint  </description>
    </item>
    
    <item>
      <title>18. File Hierarchy Standard</title>
      <link>https://zhengzangw.com/notes/command-line/18-file-hierarchy/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/18-file-hierarchy/</guid>
      <description>&lt;h1 id=&#34;file-hierarchy&#34;&gt;File Hierarchy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freedesktop.org/software/systemd/man/file-hierarchy.html&#34;&gt;Link to File Hierarchy&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;notawesome-user-file-hierarchy-standard&#34;&gt;NotAwesome User File Hierarchy Standard&lt;/h1&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;NotAwesome User File Hierarchy Standard aims to help user better manage their resources and files in user space. The standard takes account of all storage at hand or online. It follows tree principles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accessibility: Anytime you want to locate a resource, you know where it resides and can be accessed&lt;/li&gt;
&lt;li&gt;Convinience: Frequent used resource should be accessed fast&lt;/li&gt;
&lt;li&gt;Safe: data not lost&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>19. Crawler</title>
      <link>https://zhengzangw.com/notes/command-line/19-crawler/</link>
      <pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/19-crawler/</guid>
      <description>Python import urllib # 1 response = urllib.request.urlopen(&amp;#39;http://python.org/&amp;#39;) html = response.read() print(html.decode(&amp;#39;utf-8&amp;#39;)) # 2 POST &amp;amp; GET url = &amp;#39;http://www.baidu.com/&amp;#39; valuesPOST = { &amp;#39;user&amp;#39;: &amp;#39;name&amp;#39;, &amp;#39;passwd&amp;#39;: &amp;#39;*****&amp;#39; } data = urllib.parse.urlencode(valuesPOST).encode(&amp;#39;utf-8&amp;#39;) valuesGET = { &amp;#39;verbose&amp;#39;: 1, &amp;#39;nothing&amp;#39;: &amp;#34;&amp;#34; } url = url + &amp;#34;?&amp;#34; + urllib.parse.urlencode(valuesGET) req = urllib.request.urlopen(url, data) # 3 Headers headers = { &amp;#39;User-Agent&amp;#39; : &amp;#39;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&amp;#39;, &amp;#39;Referer&amp;#39; : &amp;#39;http://www.zhihu.com/articles&amp;#39; } req = urllib.</description>
    </item>
    
    <item>
      <title>20. Args</title>
      <link>https://zhengzangw.com/notes/command-line/20-args/</link>
      <pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/20-args/</guid>
      <description>Shell # getopts # : after letter indicates it requires arguments while getopts &amp;#34;:a:&amp;#34; opt; do case $opt in a) echo &amp;#34;-a was triggered, Parameter: $OPTARG&amp;#34; &amp;gt;&amp;amp;2 ;; \?) echo &amp;#34;Invalid option: -$OPTARG&amp;#34; &amp;gt;&amp;amp;2 exit 1 ;; :) echo &amp;#34;Option -$OPTARGrequires an argument.&amp;#34; &amp;gt;&amp;amp;2 exit 1 ;; esac done # getopt Python argparse</description>
    </item>
    
    <item>
      <title>Setup: Ubuntu</title>
      <link>https://zhengzangw.com/notes/command-line/ubuntu-setup/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/ubuntu-setup/</guid>
      <description>&lt;h2 id=&#34;platform&#34;&gt;Platform&lt;/h2&gt;
&lt;h3 id=&#34;virtual-machine-on-macosx&#34;&gt;Virtual Machine on macosx&lt;/h3&gt;
&lt;p&gt;Install virtualbox&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;    brew cask install virtualbox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Download Ubuntu from &lt;a href=&#34;https://mirror.tuna.tsinghua.edu.cn/ubuntu-releases/&#34;&gt;Tsinghua Image&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LTS version&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;16.04&lt;/li&gt;
&lt;li&gt;18.04&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Setup: MacOS</title>
      <link>https://zhengzangw.com/notes/command-line/macos-setup/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/macos-setup/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Setup: PHP</title>
      <link>https://zhengzangw.com/notes/command-line/php-setup/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/command-line/php-setup/</guid>
      <description>&lt;h1 id=&#34;set-up-vm&#34;&gt;Set up VM&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt update
adduser newuser
usermod -aG sudo newuser
sudo nano /etc/ssh/sshd_config
&lt;span style=&#34;color:#75715e&#34;&gt;# change PasswordAuthentication from no to yes (Afterwards you can change it back)&lt;/span&gt;
sudo systemctl restart sshd
ssh-keygen -f .ssh/id_rsa_new &lt;span style=&#34;color:#75715e&#34;&gt;# local&lt;/span&gt;
ssh-copy-id newuser@server &lt;span style=&#34;color:#75715e&#34;&gt;#local, and edit .ssh/config&lt;/span&gt;
sudo apt install curl git unzip build-essential
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>A Detailed Back Propagation Deduction</title>
      <link>https://zhengzangw.com/teach/cs5242-2022-fall/bp/</link>
      <pubDate>Wed, 07 Sep 2022 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/cs5242-2022-fall/bp/</guid>
      <description>Outline There are several ways for calculation of BP for multi-layer perceptron (MLP). First, notice that we want to calculate $\frac{\partial \mathcal{L}}{\partial \mathbf{W}^{(l)}}$ for each layer, which is a scalar-to-matrix derivative. We can use the following methods:
 Calculate $\frac{\partial \mathcal{L}}{\partial \mathbf{W}^{(l)}}$ directly with matrix-to-matrix gradients. (not adopted here because matrix-to-matrix gradients are not easy to calculate) Calculate $\frac{\partial \mathcal{L}}{\partial \mathbf{W}^{(l)}}$ directly and avoid vector-to-matrix gradients. (not adopted here, because it is still hard) Calculate $\frac{\partial \mathcal{L}}{\partial \mathbf{W}^{(l)}_{i,j}}$ and then assemble them into a matrix.</description>
    </item>
    
    <item>
      <title>量化投资</title>
      <link>https://zhengzangw.com/posts/invest/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/invest/</guid>
      <description>基本金融知识 tushare 包 </description>
    </item>
    
    <item>
      <title>3D reconstruction</title>
      <link>https://zhengzangw.com/posts/3d-reconstruction/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/3d-reconstruction/</guid>
      <description>介绍  主动式/被动式 主要方法：立体视觉，深度图片 三维数据获取方法  软件建模（精细） 激光设备扫描 利用视频与图像进行重建   应用场景  高精度的三维重建 大规模的三维重建 非刚体的 structure from motion 动态三维重建    图像特征提取  霍夫变换 D2-Net SIFT  相机模型 坐标转换  坐标系  世界 world: $O_w-X_wY_wZ_w$ 相机 camera: 原点位于镜头光心，x,y 与相面两边平行，z 为镜头光轴 图像 $XOY$: 原点为主点（光轴相面交点），单位为毫米 像素 $uov$: 反映 CCD/CMOS 芯片中像素排列情况 （光-&amp;gt;电），单位为像素（整数）   坐标系转换  world to camera: $[X_c, Y_c, Z_c]^T=R[X_w,Y_w,Z_w]^T+T$  $[x_c, y_c, z_c, 1]^T=[R, t; 0, 1][x_w,y_w,z_w,1]^T$ $R,t$ 为相机外参 Camera Extrinsics 旋转矩阵：$R(X_A,\psi),R(Y_A,\theta),R(Z_A,\phi)$  左乘：相对于固定坐标系变换 右乘：相对于自身（活跃）坐标系   欧拉角：$zXZ-(\alpha,\beta,\gamma)$ （万向节死锁） 轴角：$([x, y, z]^T, \theta)$ 四元数   图像转换为像素：$[u,v,1]^T=[\frac{1}{dX}, 0, u_0; 0,\frac{1}{dY},v_0; 0,0,1][X, Y, 1]^T$  $[\frac{1}{dX}, 0, u_0; 0,\frac{1}{dY},v_0; 0,0,1]$ $dX,dY$ 像素在 $X,Y$ 轴上的物理尺度 ($u=\frac{X}{dX}+u_0$) $u_0,v_0$ 为主点在图像坐标中的坐标   camera to image (针孔成像原理)：$s[X, Y, 1]^T=[f, 0, 0, 0; 0, f, 0, 0; 0, 0, 1, 0][x, y, z, 1]^T$  $s$ 为比例因子 $s=z$ $f$ 为有效焦距   内参  $K=[f_x, 0, u_0; 0, f_y, v_0; 0, 0, 1]$ $P=[f_x, 0, u_0, 0; 0, f_y, v_0, 0; 0, 0, 1, 0]$     畸变 (distortion)：对直线投影的偏移（不能保持直线）  中心正常，越边缘越严重 径向畸变（主要）：透镜形状  桶形、枕形、胡子   切向畸变：透镜与图像不平行  薄透镜、离心   其它类型（不显著） 铅锤模型 (Plumb Bob model): 径向复合+薄透镜  畸变参数：$D=(k_1,k_2,p_1,p_2,k_3)$      相机标定  传统方法：一定的摄像机模型下，基于特定实验。经常调整摄像机的需求，设置已知参照物  张正友相机标定法、考虑畸变补偿的两步法等   自标定法：不依赖参照物，利用参数间约束关系  基于 Krupa 方程、分层逐步标定法等    张氏标定法  标定物：棋盘 单应性变换：世界坐标系到像素坐标系的位置映射关系  应用：图像矫正（四个点）、视角变换（普通到 BEV）、图像拼接（不同角度图像转换到同样的视角）、增强现实   图像对应点 $(x&#39;,y&#39;,1),(x,y,1)$, 单应矩阵 $H$（内参与外参的混合）  自由度：8 一个点确定两个方程   张氏标定法  打印棋盘格图纸，贴在物体表面（坐标系 $Z_w=0$） 拍摄一组不同方向的棋盘格图片 对每张拍摄的棋盘图片，检测图片的特征点（角点）   优化  LM 算法    三维重建 双目系统 双目立体视觉重建</description>
    </item>
    
    <item>
      <title>FMCW Radar</title>
      <link>https://zhengzangw.com/posts/fmcw/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/fmcw/</guid>
      <description>Frequency-modulated continuous-waves radar
Range  chirp  frequency: $f_c=77$ GHz duration: $T_c=40$ us bandwidth: $B=4$ GHz slope: $S=100$ MHz/us   mixer: $x_{\text{out}}=\sin[(w_1-w_2)t+(\phi_1-\phi_2)]$ IF signal  after $\tau=\frac{2d}{c}$, RX receives IF frequency: $f_\tau=S\tau=\frac{S2d}{c}$   discriminate two frequency in frequency domain: in time domain, two signal should have $&amp;gt;1$ cycles difference  window of $T$ can seperate $\frac{1}{T}$ Hz   Range Resolution:  $\Delta f=\frac{S2\Delta d}{c}&amp;gt;\frac{1}{T_c}$ $\Delta d&amp;gt;\frac{c}{2B}$   Digitize: LPF (remove high-freq) $\rightarrow$ ADC (sample, quantitize) $\rightarrow$ DSP (FFT) Maximum Distance: $d_{\max}$  IF bandwidth (LPF) $&amp;gt;\frac{S2d_{\max}}{c}$ ADC sampling rate $&amp;gt;\frac{S2d_{\max}}{c}$   Larger Chirp Bandwidth $B$: better resolution Larger IF Bandwidth: faster chirps, better $d_{\max}$  Velocity  IF signal: $A\sin(2\pi ft+\phi_0)$  $f=\frac{S2d}{c}$ $\Delta\phi = 2\pi f_c\Delta\tau=\frac{4\pi\Delta d}{\lambda}$   1mm can lead to 180 degree  Single Object  Transmit two chirps seperated by $T_c$  phase difference $\omega=\frac{4\pi vT_C}{\lambda}$ $v=\frac{\lambda\omega}{4\pi T_c}$   Maximum relative speed: $v_{\max}=\frac{\lambda}{4T_c}$  $|\omega|&amp;lt;\pi$   Velocity Resolution  Continous signal: $\Delta f=\frac{1}{T}$ cycles/sec Discrete signal: $\Delta \omega=\frac{1}{N}$ cycles/sample    Multiple Objects  $N$ equi-spaced chirps Doppler FFT: done along chiprs Velocity Resolution  $\Delta\omega&amp;gt;\frac{\pi}{N}$ $\Delta v&amp;gt;\frac{\lambda}{2NT_c}$    Radar Range Equation  Output power of device $P_t$ TX/RX Antenna Gain: $G$ Radiated Power Density: $\frac{P_t G_{\text{TX}}}{4\pi d^2}W/m^2$ Radar Cross Section of the Target (RCS): $\sigma$ Power reflected by object: $\frac{P_t G_{\text{TX}}\sigma}{4\pi d^2}W$ Power density at RX: $\frac{P_t G_{\text{TX}}\sigma}{(4\pi)^2 d^4}W/m^2$ Power captured at RX: $\frac{P_tG_{\text{TX}}\sigma A_{\text{RX}}}{{(4\pi)^2d^4}}W$ $A_{\text{RX}}=\frac{G_{\text{RX}}\lambda^2}{4\pi}$ SNR: $\frac{\sigma P_tG_{\text{TX}} G_{\text{RX}}\lambda^2T_{\text{meas}}}{{(4\pi)^3d^4 kTF}}W$ minimum SNR that is required for detecting an target (15dB - 20dB)  Angle  Angle of Arrival 2D-FFT: range-FFT (row) and dropplet-FFT (column, chirp) additional distance: $d\sin\theta$  Single Object (angle)  $\omega=\frac{2\pi d\sin\theta}{\lambda}$ $\theta=\sin^{-1}(\frac{\lambda\omega}{2\pi d})$  $\theta=0$ is most sensitive accuracy degrades as $\theta$ approaches 90 degree   maximun angle: $\theta=\sin^{-1}(\frac{\lambda}{2d})$  Multiple Objects (angle)  N annetina, Angle-FFT Angle Resolution: $\theta_{\text{res}}=\frac{\lambda}{Nd\cos\theta}$  $d=\frac{\lambda}{2}$ and $\theta=0$: $\theta_{\text{res}}=\frac{2}{N}$    </description>
    </item>
    
    <item>
      <title>Solution to OJ - Balance Segment Painting</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-4/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-4/</guid>
      <description>题目连接：Balance Segment Painting
Balance Segment Painting 因为要维护的是连续连段的长度，染色 $[p_i-1,p_i]$ 时，相当与把 $p_i-1$ 所在的连续线段和 $p_i$ 所在的连续线段合并。每条连续线段相当与是一个集合，
用并查集维护即可，可参考网上的实现。同时并查集需要维护集合的大小（按秩合并优化中已经有维护了）
示例代码 #include &amp;lt;bits/stdc++.h&amp;gt;using namespace std; #define MAX_N 1000000  // disjoint set  int fa[MAX_N + 1], sz[MAX_N + 1]; void init(int n) { for (int i = 0; i &amp;lt;= n; ++i) { fa[i] = i; sz[i] = 1; } } int find(int x) { if (x != fa[x]) fa[x] = find(fa[x]); return fa[x]; } int merge(int x, int y) { int xx = find(x), yy = find(y); if (xx == yy) return sz[xx]; if (sz[xx] &amp;gt; sz[yy]) swap(xx, yy); fa[xx] = yy; sz[yy] += sz[xx]; return sz[yy]; } // main  int main() { int n, p, max_len = 0; bool is_first = true; // Input  scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); init(n); for (int i = 0; i &amp;lt; n; ++i) { scanf(&amp;#34;%d&amp;#34;, &amp;amp;p); max_len = max(merge(p - 1, p) - 1, max_len); // Output  if (is_first) is_first = false; else printf(&amp;#34; &amp;#34;); printf(&amp;#34;%d&amp;#34;, max_len); } puts(&amp;#34;&amp;#34;); return 0; } </description>
    </item>
    
    <item>
      <title>Solution to OJ - Gold Miner</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-2/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-2/</guid>
      <description>题目连接：Gold Miner
Gold Miner 这题要求至多进行 50 次操作，要能够将 $n\times n$ 的网格除对角线和对角线下发一条线全部涂满。每次可以选择若干行和若干列，将它们的交点涂上色。
提示中说使用分治来思考。令 $T(n)$ 是 $n$ 大小的网格需要进行的操作次数（不是程序的运行时间），思考如何用 $T(\frac{n}{2})$ 来解决 $T(n)$。因为有一半，首先想到的是分割网格成 $\frac{n}{2}\times\frac{n}{2}$ 大小的子网格如下：
如图按左上，左下，右上，右下正好分割成四块。其中，蓝色区域的很容易上色，用 3 次操作即可全部上色。而左上和右下又是两个 $T(\frac{n}{2})$ 的子问题，故按此方法可得 $T(n)=2T(\frac{n}{2})+3$。
观察到左上和右下在横纵坐标的限制上耦合度很低，理想的情况是在左上的横纵坐标选择和右下的横纵坐标选择之间完全不影响（相互为独立的子问题）。这样我们就可以把左上中一次操作和右下中一次操作合并在一起，作为一次操作。总操作数即为 $T(n)=T(\frac{n}{2})+3$。但左下有一个不能选中的地方，这导致左上选择纵坐标 5 的时候，右下不能选中横坐标 6。为了解决这个问题，在划分子问题时必须是两个矩形的横纵坐标相交处没有禁止的点。
一种可行的方法是缩小左上的矩形，如此交点处都是可以的。根据题目中 “It is allowed to enter some cells multiple times!”，上下两个子矩阵的求解就成为相互独立的子问题了。此时其余部分用 4 次操作可以填满。$n=3000,\log_2 n \approx 11,4*11=44&amp;lt;50$
程序实现时，可以递归模拟二分过程，既可以用 vector 记录选择的 $X,Y$ 坐标，merge 时合并，也可以用全局变量记录。其中，特殊处理一下 $n=1,2,3,4$ 的情况，可以让染色数减少（如 $n=4$ 只需 3 次）。
示例代码 #include &amp;lt;bits/stdc++.h&amp;gt;using namespace std; #define max_n 3000 #define max_round 50  int n; bool X[max_round + 1][max_n + 1], Y[max_round + 1][max_n + 1]; int solve(int n, int low, int round) { /** * n: size of matrix * low: the index of first row in this matrix * according to the original matrix * round: number of round */ // Special case for n&amp;lt;=4  if (n == 1) { return round; } else if (n == 2) { round += 1; X[round][low] = Y[round][low + 1] = true; return round; } else if (n == 3) { round += 1; X[round][low] = Y[round][low + 1] = Y[round][low + 2] = true; round += 1; X[round][low + 1] = Y[round][low + 2] = true; round += 1; X[round][low + 2] = Y[round][low] = true; return round; } else if (n == 4) { round += 1; X[round][low + 2] = X[round][low + 3] = Y[round][low] = true; round += 1; X[round][low] = X[round][low + 3] = Y[round][low + 1] = true; round += 1; X[round][low] = X[round][low + 1] = Y[round][low + 2] = Y[round][low + 3] = true; round += 1; X[round][low + 2] = Y[round][low + 3] = true; return round; } // 4 rounds for up_right and down_left  int up_n, down_n, down_low; up_n = (n - 1) / 2; down_n = n - up_n - 1; down_low = low + up_n + 1; // round 1  round += 1; for (int d = 0; d &amp;lt; down_n; ++d) X[round][down_low + d] = true; for (int d = 0; d &amp;lt; up_n; ++d) Y[round][low + d] = true; // round 2  round += 1; for (int d = 0; d &amp;lt; up_n; ++d) X[round][low + d] = true; for (int d = 0; d &amp;lt; down_n; ++d) Y[round][down_low + d] = true; // round 3  round += 1; X[round][low + up_n] = true; for (int d = 0; d &amp;lt; n; ++d) { if (d !</description>
    </item>
    
    <item>
      <title>Solution to OJ - Large Sum Subarray</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-1/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-1/</guid>
      <description>题目连接：Large Sum Subarray
Large Sum Subarray 本题寻找以下配对的个数：$(i,j),i\leq j,\sum_{k=i}^ja_k&amp;gt;t$。通过求前缀和，我们可以把区间转换为两点的比较：$(i+1,j), S_j-S_{i}&amp;gt;t$。
联想一道经典的求逆序对的问题，题目求以下配对的个数：$(i,j),i\leq j, a_j&amp;gt;a_i$。本题稍加改变，也可以变为 $(i,j),i\leq j, a_j&amp;lt;a_i+t$。
归并排序的过程中（升序），在 merge 时，如果 $a_i+t$（第一部分） 比 $a_j$（第二部分） 小，那么 $a_i+t$ 比 $a_k,k&amp;gt;j$ 都要小。故我们把第一部分指针后移，并加上 $i$ 可以配对的数量 $R-j+1$，$R$ 是第二部分的右边界。
解决问后可以再想想，如果排序是降序的，求顺序对和求逆序对的代码又应该放在哪里？该如何证明正确性？
额外的注意事项 使用 C++ 的同学，读入时若使用 cin 需要加速，或使用 scanf 读入
参考代码 #include &amp;lt;bits/stdc++.h&amp;gt;using namespace std; #define n_max 1000000  int64_t t, ans; int64_t a[n_max + 1], s[n_max + 1], tmp[n_max + 1]; void merge(int64_t* a, int left, int mid, int right) { int i, j, k; // count  i = left, j = mid + 1; while (i &amp;lt;= mid &amp;amp;&amp;amp; j &amp;lt;= right) { if (a[i] + t &amp;lt; a[j]) { i++; // ordered pair counted here  ans += right - j + 1; } else { j++; // inversion pair counted here  } } // merge  i = left, j = mid + 1, k = left; while (i &amp;lt;= mid &amp;amp;&amp;amp; j &amp;lt;= right) { if (a[i] &amp;lt; a[j]) { tmp[k++] = a[i++]; } else { tmp[k++] = a[j++]; } } while (i &amp;lt;= mid) tmp[k++] = a[i++]; while (j &amp;lt;= right) tmp[k++] = a[j++]; for (int i = left; i &amp;lt;= right; ++i) a[i] = tmp[i]; } void mergesort(int64_t* a, int left, int right) { if (left &amp;gt;= right) return; int mid = (left + right) / 2; mergesort(a, left, mid); mergesort(a, mid + 1, right); merge(a, left, mid, right); } int main() { // Read  int n; scanf(&amp;#34;%d%lld&amp;#34;, &amp;amp;n, &amp;amp;t); /* Calculate s[i] to be the presum of a, then sum(a[i.</description>
    </item>
    
    <item>
      <title>Solution to OJ - Range Sum of Multiset</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-3/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/oj1-3/</guid>
      <description>题目连接：Range Sum of Multiset
Range Sum of Multiset 本题要求实现一个支持在线插入(1)、删除(2)、区间和(3)的数据结构。根据数据规模 $1\leq Q\leq 5\cdot 10^5$，我们需要 $O(\lg n)$ 的时间支持这三种操作。
如果只需要支持操作 1,2，我们可以采用平衡树（红黑树，Treap）或者跳表。为了支持操作 3，我们需要在原数据结构上额外维护一下区间相关的内容。为了求 $[l,r]$ 区间内的和，我们可以维护每个结点的前缀和，用前缀和来计算区间和。
可以参考网上 Treap 和 跳表 的实现。
对于 Treap，要注意的是前缀和并不是子树之和，而是左子树之和。
对于跳表，可以在每层的每个结点维护：在该层，该节点到前一结点之间的元素之和。实现的时候要注意指针的使用。
示例代码 (Treap &amp;amp; 跳表) #include &amp;lt;bits/stdc++.h&amp;gt; #include &amp;lt;random&amp;gt;using namespace std; #define MAXN 500000 // #define DEBUG  /* Treap */ typedef struct { int64_t key, sum_left, sum_right; int pri, w, l, r; } treap_node; struct treap_rotate { treap_node node[MAXN + 1]; int rt, sz; void l_rotate(int &amp;amp;k) { int t = node[k].</description>
    </item>
    
    <item>
      <title>Tricks for Python</title>
      <link>https://zhengzangw.com/posts/python-trick/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/python-trick/</guid>
      <description>新建项目 一个完整的 Python Project 应该包括
project/ src/ --- source code tests/ --- test code __init__.py conftest.py test_xxx.py setup.py --- organize files into a package setup.cfg MANIFEST.in requirements.txt README.md pyproject.toml 其中，setup.py 用来构建包，譬如：
from setuptools import find_packages, setup setup( name=&amp;#39;flaskr&amp;#39;, version=&amp;#39;1.0.0&amp;#39;, packages=find_packages(), include_package_data=True, zip_safe=False, install_requires=[ &amp;#39;flask&amp;#39;, ], ) 并可以用 MANIFEST.in 补充添加二进制文件。此外， tests 为测试文件夹，测试时 coverage run -m pytest, coverage report. 可用 setup.cfg 配置
[tool:pytest] testpaths = tests [coverage:run] branch = True source =src 用 pipreqs 生成 requirements.</description>
    </item>
    
    <item>
      <title>Solution to HW 5</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-5/</link>
      <pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-5/</guid>
      <description>10-19 6.1 空间上消耗可能增多，时间上摊还复杂度低（$1+\frac{4}{3}t$）。两种方法视实际情况需要使用。
6.2 应该使用均摊分析（有些同学写了平均分析，实际给的是一种特殊情况下的时间开销）
根据书中的 accounting scheme，在无 shrink 的情况下，push 的 amortized cost 为 $1+2t$，pop 的 amortized cost 为 $1$。这道题的处理关键在于要考虑 pop 操作的 credit
  (a) 取临界情况（栈大小 $n$，$n-1$ 次 push 后反复 push + pop）可知均摊时间复杂度非常数（均摊分析也是在最坏情况下的分析）
  (b) push: $1+2t$, pop: $1+t$
考虑已扩展到 $4N$ 的情况
 $2N\sim 4N$: push 的 accounting 足够 $N\sim2N$: push 的 accounting 保证下一次 push 时 credit 为正，pop 累积有 $Nt$ 的 accounting 用于 shrink    (c) push: $1+2t$, pop: $1$</description>
    </item>
    
    <item>
      <title>Solution to HW 4</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-4/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-4/</guid>
      <description>10-12 6.11 Tips: 分情况讨论
  ansRight.status = ok/rbr
  ansRight.status = brb
 oldTree.color = black oldTree.color = red    otherwise
 oldTree.leftSubtree.color = red oldTree.leftSubtree.color = black    6.15 略
6.16  (1) 右旋+左旋 (2) 左旋 (3) r = black, 左旋 (4) s = black, p = red, 左旋  6.17  (a) 错误 (b) 错误  10-15 6.18 略
6.19 言之有理即可。(a) 简单的可以认为空间多两倍</description>
    </item>
    
    <item>
      <title>Solution to HW 3</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-3/</link>
      <pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-3/</guid>
      <description>注意这次交三次的作业，缺交的同学及时补交（邮箱：zzw@smail.nju.edu.cn）
9-24 4.2
  (a) $\frac{1}{2}n(n-1)$, decreasing sequence
  (b) increasing, $n-1$
4.3
  (a) 用循环不变式证明 （$E[j]$ is the maximum in $[0,j]$)
  (b) 略
4.4
  (a) 可利用 4.3(a) 的循环不变式证明
  略
  不影响
4.23
  注意需使用 Section 2.3.2 的数据结构
4.27
  (a) 可以使用两个数组 $A,B$，基于归并时处于归并树结点深度的奇偶性，奇数时保存到 $A$，偶数时保存到 $B$（滚动数组）
  (b) $n\log n$
4.28
  找中点：设置两个指针，一个步长为 1， 一个步长为 2，当快指针到达尾结点时，慢指针指向中间结点。该时间复杂度为 $O(n)$。由于 merge 也是 $O(n)$，时间复杂度不变为 $O(n\log n)$。空间复杂度 $O(n\log n)$，有 garbage collection 为 $O(n)$</description>
    </item>
    
    <item>
      <title>Solution to HW 2</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-2/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-2/</guid>
      <description>共 13 题。不会的题不要空着，展示一些思路，都有分的。
可以不抄题目，但请装订后上交。做的好的我用星（下次用 A）打了标记，很差的用 B 打标记（暂时没有）
4.7
最好情况：已经排序，比较 n-1 次
4.8
 (a) $n-1+\log_2[(n-1)!]=\Theta(n\log n)$ (b) $\frac{(n-1)n}{2}$ (d) 链表可以减少移动次数，但无法进行二分查找（不能直接索引）  4.9
平均复杂度变低（相同 key 取同一个）/ 渐进平均复杂度不变
4.11
时间复杂度 $\Theta(n^2)$，无垃圾回收空间复杂度 $\Theta(n^2)$，有垃圾回收 $\Theta(n)$
4.14
   before i left-end right-end vacancy     2 low high left   3 low high left   4 low highVac right   5 lowVac highVac left    4.15</description>
    </item>
    
    <item>
      <title>Solution to HW 1</title>
      <link>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-1/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/teach/algorithm-2020-fall/solution-to-algorithm-1/</guid>
      <description>作业评分：每题 10 分，选做属于加分题
一些共性的问题：
 作业只收到 41 份，名单有 54 位同学，请确认自己已经提交作业 作业严禁抄袭 作业记得写好学号姓名，并用订书钉或回形针等方式装订好 许多同学表示不会写伪代码  作业都只需要给出伪代码，理论上不应该使用任何一种实际的编程语言书写（如 java/c/python）很多同学作业中伪代码直接交了可运行的代码，这样书写很费时间，同时也没法很好展示自己的思路 写伪代码主要在于展现算法思路，只需要保留核心算法部分即可。一些辅助函数在说明了功能后可以直接使用，没必要完整的写出来。这里放一篇 pseudo code 的参考文章 大家可以看一下教程上给的代码示例，如 4.8 Heapsort 这一章的伪代码    海盗分金 上交作业的同学必做部分（m=5）基本都得分了。泛化的情况属于选做部分，很多同学都给出了思路，主要失分点在于没有考虑到&amp;quot;乐观&amp;quot;这一条件
以下给一个 python 参考代码
def solve(m, n): &amp;#34;&amp;#34;&amp;#34;解决海盗分金问题，时间复杂度 O(m^2lgm)；使用一些技巧可优化到 O(m^2) Args: m (int): 海盗数 n (int): 金币数 Returns: (list): 由第一个人分配，每个人期望分到的金币数，-1 表示无法存活 &amp;#34;&amp;#34;&amp;#34; # 临界情况 if m == 1: return [n] # 递归：规约问题到 m-1 个海盗 plan = solve(m-1, n) # 按照 m-1 个海盗时每个人期望获得的金币数从小到大排序 sorted_plan = sorted(zip(plan, list(range(m-1)))) current_plan = [0] * m remain_money = n # 第一个海盗需要在剩下 m 个海盗中争取到 m/2（下取整）个同意票 for i in range(m//2): expected_money, member_id = sorted_plan[i] expected_money += 1 # 嗜血：需要多给一个金币赢取同意 remain_money -= expected_money # 如果金币不够分了，则无法存活 if remain_money &amp;lt; 0: return plan + [-1] else: current_plan[member_id] = expected_money # 第一个海盗可以获得剩余所有金币 # 注意：到目前为止，去除 -1，current_plan 之和为 n # 此时得到的是一个可行的分配方案 current_plan[-1] = remain_money # 乐观：对于最后需要赢得同意的海盗，可能只需在多人中选部分即可 # 但所有持相同期望金币的都认为自己会被选到，在此要更新他们认为的期望金币 # n &amp;gt;= 6 时乐观起作用 while i+1 &amp;lt; m and sorted_plan[i][0] == sorted_plan[i+1][0]: i += 1 expected_money, member_id = sorted_plan[i] current_plan[member_id] = expected_money + 1 return current_plan 扔鸡蛋 必做题 为了计算 $f(k,m)$，假设在第 $i$ 层楼扔一个蛋。如果碎了，我们还剩 $k-1$ 个蛋，强度肯定小于 $i$，故问题化为 $f(k-1, i)$；如果没碎，把第 $i$ 层楼看做是新的一楼，则问题化为 $f(k, m-i)$。最坏情况是两者的最大值，为了取得最优，我们选择最佳的第 $i$ 层。</description>
    </item>
    
    <item>
      <title>Adversial Learning 综述</title>
      <link>https://zhengzangw.com/notes/research/adversial-learning/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/adversial-learning/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CNN backbones</title>
      <link>https://zhengzangw.com/notes/research/3-cnn-backbones/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/3-cnn-backbones/</guid>
      <description>CNN backbones 结构介绍
 LeNet5(1998) AlexNet8(2012) VGG(2014)  VGG16 VGG19   GoogLeNet22(2014)  Inception v1-v4   ResNet(2015)  ResNet50 ResNet101   DRN-26  Semantic Segmentation  $p_{ij}$: 被预测为 $j$ 类样本的 $i$ 类样本 Pixel Accuarcy: $\text{PA}=\frac{\sum_{i=0}^kp_{ii}}{\sum_{i=0}^k\sum_{j=0}^kp_{ij}}$ Mean Pixel Accuracy: $\text{MPA}=\frac{1}{k}\sum_{i=0}^k\frac{p_{ii}}{\sum_{j=0}^kp_{ij}}$ Mean Intersection over Union: $\text{MIoU}=\frac{1}{k}\sum_{i=0}^k\frac{p_{ii}}{\sum_{j=0}^kp_{ij}+\sum_{j=0}^kp_{ji}-p_{ii}}$ Frequency Weighted Intersection over Union: $\text{FWIoU}=\frac{1}{\sum_{i=0}^k\sum_{j=0}^kp_{ij}}\sum_{i=0}\frac{p_{ii}\sum_{j=0}^kp_{ij}}{\sum_{j=0}^kp_{ij}+\sum_{j=0}^kp_{ji}-p_{ii}}$  架构
 FCN-8s DeepLab V2  </description>
    </item>
    
    <item>
      <title>Contrastive Learning 综述</title>
      <link>https://zhengzangw.com/notes/research/constrastive-learning/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/constrastive-learning/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Datasets</title>
      <link>https://zhengzangw.com/notes/research/2-datasets/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/2-datasets/</guid>
      <description> Place365 CIFAR-10 ImageNet SVHN  </description>
    </item>
    
    <item>
      <title>Domain Adapation 综述</title>
      <link>https://zhengzangw.com/notes/research/domain-adaptation/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/domain-adaptation/</guid>
      <description>Adversial  GAN: $\min_G\max_D V(D,G)=E_{x\sim p_{\text{data}(x)}}[\log D(x)]+E_{z\sim p_z(z)}[\log (1-D(x))]$ cGAN: $\min_G\max_D V(D,G)=E_{x\sim p_{\text{data}(x|y)}}[\log D(x)]+E_{z\sim p_z(z)}[\log (1-D(x|y))]$  paired data generate   BicycleGAN: diverse output Cycle GAN: no need of paired data 泛化性：所有模型都是需要先用有限的训练样本来训练的，那么由这些有限样本训练得到的模型可不可以从这些有限训练样本中生成出新的样本，而非简单地记着训练集 GAN 的问题  训练过程难以收敛，经常出现震荡；实验结果随机，难以复现； mode collapse：只生成某一模式 生成了一些没有意义、或者现实中不可能出现的图片    Graphical models DA Dataset  Digital Recognition  MNIST USPS SVHM   Autodriving  SYNTHIA: 1280x760 GTA5: 1914x1052 CityScapes BDD100K Mapillary    Leading results in DA GTA5-&amp;gt;CitySpaces, VGG16-FCN8s, mIoU</description>
    </item>
    
    <item>
      <title>Semi-Supervised Learning 综述</title>
      <link>https://zhengzangw.com/notes/research/semi-supervised-learning/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/semi-supervised-learning/</guid>
      <description></description>
    </item>
    
    <item>
      <title>More Info</title>
      <link>https://zhengzangw.com/notes/abstract/info/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/abstract/info/</guid>
      <description>Problem with Markdown Rendering There is a conflict between MathJax and Markdown Render Engine. My notes will follow markdown grammar and as a result, some formula may not be correctly rendered.
Intersection of course content  Problem Solving/Linear Programming -&amp;gt; Advanced Algorithm/Linear Programming Problem Solving/Group Theory -&amp;gt; Modern Algebra/Basics of Group Theory Advanced Algorithm/Probabilistic Inequality -&amp;gt; Probabiliity and Mathematical Statistics/Probabilistic Inequality  Category  M: Math P: Physics A: Algorithm S: System +: Application R: Research Theory E: Language L: Computer Language D: Draft  </description>
    </item>
    
    <item>
      <title>9-Deep-Relief-Network</title>
      <link>https://zhengzangw.com/notes/deep-learning/9-deep-reilef-network/</link>
      <pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/9-deep-reilef-network/</guid>
      <description>玻尔兹曼机  动力系统：描述一个空间中所有点随时间变化情况 Boltzmann Machine: a Stochastic Dynamical System  每个随机变量二值：$X\in{0,1}^K$，可观察变量 $V$，隐变量 $H$ 所有结点全连接 每两个变量间影响对称   玻尔兹曼分布：$p(x)=\frac{1}{Z}\exp(\frac{-E(x)}{T})$  $E(x)=E(X=x)=-(\sum_{i&amp;lt;j}\omega_{ij}x_ix_j+\sum_ib_ix_i)$ $\frac{p_\alpha}{p_\beta}=\exp(\frac{E_\beta-E_\alpha}{kT})$   全条件概率：$p(x_i=1|x_{\backslash i})=\sigma(\frac{\sum_j\omega_{ij}x_j+b_i}{T})$ 生成模型：吉布斯采样生成服从 $p(x)$ 的函数  随机选择变量 $X_i$，根据 $p(x_i|x_{\backslash i})$ 设置状态，运行到热平衡 $T$ 越高越容易达到热平衡 $T\rightarrow+\infty$: 每个状态一样 $T\rightarrow 0$：退化为 Hopfield 网络   模拟退火寻找全局最优解：以概率 $\sigma(\frac{\Delta E_i(x_{\backslash i})}{T})$ 将变量设置为 1 参数学习  可观测变量 $v\in{0,1}^{K_v}$ 隐变量：$h\in{0,1}^{K_h}$ 对数似然：$L(D;W,b)=\frac{1}{N}\sum_{n=1}^N\log p(\hat v^{(n)};W,b)$    受限玻尔兹曼机  隐变量与可观察变量全连接 $E(v,h)=-a^\top v-b^\top h-v^\top Wh$ $p(v,h)=\frac{1}{Z}\exp(-E(v,h))$ 生成模型  $p(v_i|v_{\backslash i,h})=p(v_i|h)$ $p(v_i=1|h)=\sigma(a_i+\sum_j\omega_{ij}h_j)$ 吉布斯采样：并行对所有隐变量/可观测变量采样，快速达到热平衡   参数学习 对比散度算法 受限玻尔兹曼机类型  伯努利-伯努利 BB-RBM 高斯-伯努利 GB-RBM 伯努利-高斯 BG-RBM    深度信念网络  每层变量依赖于上一层变量，最底层为可观测变量 逐层训练：每层看做玻尔兹曼机  </description>
    </item>
    
    <item>
      <title>7-Unsupervised Learning</title>
      <link>https://zhengzangw.com/notes/deep-learning/7-unsupervised/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/7-unsupervised/</guid>
      <description>Unsupervised Feature Learning   PCA
  Sparse Coding（字典学习）
  自编码器
  编码器：$f:\mathbb{R}^D\rightarrow\mathbb{R}^M$
  解码器：$g:\mathbb{R}^M\rightarrow\mathbb{R}^D$
  优化目标：最小化重构错误
$$L=\sum_{n=1}^N|x^{(n)}-g(f(x^{(n)}))|+\lambda|W|^2$$
  捆绑权重：$W^{(2)}=W^{(1)\top}$
    稀疏自编码器
  $M&amp;gt;D$ 且 $z$ 稀疏
$$L=\sum_{n=1}^N|x^{(n)}-g(f(x^{(n)}))|+\eta\rho(Z)+\lambda|W|^2$$
  稀疏性度量函数：$\rho$
  $l_1$ 范数：$\rho(z)=\sum_{m=1}^M|z_m|$
  对数函数：$\rho(z)=\sum_{m=1}^M\log(1+z_m^2)$
  指数函数：$\rho(z)=\sum_{m=1}^M-\exp(-z_m^2)$
  $\rho(z)=\sum_{j=1}^p\text{KL}(\rho^*|\hat\rho_j)$
第 $j$ 个神经元激活概率近似（平均活性值）：$\hat\rho_j=\frac{1}{N}\sum_{n=1}^Nz_j^{(n)}$
      堆叠自编码器
  降噪自编码器：先根据一 个比例 $𝜇$ 随机将 $𝒙$ 的一些维度的值设置为 $0$，得到一个被损坏的向量 $𝒙̃$，然后将被损坏的向量 $𝒙̃$ 输入给自编码器得到编码 $𝒛$，并重构出无损的原始输入 $𝒙$。</description>
    </item>
    
    <item>
      <title>Self-Supervised Learning 综述</title>
      <link>https://zhengzangw.com/notes/research/self-supervised-learning/</link>
      <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/self-supervised-learning/</guid>
      <description>Imagenet  PASCAL VOC: 20 classes, $3\times10^4$ Imagenet-40 ILSVRC (Imagenet-1K): 1000 classes, $1.28\times 10^6$ IMAGENET: 20000 classes, $1.5\times10^7$  pretext tasks  Crop Resize Flip Rotate Color distort  drop jitter   Gaussian noise Gaussian blur Sobel filtering  Contrastive Learning Framework  特点  在 feature space 上构建度量距离 通过特征不变性，得到多种预测结果 使用 Siamese Network 无需 pixel-level 重建    Generative Methods  AE VAE GAN  </description>
    </item>
    
    <item>
      <title>Information</title>
      <link>https://zhengzangw.com/notes/research/1-essays/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/1-essays/</guid>
      <description>会议 录取率为 2019 数据，截稿时间约提前 5 个月
 AAAI(The AAAI Conference on Artificial Intelligence): AI, 2 初, AC 1591 20.6% IJCAI(International Joint Conference on Artificial Intelligence): AI, 8 末, AC 850, 17.9% NeurIPS(Conference on Neural Information Processing Systems): ML, 12 初, AC 1428 21% ICML(International Conference on Machine Learning): ML, 7/8 初, 774 22.6% ICCV(International Conference on Computer Vision): CV, 10 初, AC, 621 29% CVPR(Conference on Computer Vision and Pattern Recognition): CV, 7 末, AC 1300 25.</description>
    </item>
    
    <item>
      <title>注意力机制与外部记忆</title>
      <link>https://zhengzangw.com/notes/deep-learning/6-attention-and-memory/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/6-attention-and-memory/</guid>
      <description>注意力机制  认知神经科学中的注意力  聚焦式注意力 基于显著性的注意力 鸡尾酒会效应   基于显著性的注意力机制：最大汇聚、门控 注意力分布：  输入变量：$[x_1,\cdots,x_N]$ 查询变量：$q$ 注意力变量：$z=n$ 选择第 $n$ 个输入变量 注意力打分函数：$s(x,q)$  加性模型：$s(x,q)=v^\top \tanh(Wx+Uq)$ 点积模型：$s(x,q)=x^\top q$ 缩放点积模型：$s(x,q)=\frac{x^\top q}{\sqrt{D}}$ 双线性模型：$s(x,q)=x^\top Wq$   注意力分布：$\alpha_n=p(z=n|X,q)=\text{softmax}(s(x_n,q))$   软性注意力机制：$\text{att}(X,q)=\sum_{n=1}^N\alpha_nx_n$ 硬性注意力机制：无法使用反向转播，通常用强化学习训练  $\text{att}=x_{\hat n},\hat n=\arg\max\alpha_n$ 随机采样   键值对注意力  输入信息：$[(k_1,v_1),\cdots,(k_N,v_N)]$ 注意力函数：$\sum_{n=1}^N\frac{\exp(s(k_n,q))}{\sum_j\exp(s(k_j,q))}v_n$   多头注意力：$\text{att}((K,V),Q)=\oplus\text{att}((K,V),q_i)$ 结构化注意力 指针网络（2015）：序列到序列模型，输出下标  $p(c_{1:M}|x_{1:N})=\prod_{m=1}^M p(c_m|c_{1:(m-1)},x_{1:N})\approx\prod_{m=1}^Mp(c_m|x_{c1:c_{m-1}},x_{1:N})$ $p(c_m|c_{1:{(m-1)},x_{1:N}})=\text{softmax}(s_{m,n})$ $s_{m,n}=v^\top\tanh(Wx_n+Uh_m)$    自注意力模型  变长向量序列  卷积网络或循环网络编码 自注意力模型（内部注意力模型）   如果要建立输入序列之间的长距离依赖关系，可以使用以下两种方法：一种方法是增加网络的层数，通过一个深层网络来获取远距离的信息交互，另一种方法是使用全连接网络 QKV 模式  输入序列：$X=[x_1,\cdots,x_N]\in\mathbb{R}^{D_x\times N}$ 输出序列：$H=[h_1,\cdots,h_N]\in\mathbb{R}^{D_v\times N}$ 查询向量：$q_i\in\mathbb{R}^{D_k},Q=W_qX$ 键向量：$k_i,Q=W_qX\in\mathbb{R}^{D_k\times N}$ 值向量：$v_i,V=W_vX\in\mathbb{R}^{D_v\times N}$ $h_n=\text{att}((K,V),q_n)$    记忆  人脑记忆  整体效应储存（分布式） 周期性  长期记忆（结构记忆，知识） 短期记忆 工作记忆（约 4 组项目）   联想记忆：基于联想检索    记忆增强神经网络（MANN/MN）  基本模块  主网络（控制器） 外部记忆单元：分为多个记忆片段 $M=[m_1,\cdots,m_N]$ 读取模块：根据主网络的查询向量 $q_r$，读取 $r=R(M,q_r)$ 写入模块：根据主网络的查询向量 $q_\omega$ 和需写入信息 $a$ 更新 $M=W(M,q_\omega,a)$   按内容寻址：注意力机制  $r=\sum_{n=1}^N\alpha_n m_n$ $\alpha=\text{softmax}(s(m_n,q_r))$   端到端记忆网络（MemN2N,2015）：外部记忆只读  $m_{1:N}={m_1,\cdots,m_N}$ 转换成两组记忆片段 $A,C$ 分别用来寻址和输出 $r=\sum_{n=1}^N\text{softmax}(a_n^\top q)c_n$ $y=f(q+r)$ 多跳操作：$q^{(k)}=r^{(k-1)}+q^{(k-1)}$   神经图灵机（2014）  外部记忆：$M\in\mathbb{R}^{D\times N}$ 控制器：神经网络 每个时刻 $t$，接受 $x_t,h_{t-1},r_{t-1}$ 输出 $h_t$，生成查询向量 $q_t$，删除向量 $e_t$ 和增加向量 $a_t$ 读操作：$\alpha_{t,n}=\text{softmax}(s(m_{t,n},q_t))$  读向量：$r_t=\sum_{n=1}^N\alpha_{t,n}m_{t,n}$   写操作：$m_{t+1,n}=m_{t,n}(1-\alpha_{t,n}e_t)+\alpha_{t,n}\alpha_t$    基于神经动力学的联想记忆  Hopfield 网络  状态：${+1,-1}$ 更新规则：$s_i=s_i+\text{sgn}(\sum_{j=1}^M\omega_{ij}s_j+b_i)$ 能量函数：$E=-\frac{1}{2}\sum_{i,j}\omega_{ij}s_is_j-\sum_ib_is_i$ 权重对称：$\omega_{ii}=0,\omega_{ij}=\omega_{ji}$ 稳定性：能量函数多次迭代后收敛 吸引点：稳定状态，局部最优点，有限，网络储存的模式 信息储存（学习规则）：赫布规则 $\omega_{ij}=\frac{1}{N}\sum_{n=1}^Nx_i^{(n)}x_j^{(n)}$ 储存容量：数量为 $M$ 的二值神经元网络，总状态数为 $2^M$，有效稳定点状态数即储存容量  Hopfield: 0.</description>
    </item>
    
    <item>
      <title>Numbers in Population</title>
      <link>https://zhengzangw.com/posts/number-of-people/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/number-of-people/</guid>
      <description>行政级别  国 部（省） 局（厅） 处（县） 科（乡）  人口 2015~2019 间约数
 总人口: 1.4e9 0-15: 2.5e8 &amp;gt;60 : 2.5e8 出生人数：1.6e7 死亡人数：1.1e7 净增长：4e6 学历  大学 1.7e8 高中 2.1e8 初中 4.8e8 小学 3.3e8   一届学生  高中：1.3e7 普高：0.8e7 高考：1e7  江苏高考：33.9 万 南大：&amp;lt;1500 双一流：1 万   高等：0.76e7 普高：0.42e7 双一流：2% 硕士：7.5e5 博士：0.8e5   留学生(18)：66.2 万 网民(19)：8.4e8 (61.2%)  学生 26% 个体户、自由职业者 20%    收入 病  HPV: 7900 万美国人  </description>
    </item>
    
    <item>
      <title>Overview of Universities</title>
      <link>https://zhengzangw.com/posts/schools/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/schools/</guid>
      <description>CS Ranking  清北上浙南复中 AI: 清北中南浙复 Theory  Algorithm &amp;amp; complexity 上财、南大、清华 Cryptography 清 logic &amp;amp; verification 清南   Interdisciplinary  bio 清复 CG 浙清深北 eco 上财、清 HCI 清北南 Robitics visualization   System: 清北上  SE: 北南 PL: 南 OS Measurement &amp;amp; perf analysis Mobile computing 清 HPC 清上 E&amp;amp;R sys Design automation(EDA) Database 清 Comp Sec 浙 Network Arch   英国 AI  爱丁堡 NLP, ML 牛津 AI   美国 AI: CMU, Cornel, Stanford, Illinois UC, MIT, Washington, UCLA  中国大学  总数 2956 + 44  普高 2688  独立学院 257 公安院校、艺术院校、建筑院校、中医药、示范性软件学院   成人 268 军事 44   大学为厅级单位 归属部门  解放军、武警 省、省教育厅 教育部 部：工业和信息化部（国防七子）   双一流  A 36 B 6 建设 95   985: 39 211: 112 中西部高校基建工程: 100 C9: 9 中外合办：9+3  实验室  国家重点实验室：253 国家实验室：4 重点学科  一级 286 二级 677    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/artificial-intelligence/9-information-theory/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/artificial-intelligence/9-information-theory/</guid>
      <description>基本概念  随机变量：$S$ 信息：消除随机变量不确定性的事物  信息量与传播媒介无关 信息是相对的 信息是客观物理量   噪音（非信息） 数据 = 噪音 + 信息 信源：产生信息的实体  信源符号 $s_i$ 发生概率 $p_i$   自信息：$I(s_i)=-\log p_i$ 信息熵：$H(S)=\sum_{i=1}^np_iI(s_i)$  信源发出符号平均信息量，衡量不确定度 编码的最优策略 二为底：bit e 为底：纳特   条件自信息：$I(x_i|y_j)=-\log p(x_i|y_i)$ 条件熵：$H(X|Y)=E[I(x_i|y_j)]=-\sum_{i=1}^m\sum_{j=1}^np(x_i,y_j)\log p(x_i|y_j)$ 互信息：$I(X|Y)=H(X)-H(X|Y)=H(Y)-H(Y|X)$  接受到一个变量使另一个变量不确定度减少的量   联合熵：$H(X,Y)=-\sum_{i=1}^m\sum_{j=1}^np(x_i,y_j)\log p(x_i,y_j)$ 交叉熵：$H(P,Q)=-\sum_{i}p_i\log q_i$  $P$ 基于 $Q$ 编码时平均比特数   相对熵（KL 散度，信息增益）：$D_{\text{KL}}(P||Q)=-\sum_i p_i\ln\frac{q_i}{p_i}$  使用基于 $Q$ 的分布来编码服从 $P$ 的分布的样本所需的额外的平均比特数 $H(p,q) = H(p) + D_{\text{KL}}(P||Q)$    </description>
    </item>
    
    <item>
      <title>Grouping and Segmentation</title>
      <link>https://zhengzangw.com/notes/computer-vision/3-grouping-and-fitting/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-vision/3-grouping-and-fitting/</guid>
      <description>Grouping  Goals  Gather features that belong together obtain an intermediate representation that cmopactly describes key image or video parts   Top down segmentation: pixels belong together because they are from the same object Bottom up segmentation: pixels belong together because they look similar Gestalt Theory  Whole is greater than sum of its parts Relationships among parts can yield new properties/features    Segmentation  K-means clustering Probabilistic clustering Mixture of Gaussians GMM Mean-shift Algorithm  </description>
    </item>
    
    <item>
      <title>Camera</title>
      <link>https://zhengzangw.com/notes/rendering/5-camera/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/rendering/5-camera/</guid>
      <description>pinhole camera  near plane - far plane NDC: normalized device coordinate space  从 (0,0,0) 到 (1,1,1) 设备无关   Raster space: NDC 乘以分辨率 look-at Transformation Orthographic projection Perspective project 坐标系汇总  World space：场景坐标系 Object space：以物体为中心的坐标系 Camera space：(orgin: camera position, z: viewing direction, y: updirection) Normalized device space Raster space: from (0,0,0) to (xRes, yRes, 1)    thin lens  薄透镜：光线只折射一次 光线  Parallel Ray Focal Ray Chief Ray   $\frac{1}{f}=\frac{1}{u}+\frac{1}{v}$ Depth of Field:the range of distances from the lens at which objects appear in focus Circle of confusion(coc) 五位空间采样  x,y 采样 u,v 透镜采样 时间采样   真实相机特有效果  Vignetting 渐晕：亮度不均匀；打到一个透镜后，能量无法全部打到第二个透镜 Distortion 镜头畸变（鱼眼镜头） Chromatic Aberration：不同颜色的光的折射率不同 Bokeh 散焦：高光由于镜头原因出现散斑 Lens Flare：拍特别亮的光源出现多组亮光；透镜出现反射 Interflection    </description>
    </item>
    
    <item>
      <title>Sampling &amp; Reconstruction</title>
      <link>https://zhengzangw.com/notes/rendering/6-sampling/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/rendering/6-sampling/</guid>
      <description>Math  Fourier Series: 任意周期为 $1$ 的函数可表示为 $\frac{a_0}{2}+\sum_{n=1}^N(a_n\cos(2\pi nt)+b_n\sin(2\pi nt))$ $f(x)=\sum_{n=-N}^Nc_ne^{2\pi int},c_n=\int_0^1e^{-2\pi int}f(t)dt$ $(f*g)(t)=\int_{-\infty}^{\infty} g(t-x)f(x)dx$ $\Pi(x)=[|x|\leq 1]$ $(\Pi*\Pi)(x)=\Lambda(x)$ Radical Inverse  $n=a_k\cdots a_2a_1$ $\Phi_b(n)=0.a_1a_2\cdots a_k$   Van der Corput Sequence: $x_i=\Phi_2(i)$ Halton Sequence: $x_i=(\Phi_2(i),\Phi_3(i),\Phi_5(i),\dots,\Phi_{p_d}(i))$ Hammersley Sequence: $x_i=(\frac{i-\frac{1}{2}}{N},\Phi_2(i),\Phi_3(i),\Phi_5(i),\dots,\Phi_{p_{d-1}}(i))$  Reconstruction  时间域  冲激串 $\delta_T$ 重建 $\widetilde f(x)=(\delta f)\otimes r$ 重构核 $r$  sinc 高斯 三角     频率域  $\widetilde F=(F(\omega)\otimes \delta_{1/T})\Pi_T(\omega)$   reconstruction filter  ideal ones not exist Box Filter Triangle Filter Gaussian Filter Mitchell Filter Windowed Sinc Filter   Denoising  Aliasing  Small triangles Stairstepping(jaggies) Moire Patterns 车轮倒转  Source of High Frequencies  Geometry  Edges, Vertices, sharp boundaries silhouettes   Texture Illumination  Antialiasing Techiques  Nonuniform sampling: $\sum_{i=-\infty}^{\infty}\delta(x-(i+\frac{1}{2}-\xi)T)$  noise better than aliasing   Adaptive sampling: Taking more samples in high-frequency regions Prefiltering: mipmap  Evaluating  Blue noise property  白噪：完全随机采样，处处有能量 蓝噪：低频无能量，低频完美重构，高频转化为噪声   gittered grid Poisson Disk Sampling  Dart Throwing: keep throwing darts into a domain with minimum distance constrain Lloyd&amp;rsquo;s Relaxation  construct voronoi move to centroid   Tiled   Discrepany: how &amp;ldquo;uniform&amp;rdquo; the sampling pattern is  $D_N(B,P)=|\sum_{b\in B}\frac{#{x_i\in b}}{N}-\text{Vol}(b)|$    采样方法  Uniform Sampling Random Sampling Blue noise Sampling Stratified Sampling  Uniform sample + random perturbation (jittering)   Low-Discrepancy Sampling(quasi-random sampling)  Sample with Van der Corput Sequence $D^*_N(P)=O(\frac{\log N}{N})$ Sample with Halton Sequence: $D^*_N(P)=O(\frac{(\log N)^d}{N})$    </description>
    </item>
    
    <item>
      <title>Terms in stock trading</title>
      <link>https://zhengzangw.com/posts/stock-index/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/stock-index/</guid>
      <description>基本术语  股票分析：基本面，技术面，消息面，资金面，政策面 趋势行情与振荡行情  K 线  柱上下：收盘价 $C_n$ 与开盘价 线上下：最高值 $H_n$ 和最低值 $L_n$ 颜色  Red：$C_n&amp;gt;$ 开盘价 Green: $C_n&amp;lt;$ 开盘价    VOL  成交量：单边计算，单位为手（1 手 = 100 股）  缩量：成交量萎缩   交易量：双边计算（成交量 ×2) 成交额 = 成交量$\times$成交价 颜色：收盘价高于或等于开盘价为红色，反之绿色  均线  $\text{MA}(n)=\frac{1}{n}\sum_{k=0}^{n-1}C_{n-k}$ $\text{EMA}(n)=\frac{2}{N+1}\sum_{k=0}^\infty(\frac{N-1}{N+1})^kC_{n-k}$  MACD  $\text{DIF} = \text{EMA}(12)-\text{EMA}(26)$  $|\text{DIF}|$：长短期均线距离大小 $\text{DIF}&amp;gt;0$：股票上涨   $\text{DEA} = \text{EMA}(\text{DIF}, 9)$ $\text{MACD} = 2(\text{DIF}-\text{DEA})$ 金叉：上穿 死叉：下穿  RSI  $A=\sum_{i}(C_i-C_{i-1})[C_i-C_{i-1}&amp;gt;0]$ $B=\sum_{i}(C_{i-1}-C_{i})[C_i-C_{i-1}&amp;lt;0]$ $\text{RSI}=100\frac{A}{A+B}$  KDJ  $\text{RSV}(n)=100\frac{C_t-L_t}{H_n-L_n}$ $\text{K}(n)=\frac{2}{3}K(n-1)+\frac{1}{3}\text{RSV}(n)$ $\text{D}(n)=\frac{2}{3}D(n-1)+\frac{1}{3}\text{K}(n)$  W%R  $\text{W%R}=100\frac{H_n-C_n}{H_n-L_n}$ 中短期  OBV 能量潮指标</description>
    </item>
    
    <item>
      <title>Interesting facts about social engineering</title>
      <link>https://zhengzangw.com/posts/social-engineering/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/social-engineering/</guid>
      <description>社工攻击  熟人攻击 伪造相似的信息背景 伪装成新人打入内部 利用面试机会 通过兴趣、话题、出现场所和肢体语言拉进距离 美人计 伪装技术顾问 伪装弱势群体  </description>
    </item>
    
    <item>
      <title>Features and Filters</title>
      <link>https://zhengzangw.com/notes/computer-vision/2-features-and-filters/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-vision/2-features-and-filters/</guid>
      <description>Images and Filtering   Digital Image
  Bayer Filer：相机滤色版每个点有三个值，一个为传感器得到，两个为插值
  Image transformation
Use of Filtering
 Enhance an image Extract infromation Detect patterns  Three views of filtering
 Image filters in spatial domain Image filters in frequency domain Templates and Image Pyramids    Image noise and image smoothing
  Convolution operation
  Media filter
  Frequency Domain and Sampling  Fourier Transform Sampling  Template matching   correlation: bad</description>
    </item>
    
    <item>
      <title>台式机组装</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/choose-computer-2/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/choose-computer-2/</guid>
      <description>2014 年老电脑    设备 产品 价格     电源 LITEON 76   主板 C1B85M M-ATX 198   CPU i3-4160 269   显卡 AMD R7 240 218   内存 Kingston DDR3 4GB * 2 179*2   机械硬盘 WD 1TB 285   固态硬盘 KDATA SATA3 120G 129   机箱 Tt 启航者 S3 139   风扇  20   网卡 TP-LINK 双频 PCIE 75   光驱 Lenovo USB 18 倍 199   音响 PHILIPS SPA2201 83   键盘     鼠标     显示器 SAMSUNG S24D360 700     总价 2049 + 700  2019 年 低档家用机    设备 产品 价格     CPU i3-8100 (4/4) 869   显卡 Intel UHD 630 集显 0   内存 tigo 4G DDR4-2400 169   主板 影驰 H310M-A 240   SSD 威刚 SP580 120G 159   电源 Antec VP300P 140   散热 酷冷至尊 T20 39   机箱 航嘉 暗夜猎手 III 109     总价 1725  2019 年 中档游戏机    设备 产品 价格     CPU Ryzen5 3600 (6/12) 1399   显卡 XFX AMD 5700 2399   电源 海韵 游戏酷核 CORE GC650 电源 649   主板 MSI B450M MORTAR TI 729   内存 Kingston DDR4 8GB * 2 329*2   固态硬盘 WD 1TB M.</description>
    </item>
    
    <item>
      <title>introduction</title>
      <link>https://zhengzangw.com/notes/computer-vision/1-introduction/</link>
      <pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-vision/1-introduction/</guid>
      <description>计算机视觉  Image(video) -&amp;gt; (sensing device) -&amp;gt; (interpreting device) -&amp;gt; Interpretations Automatic understanding of images and video  Measurement: Computing properties of the 3D world from visual data Perception and interpretation: Algorithms and representations to allow a machine to recognize objects, scene and people   应用  Faces and digital cameras Video-based interfaces safety and security  Navigation, driver safety Monitoring pool Pedestrian detection Surveillance   Vison for medical and neuroimages   困难：Gap between low level signal and high level meanings  ill posed problem large variation: illumination, object pose, clutter, occlusions, intra-class appearance, viewpoint intra-class variation context complexity   Progress chart by dataset  Roberts 1963 COIL MIT-CMU Faces (2000) UIUC Cars INRIA Pedestrians MSRC 21 Objects (2005) Caltech-101 Caltech-256 PASCAL VOC (2010)：奠定了计算机视觉评价体系 Faces in the Wild 80M Tiny Images ImageNet：多；长尾 Birds-200   Tasks  Recogintion: General categories Large scale recognition Recognition in first-person view Object detection, instance segmentation image captioning image generation   CVPR&#39;19 by the numbers  Submissions: 5160 Accepted: 1294 Registered Attendees: 9227   Marr&amp;rsquo;s vision framework  computational level algorithmic/representational level implementational/physical level   Malik&amp;rsquo;s Perspective: Recognition, Reorganization, Reconstruction Important note: In general, computer vision does not work (except in certain situations/conditions)  </description>
    </item>
    
    <item>
      <title>笔记本选购</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/choose-computer/</link>
      <pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/choose-computer/</guid>
      <description>购买参数  模具  材质 外形 散热 接口   屏幕  尺寸 分辨率 材质 色域 刷新率   键盘  键程 布局   音响 安全：指纹锁，面容锁，防窥屏 重量  mac pro 15inch 1.83 千克   基础  CPU RAM 硬盘 显卡 电池    CPU 参数  架构  sandy bridge ivy bridge haswell skylake   核心，线程 频率：主频 = 外频 $\times$ 倍频  外频：基准频率   缓存 工艺 功耗  系列  酷睿 Core &amp;gt; 奔腾 Pentium &amp;gt; 赛扬 Celeron：桌面 凌动 Atom：智能手机 Quark SoC 可穿戴设备 至强 Xeon 安腾 Itanium ：服务器 标识  品牌标识符-Gen标志 SKU数值 产品线后缀 品牌标识符-Gen标志 产品线后缀 SKU数值   spu 属性（关键属性）：不会影响库存和价格的属性 sku 属性（销售属性） 产品线后缀  M：双核移动 K：允许超频 T：功耗优化 H：高性能核显，支持超线程技术 Q：四核 Y：极低功耗 U：超低功耗 X：当代最强   AMD：锐龙&amp;gt;AMD FX&amp;gt;APU&amp;gt;速龙&amp;gt;闪龙  RAM  DDR1, DDR2, DDR3, DDR4  硬盘 显卡 电池 </description>
    </item>
    
    <item>
      <title>transistor</title>
      <link>https://zhengzangw.com/notes/microelectronics/transistor/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/microelectronics/transistor/</guid>
      <description>半导体物理基础 半导体材料  导体：$\rho&amp;lt;10^{-4}\Omega\cdot$ cm 绝缘体：$\rho&amp;gt;10^9\Omega\cdot$ cm 半导体导电能力与温度，光照，掺杂浓度相关 典型半导体：硅 Si,锗 Ge,砷化镓 GaAs 半导体共价键结构：一般为四价元素，最外层四个电子被称为价电子，和周围四个原子的价电子分别形成共价键  本征半导体  本征半导体：化学成分纯净的半导体，物理结构呈单晶体形态。纯度到要达到 9 个 9 载流子：可以自由移动的带电粒子 电导率：与材料单位体积中所含的载流子数量相关，载流子浓度越高，电导率越高 本征激发：半导体受到光，热激发时，某些电子可以从外界获得挣脱共价键束缚的能量，从而离开原子成为自由电子，同时再共价键中留下相同数量的空穴 电子空穴对：由热激发而产生的自由电子和空穴对 空穴的移动是依靠相邻共价键中的价电子依次填充空穴来实现的 复合：当自由电子遇到空穴后相互结合形成一个新的共价键 在温度一定时，本征激发和复合会达到动态平衡 本征半导体的缺点：载流子少，导电性差，温度稳定性差  杂志半导体  定义：在本征半导体中掺入某些微量元素作为杂质，可以使半导体的导电性发生显著变化，主要掺入的是三价元素或五价元素 P 型半导体：掺入三价杂质元素(如硼，镓，铟)等  因三价原子和硅原子形成共价键时，缺少一个价电子从而留下一个空穴 多子：空穴 受主杂质：$N_A$ $N_A+n=p$   N 型半导体：掺入五价杂质元素(如磷)  多子：自由电子 $N_D+p=n$   漂移电流：在电场作用下，载流子在电场中的漂移运动形成的电流  $v_n=-\mu_nE,v_p=\mu_pE$ $\mu$: 载流子偏移率 $I=-vWHnq$   扩散电流：因浓度差，载流子从高浓度向低浓度扩散而形成的电流  PN 结  在一块本征半导体两侧扩散不同的杂质原子，使得一边为 P 型一边为 N 型，两边多子由于浓度差，向对方扩撒，从而内部的空间电荷区形成一个电场，内电场抑制多子扩散，同时促进少子漂移，最终达到平衡。P，N 型半导体接合面，离子薄层形成的 空间电荷区被称为 PN 结（空间电荷区，耗尽层，势垒区，非线性电阻） 单向导电性  在 PN 结外部加上电压，当 P 区电位高于 N 区电位，称为加上了正向电压，简称为正偏，反之为反向电压，简称反偏 正偏时，外部电压促进多子扩散，从而导致中间空间电荷区变窄，PN 结呈现的状态是低电阻状态，大的正向扩散电流 反偏时，外部电压一直多子扩散，促进少子漂移，从而导致空间电荷区变宽，PN 结呈现的状态是高电压，小的反向漂移电流。在一定温度下，本征激发形成的少子数量一定，此时形成的漂移电流一定，和外部电压无关，称为反向饱和电流 PN 结 $V$-$I$ 特性表达式：$i_D=I_S(e^{\frac{v_D}{V_T}-1})$   反向击穿  当反向电压达到一定数值时，反向电流突然快速增加的现象 分为电击穿(雪崩击穿，齐纳击穿)此时可逆，热击穿此时不可逆 雪崩击穿：空间电荷区的电子在电场中获得足够的动能撞击其他原子从而产生更多的自由电子-空穴对，新的电子又同样撞击其他原子，如此连锁反应，使得载流子数量雪崩式增加，从而导致电流急剧加大。具有正的温度系数 齐纳击穿：反向电压足够大时，在电场的作用下，价电子之间的共价键被拉断，从而价电子变成自由电子，自由电子在电场的作用下移动到 N 区，空穴移动到 P 区，使得电流急剧增大。常发生在掺杂浓度较高的 PN 结中，具有负的温度系数(温度升高，共价键更容易被破坏)    二极管  二极管：PN 结上加上引线和封装  单向导电性：整流,检波,开关 PN 结压降：温度传感器，参考电压 非线性电流-电压特性：调节电压，限制电压   结构分类  点接触型二极管 面接触型二极管 平面型二极管   硅二极管的死区电压$V_{th}=[0.</description>
    </item>
    
    <item>
      <title>How to prepare your interview</title>
      <link>https://zhengzangw.com/posts/interview-prepare/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/interview-prepare/</guid>
      <description>网前准备  网络面试准备  skype:  头像设置为大头像面带微笑 互相加 skype   网络质量：  选择网络好的地点 准备手机备用 可以用 skype 主动打过去，对方打过来越洋手机信号往往不好   通话背景  干净（如白墙），光源来自正前方 背景音低（如家里） 提前找同学模拟测试 skype 背景和格调   面试材料  准备好纸，笔 准备好 CV, PS, 成绩单（中英文）   提前60分钟就位 面试时看摄像头而非屏幕，面带微笑   穿着  business casual clothing: button-down shirt or a V-neck sweater women: formal-looking top, tie long hair 隐形眼镜   Thanks letter 先拟好，定点发出  问题准备  了解对方  教授(面试官)：他们正在找什么样的人？为什么是我?</description>
    </item>
    
    <item>
      <title>A Lecture Notes on studying oversea from NJU</title>
      <link>https://zhengzangw.com/posts/studying-abroad/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/studying-abroad/</guid>
      <description>&lt;h2 id=&#34;计算机硕士申请南大背景&#34;&gt;计算机硕士申请（南大背景）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;美国计算机硕士
&lt;ul&gt;
&lt;li&gt;专业：CS, Data Science, BA, 金融工程，金融数学，金融科技，AI, ML&lt;/li&gt;
&lt;li&gt;录取条件
&lt;ul&gt;
&lt;li&gt;GPA 重要性最高&lt;/li&gt;
&lt;li&gt;托福 GRE 要过线&lt;/li&gt;
&lt;li&gt;录取最多：CMU&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学院分析
&lt;ul&gt;
&lt;li&gt;斯坦福：看命&lt;/li&gt;
&lt;li&gt;CMU：方向多，注意避开 ML 方向，南大录取很多
&lt;ul&gt;
&lt;li&gt;两个软工：EE,CS 下各一个&lt;/li&gt;
&lt;li&gt;HCI: 不建议&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;伯克利：MENG/MSC 基本招收本国人多&lt;/li&gt;
&lt;li&gt;UIUC：MCS/Msc GRE 不重要
&lt;ul&gt;
&lt;li&gt;GPA 80 分左右 -&amp;gt; UIUC MIN(management of information)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;康奈尔：南大很少录取 硕士有奖&lt;/li&gt;
&lt;li&gt;佐治亚理工：对南大比较好&lt;/li&gt;
&lt;li&gt;加州理工：PHD 南航今年有录取&lt;/li&gt;
&lt;li&gt;UCLA：不招&lt;/li&gt;
&lt;li&gt;格罗比亚：硕士好录，博士男&lt;/li&gt;
&lt;li&gt;USSD：录取南大较多&lt;/li&gt;
&lt;li&gt;布朗，普度，莱斯，纽约，杜克：难度适中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;香港计算机硕士
&lt;ul&gt;
&lt;li&gt;香港大学(HKU)
&lt;ul&gt;
&lt;li&gt;专业：CS
&lt;ul&gt;
&lt;li&gt;Cyber Security, Multimedia Computing, Financial Computing, General Stream, 金融科技&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;录取条件：托福 80/雅思 6.0 GPA 4.0/5&lt;/li&gt;
&lt;li&gt;港大允许 EE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;港科(HKUST)
&lt;ul&gt;
&lt;li&gt;专业：IT，Big data，金融科技&lt;/li&gt;
&lt;li&gt;录取条件：托福 80/雅思 6.5 GPA 4.0/5&lt;/li&gt;
&lt;li&gt;reject EE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;港中(CUHK)
&lt;ul&gt;
&lt;li&gt;专业：CS，金融科技&lt;/li&gt;
&lt;li&gt;录取条件：托福 80/雅思 6.5 GPA 4.0/5&lt;/li&gt;
&lt;li&gt;reject EE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;英国工科硕士
&lt;ul&gt;
&lt;li&gt;帝国理工&lt;/li&gt;
&lt;li&gt;UCL
&lt;ul&gt;
&lt;li&gt;雅思 6.5, GPA 85&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;布里斯托&lt;/li&gt;
&lt;li&gt;谢菲尔德&lt;/li&gt;
&lt;li&gt;南安普顿&lt;/li&gt;
&lt;li&gt;曼切斯特&lt;/li&gt;
&lt;li&gt;KCL&lt;/li&gt;
&lt;li&gt;爱丁堡大学&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新加坡硕士
&lt;ul&gt;
&lt;li&gt;南洋理工(NTU)
&lt;ul&gt;
&lt;li&gt;专业：无 CS 学院，有 CS 专业，AI，金融科技&lt;/li&gt;
&lt;li&gt;需要 GRE 320+3.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;新加坡国立(NUS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>阿拉伯</title>
      <link>https://zhengzangw.com/notes/islam-culture/%E9%98%BF%E6%8B%89%E4%BC%AF/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/islam-culture/%E9%98%BF%E6%8B%89%E4%BC%AF/</guid>
      <description>语言，生活习俗相近，文化概念
 公元 4 世纪： 南北阿拉伯融合，开始形成 7 伊斯兰，之前为愚昧时代 闪族分支 语言属楔形文字，腓尼基人 游牧（贝都因人）和定居 冬夏商旅 丝带  公元7世纪阿拉伯半岛局势 水深火热
 西：希腊 东罗马 拜占庭 东：波斯 埃及 衣索匹亚：古老基督教  伊斯兰的崛起  一神与多神信仰 穆罕默德  麦加；故乡 麦迪纳   穆斯林：顺服伊斯兰的人 哈里发：阿布巴克 欧麦尔 奥斯曼 阿里 30年统治 先知时期 四位哈里发时期 乌麦牙王朝  </description>
    </item>
    
    <item>
      <title>Introduction to Collaborative Filtering</title>
      <link>https://zhengzangw.com/posts/collaborative-filtering/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/collaborative-filtering/</guid>
      <description>&lt;h2 id=&#34;recommandation&#34;&gt;Recommandation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Demographic-based Recommendation&lt;/li&gt;
&lt;li&gt;Content-based Recommendation&lt;/li&gt;
&lt;li&gt;Collaborative Filtering-based Recommendation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;collaborative-filtering&#34;&gt;Collaborative Filtering&lt;/h2&gt;
&lt;p&gt;Filtering: method of making automatic predictions about the interests of a user&lt;br&gt;
Collaborating: by collecting preferences or taste information from many users&lt;br&gt;
Underlying Assumption: if a person A has the same opinion as a person B on an issue, A is more likely to have B&amp;rsquo;s opinion on a different issue than that of a randomly chosen person.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introduction to Meta Learning</title>
      <link>https://zhengzangw.com/posts/meta-learning/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/meta-learning/</guid>
      <description>&lt;h1 id=&#34;problem-statement&#34;&gt;Problem Statement&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Mechanistic view
&lt;ul&gt;
&lt;li&gt;DNN model that can read in an entire dataset and make predictions for new data point&lt;/li&gt;
&lt;li&gt;Training this network uses a meta-dataset, which itself consists of many datasets, each for a different task&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Probabilistic view
&lt;ul&gt;
&lt;li&gt;Extract prior information from a set of tasks taht allows effcient learning of new tasks&lt;/li&gt;
&lt;li&gt;Learning a new task this prior and training set to infer most likely posterior parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;supervised learnings
&lt;ul&gt;
&lt;li&gt;$\arg\max\limits_{\phi}p(\phi|\mathcal{D})=\arg\max\limits_{\phi} \log p(\mathcal{D}|\phi)+\log p(\phi)$&lt;/li&gt;
&lt;li&gt;require large amounts of labeled data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Learning to Match</title>
      <link>https://zhengzangw.com/posts/learning-to-match/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/learning-to-match/</guid>
      <description>&lt;h1 id=&#34;problem&#34;&gt;Problem&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;QA (Question Ansering)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Machine Comprehension&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dialogue Systems&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ad-hoc Retrieval&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Learning to Rank&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Introduction to Spectral Clustering</title>
      <link>https://zhengzangw.com/posts/spectral-clustering/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/spectral-clustering/</guid>
      <description>&lt;h1 id=&#34;理论基础&#34;&gt;理论基础&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;邻接矩阵 $E$：$\omega_{ij}$ 为 $v_i$ 与 $v_j$ 的边权&lt;/li&gt;
&lt;li&gt;$D$: $d_i=\sum_{j=1}^n\omega_i$&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Lamda-2 Seminar</title>
      <link>https://zhengzangw.com/posts/seminar-19/</link>
      <pubDate>Wed, 11 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/seminar-19/</guid>
      <description>&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;
&lt;h2 id=&#34;审稿过程&#34;&gt;审稿过程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Initial Check: 1~14 days
&lt;ul&gt;
&lt;li&gt;Editor Assistant 检查文章格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;With Editor：14~30 days
&lt;ul&gt;
&lt;li&gt;Associate Editor: 对文章进行初步审查&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Under Review(Peer Review)：7~180 days
&lt;ul&gt;
&lt;li&gt;PC 3-5: Give Scores and Review/Comments&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Required Review Completed：1~5 days
&lt;ul&gt;
&lt;li&gt;Senior PC(SPC): judge reviews&lt;/li&gt;
&lt;li&gt;Rebuttal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Editor Decision
&lt;ul&gt;
&lt;li&gt;Area Chairs(AC): decide&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数学
&lt;ul&gt;
&lt;li&gt;数字信号处理&lt;/li&gt;
&lt;li&gt;随机过程&lt;/li&gt;
&lt;li&gt;矩阵论&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Gates</title>
      <link>https://zhengzangw.com/notes/quantum-computation/gate/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/quantum-computation/gate/</guid>
      <description>matrix = operator = gate
Single qubit operator  Pauli operators  $I=(1,0;0,1)$ $X=(0,1;1,0)$ (非门)  $X|0\rangle=|1\rangle,X|1\rangle=|0\rangle$   $Y=(0,-i;i,0)$  $Y=iXZ,XY=-YX,XZ=-ZX,YZ=-ZY$   $Z=(1,0;0,-1)$  $Z|0\rangle=|0\rangle,X|1\rangle=-|1\rangle$     Hadamard gate: $H=\frac{1}{\sqrt{2}}(1,1;1,-1)$  $H|0\rangle=|+\rangle=\frac{|0\rangle+|1\rangle}{\sqrt{2}},H|+\rangle=|0\rangle$ $H|1\rangle=|-\rangle=\frac{|0\rangle-|1\rangle}{\sqrt{2}},H|-\rangle=|0\rangle$ $H^{\otimes n}|0^n\rangle=\frac{1}{\sqrt{2^n}}\sum_{x\in{0,1}^n}|x\rangle$ $H|x\rangle=\sum_z\frac{(-1)^{xz}}{\sqrt{2}}|z\rangle$ $H^{\oplus n}|x\rangle=\frac{\sum_z(-1)^{x\cdot z}|z\rangle}{\sqrt{2^n}}$  $x\cdot z$: binary product mod 2   $HXH=Z,HZH=X,HYH=-Y$   Phase Gate: $S=(1,0;0,i)$ T gate($\frac{\pi}{8}$ gate): $T=(1,0;0,e^{i\frac{\pi}{4}})=e^{i\frac{\pi}{8}}(e^{-i\frac{\pi}{8}}, 0;0,e^{i\frac{\pi}{8}})$ Rotation  $R|0\rangle=\cos\theta|0\rangle-\sin\theta|1\rangle$ $R|1\rangle=\sin\theta|0\rangle+\cos\theta|1\rangle$    Approximating unitary operators  Bloch sphere and rotation operators  二维复平面球同构与三维实平面球同构 $SU(2)\cong SO(3)$ $|\varphi\rangle = \cos\frac{\theta}{2}|0\rangle+e^{i\varphi}\sin\frac{\theta}{2}|1\rangle$ $A^2=I,e^{i\theta A}=\cos(\theta)I+i\sin(\theta)A$ $R_{x}(\theta)=e^{\frac{-i\theta X/Y/Z}{2}}=\cos\frac{\theta}{2}I-i\sin\frac{\theta}{2}X$ $R_{y}(\theta)=e^{\frac{-i\theta X/Y/Z}{2}}=\cos\frac{\theta}{2}I-i\sin\frac{\theta}{2}Y$ $R_{z}(\theta)=e^{\frac{-i\theta X/Y/Z}{2}}=\cos\frac{\theta}{2}I-i\sin\frac{\theta}{2}Z$ $R_{\hat n}=e^{-i\hat n\cdot\frac{\vec\sigma}{2}}=\cos\frac{\theta}{2}I-i\sin\frac{\theta}{2}(n_xX+n_yY+n_zZ)$  $\hat n=(n_x,n_y,n_z)$ real unit vector     Z-Y decomposition: $U=e^{i\alpha}R_z(\beta)R_y(\gamma)R_z(\delta)$  $U=e^{i\alpha}(\beta)R_{\hat n}R_{\hat m}(\gamma)R_{\hat n}(\delta)$   $\lVert U-V\rVert=\max\limits_{|\psi\rangle}\lVert(U-V)|\psi\rangle\rVert$  $|\langle\psi|U^\dagger M_iU|\psi\rangle-\langle\psi|V^\dagger M_iV|\psi\rangle|\leq 2\lVert U-V\rVert$ $\lVert U_tU_{t-1}\cdots U_1-V_tV_{t-1}\cdots V_1\rVert\leq\sum_i\lVert U_i-V_i\rVert$   $THTH=R_{\hat n}(\theta),\theta=2\arccos(\cos^2\frac{\pi}{8}),\hat n=(\cos\frac{\pi}{8},\sin\frac{\pi}{8},\sin\frac{\pi}{8})$ up to a normalization  $T=R_z(\frac{\pi}{4})$ $HTH=R_x(\frac{\pi}{4})$ $THTH=\cos^{\pi}{8}I-i(\cos\frac{\pi}{8}(X+Z)+\sin\frac{\pi}{8}Y)\sin\frac{\pi}{8}$ Densely filled: $\forall\delta&amp;gt;0,N=\lceil\frac{2\pi}{\delta}\rceil+1,\exists k!</description>
    </item>
    
    <item>
      <title>TOFLE words</title>
      <link>https://zhengzangw.com/notes/english/tofle-words/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/english/tofle-words/</guid>
      <description> granary trough dank funnel recluse moron deputy disciple clutter chafe translucent morbid tingle relapse maxim farce deport abdicate prairie sequoia husk peel starch gorge creek invocation pious devout consecrate creed genial meek gracious crooked stamina ordeal valiant gallant valor extemporaneous impromptu nocturnal influx gush infuse imbue girdle homicide embezzle extort delude defraud accomplice abduct boon furrow shaft flay clinch hew tow harrow inaugurate concerted fraternal congenial haven depot canopy precipitous devious plight flounder vogue gorgeous homage embalm hilarious - hilarity sullen etiquette banquet ceremonial ceremonious chuckle trudge idyllic attire strap guise cosmetics sole drowsy doze bask holocaust carnage avalanche defunct unquenchable slander satirical = sardonic = sarcastic consort imperative evacuate enunciate elucidate expound colloquial outwit accost divulge pact gabble retort liaison insinuate frowzy defile fervent impeccable chaste prodigious tally emphatic suffuse queer quaint idiosyncrasy maim balmy palatable pungent impervious crisp crooked lithe fictitious figment occult cardinal optimum forte gist splendor radiant strife fulminate baste thump stab sheathe transfix impale beget revert revoke jumble befuddle muddle convene sprawl cohere forfeit decadence fortuitously constrict stuffy protrude dangle hump engross charisma enrapture fragmentary frail brittle cryptic secluded - seclusion lurk feign  Medium  overbearing haughty fussy presumptuous doleful deplore uncanny tremor sinister malevolent ferocious sicken uproar grouchy touchy enrage fret indefatigable sensuous ravenous exultant ecstasy bliss ravish inquisitive fluster abashed dread cower intimidate mania frenzy fanatic fanaticism ardor ardent readily zeal zest profane grudge begrudge contrite forlorn fishy incredulity poise rift connive connivance concession blunder tender embalm grope ferret tardy adjourn deterrent leash cram stray rumble scale 攀登 budge stroll asperse - aspersion taunt = deride = gibe = jibe flout berate = rap clamor = clamour hubbub impart squabble = bicker brawl haggle confide sloppy fraught hurl trample slump thrust spew dab plunge shove haul jolt heave clutch hoist singe regimen slag sojourn desolate bleak clod stodgy corpulent dodge garnish handicap barricade bereave enthrall vestige sturdy rupture tamper clog prod grievance irrepressible fortitude indomitable captivate disfigure outrageous ravage hideous scruple mangle scrap breach loot snag shatter raze crumple bigot - bigoted  </description>
    </item>
    
    <item>
      <title>VOA words</title>
      <link>https://zhengzangw.com/notes/english/voa-words/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/english/voa-words/</guid>
      <description>&lt;h2 id=&#34;voa&#34;&gt;VOA&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;purge 换气，清理&lt;/li&gt;
&lt;li&gt;backstop 后备方案&lt;/li&gt;
&lt;li&gt;Brexit&lt;/li&gt;
&lt;li&gt;quagmire 沼泽&lt;/li&gt;
&lt;li&gt;rhetoric 修辞&lt;/li&gt;
&lt;li&gt;gear up 促进&lt;/li&gt;
&lt;li&gt;MP = Memeber of Parliment&lt;/li&gt;
&lt;li&gt;tenet 信条&lt;/li&gt;
&lt;li&gt;genocide&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GRE words</title>
      <link>https://zhengzangw.com/notes/english/gre-words/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/english/gre-words/</guid>
      <description>&lt;h2 id=&#34;核心词汇重现&#34;&gt;核心词汇重现&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;abstruseness = elusiveness = opaqueness = arcane = obscureness = obfuscation = esoteric = impentrability = vague = nebulous&lt;/li&gt;
&lt;li&gt;tarnish = stain = blot = blemish = stagmatize = sully&lt;/li&gt;
&lt;li&gt;misconduct = misbehaviour = delinquency&lt;/li&gt;
&lt;li&gt;belie = mask = veil&lt;/li&gt;
&lt;li&gt;vocal = blunt = forthright = candid = candor = rectitude&lt;/li&gt;
&lt;li&gt;retaliate = revenge = retribution = vengeful&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GRE 知识</title>
      <link>https://zhengzangw.com/notes/english/gre-knowledge/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/english/gre-knowledge/</guid>
      <description>&lt;h1 id=&#34;历史&#34;&gt;历史&lt;/h1&gt;
&lt;h2 id=&#34;法国革命&#34;&gt;法国革命&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;原因&lt;/th&gt;
&lt;th&gt;事件&lt;/th&gt;
&lt;th&gt;结果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;法国大革命&lt;/td&gt;
&lt;td&gt;1789-1799&lt;/td&gt;
&lt;td&gt;自然灾害+七年战争，美国独立战争+经济危机&lt;/td&gt;
&lt;td&gt;1989攻占巴士底监狱，颁布人权宣言，路易十六上断头台，1792法国大革命战争，法兰西第一共和国，1793-1794恐怖统治（罗伯斯庇尔和雅各宾派），1795热月党执政&lt;/td&gt;
&lt;td&gt;1799拿破仑执政，法兰西第一帝国&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;七月革命&lt;/td&gt;
&lt;td&gt;1830.7&lt;/td&gt;
&lt;td&gt;波旁复辟治理不受欢迎&lt;/td&gt;
&lt;td&gt;革命在没有经过什么反抗的情况下完成&lt;/td&gt;
&lt;td&gt;巴黎成立新的君主立宪政体政权七月王朝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;二月革命&lt;/td&gt;
&lt;td&gt;1848.2&lt;/td&gt;
&lt;td&gt;七月王朝的失政&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;建立了法兰西第二共和国&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;巴黎公社&lt;/td&gt;
&lt;td&gt;1871.3&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;失败后法兰西第三共和国&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>GRE 笔记</title>
      <link>https://zhengzangw.com/notes/english/gre-notes/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/english/gre-notes/</guid>
      <description>&lt;h1 id=&#34;word-list&#34;&gt;Word List&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;GRE
&lt;ul&gt;
&lt;li&gt;verbal(170,2 sessions, 30m)
&lt;ul&gt;
&lt;li&gt;填空
&lt;ul&gt;
&lt;li&gt;10 阅读 (23-24min)
&lt;ul&gt;
&lt;li&gt;短： 1-2 题
&lt;ul&gt;
&lt;li&gt;ABCDE 单选&lt;/li&gt;
&lt;li&gt;ABC 不定项&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;长： 4-5 题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;10 填空 (6-7min)
&lt;ul&gt;
&lt;li&gt;Text Completion 6
&lt;ul&gt;
&lt;li&gt;1空 5选1&lt;/li&gt;
&lt;li&gt;2空 3选1&lt;/li&gt;
&lt;li&gt;3空 3选1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sentence Equivalence 4
&lt;ul&gt;
&lt;li&gt;6选2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;转折
&lt;ul&gt;
&lt;li&gt;句子转折&lt;/li&gt;
&lt;li&gt;时间转折&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;quantatitive(170, 2 sessions)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>String Algorithm</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-string/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-string/</guid>
      <description>&lt;h1 id=&#34;字符串匹配&#34;&gt;字符串匹配&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;$w\sqsubset x$：w 为 x 前缀&lt;/li&gt;
&lt;li&gt;$w\sqsupset x$: w 为 x 后缀&lt;/li&gt;
&lt;li&gt;后缀重叠引理：$x\sqsupset z,y\sqsupset z,|x|\leq|y|\Rightarrow x\sqsupset y$&lt;/li&gt;
&lt;li&gt;$P_k=P[1..k]$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;朴素方法&#34;&gt;朴素方法&lt;/h2&gt;
&lt;p&gt;$O((n-m+1)m)$&lt;/p&gt;
&lt;h2 id=&#34;rabin-karp-算法&#34;&gt;Rabin-Karp 算法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;预处理 $O(m)$
&lt;ul&gt;
&lt;li&gt;编码，利用对素数取模，减少计算量&lt;/li&gt;
&lt;li&gt;相等则逐字编码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最坏情况 $O((n-m+1)m)$&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Recommandation of Fonts</title>
      <link>https://zhengzangw.com/posts/info-fonts/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/info-fonts/</guid>
      <description>&lt;h1 id=&#34;字体&#34;&gt;字体&lt;/h1&gt;
&lt;h2 id=&#34;正文中文&#34;&gt;正文中文&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Source Han Sans CN: 思源黑体&lt;/li&gt;
&lt;li&gt;Source Han Serif CN: 思源宋体&lt;/li&gt;
&lt;li&gt;Gen Jyuu Gothic: 思源柔黑&lt;/li&gt;
&lt;li&gt;FZShuSong-Z01: 方正书宋&lt;/li&gt;
&lt;li&gt;FZKai-Z03: 方正楷体&lt;/li&gt;
&lt;li&gt;PangMenZhengDao: 旁门正道标题体&lt;/li&gt;
&lt;li&gt;huxiaobo-gdh: 站酷高端黑&lt;/li&gt;
&lt;li&gt;huxiaobo-kuhei: 站酷酷黑&lt;/li&gt;
&lt;li&gt;happyzcool-2016: 站酷快乐体&lt;/li&gt;
&lt;li&gt;PmingLiU-TW: 臺灣新細明體&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Introduction to Jupyter Notebook</title>
      <link>https://zhengzangw.com/posts/jupyter-notebook-introduction/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/jupyter-notebook-introduction/</guid>
      <description>&lt;h1 id=&#34;jupyter-notebook-introduction&#34;&gt;Jupyter-Notebook-Introduction&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://jupyter.readthedocs.io/en/latest/_static/_images/jupyter.svg&#34; alt=&#34;Jupyter&#34;&gt;&lt;/p&gt;
&lt;p&gt;本文为大家介绍 Jupyter Notebook 这一实用工具（原名 IPython Notebook），总共分为两个部分：安装与简介，使用与展示&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/ipython/ipython/blob/3.x/examples/Notebook/Index.ipynb&#34;&gt;官方教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jupyter Notebook 是一个交互式的编程环境，可以方便的供脚本语言（python, matlab）以及 REPL 化的其它语言进行编程、调试以及展示。&lt;br&gt;
更多内容见&lt;a href=&#34;https://nbviewer.jupyter.org/github/ipython/ipython/blob/3.x/examples/Notebook/What%20is%20the%20IPython%20Notebook.ipynb&#34;&gt;What is the IPython Notebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文也是使用 Jupyter Notebook 编写。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>词根</title>
      <link>https://zhengzangw.com/notes/english/english-roots/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/english/english-roots/</guid>
      <description>常用    词根 释义 实例     a- 加强 aloud    Term  coms(o) 宇宙，世界 astro/aster 星 heli/helio 太阳 sol  太阳的 孤独的   aer/aero 空气 aqua 水 hydro 水 col/coal 煤 lith 石头 sal 盐 geo 地球，土地 hum/humili 土地 terr 土地 loc/loco 地方 polit 城市，国家 urb 城市 mar 海 insul 岛 cav 洞 vi/voy 路 chro/tempo 时间 ann/enn 年 journ 日  Some  gen 产生 mot 移动 metro 母亲 drome 场地 naut 船 micro 小 macro 大 chrome 颜色 circum 环绕 super 在上 bat 走 sphere 球体 shed 库 plane 滑行 duct 引导  More  ad- to mal- 坏的 mono- 单独的 medi- 中间 mega- 大 para- 防护 semi- 半 peni- 半 pleni- 满 pre- 以前的 in- 不，在内 en- 在上 ex- 外 re- 重新 ob- 反对，上方 an- 相反 al- 强调 con- 强调;一起,相同 col- 一起 dis- 离开 sub-  附近 so- 下面   trans- 穿过 syn- 相同 -graphy 学说 -logy 科学 -nomy 法则 -ism 主义 -rium 场所 -ern 产所 -er 人 -ant 人或物 -time 有关的 -in 元素 -osis/asis 疾病 -meter 测量 -et 小 名词后缀  -ace -ane -age -ory -ity -ty   形容词后缀  -nean -ine -ar -ous -ic   动词后缀  -ate 使 -ize   bi- 二 per- 通  </description>
    </item>
    
    <item>
      <title>History</title>
      <link>https://zhengzangw.com/notes/machine-learning/others/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/machine-learning/others/</guid>
      <description>技术浪潮     神经网络 支持向量机 神经网络     年份 89-94 95-05 06-   代表性技术 BP 算法 核方法，统计学习理论 深度学习    生成式与判别式     判别式(discriminative) 生成式(generative)      对 $P(c\vert x)$ 建模 对 $P(c \vert x)=\frac{P(x,c)}{P(x)}$ 建模   实例 决策树，BP 神经网络，SVM 贝叶斯分类器   实际环境中问题 i.i.d. 改变，concept driven，后验概率不变     没有做“多余”工作 做了“多余”工作    神经网络发展史  第一阶段  1943 年, McCulloch 和 Pitts 提出第一个神经元数学模型, 即 M-P 模型, 并从原理上证明了人工神经网络能够计算任何算数和逻辑函数 1949 年, Hebb 发表《The Organization of Behavior》一书, 提出生物神经元学习的机理, 即 Hebb 学习规则 1958 年, Rosenblatt 提出感知机网络(Perceptron)模型和其学习规则 1960 年, Widrow 和 Hoff 提出自适应线性神经元(Adaline)模型和最小均方学习算法 1969 年, Minsky 和 Papert 发表《Perceptrons》一书, 指出单层神经网路不能解决非线性问题, 多层网络的训练算法尚无希望.</description>
    </item>
    
    <item>
      <title>日本語</title>
      <link>https://zhengzangw.com/notes/japanese/japanese/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/japanese/japanese/</guid>
      <description>&lt;h1 id=&#34;語法&#34;&gt;語法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;「名」は「名」です&lt;/li&gt;
&lt;li&gt;「名」も「名」です&lt;/li&gt;
&lt;li&gt;「名」は「名」ではありません
&lt;ul&gt;
&lt;li&gt;「名」は「名」じゃありません&lt;/li&gt;
&lt;li&gt;「名」は何もありませｎ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;「名」は「名」ですか
&lt;ul&gt;
&lt;li&gt;はい、そうです&lt;/li&gt;
&lt;li&gt;いいえ、ちがいます&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;「名」の「名」&lt;/li&gt;
&lt;li&gt;これ/それ/あれは「名」です&lt;/li&gt;
&lt;li&gt;この/その/あの「名」は「名」です&lt;/li&gt;
&lt;li&gt;ここ/そこ/あそこは「名」です
&lt;ul&gt;
&lt;li&gt;こちら/そちら/あちら&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;「名」はでれ/何/どこ/いくらですか
&lt;ul&gt;
&lt;li&gt;どなたですか&lt;/li&gt;
&lt;li&gt;どちら&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;どれ
&lt;ul&gt;
&lt;li&gt;どの「名」&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;「場所」に「名」があります/います&lt;/li&gt;
&lt;li&gt;「場所」で「動」&lt;/li&gt;
&lt;li&gt;「名」は「場所」にあります/います&lt;/li&gt;
&lt;li&gt;「名」と「名」&lt;/li&gt;
&lt;li&gt;「名」か「名」&lt;/li&gt;
&lt;li&gt;「名」や「名」&lt;/li&gt;
&lt;li&gt;「人」と「動」&lt;/li&gt;
&lt;li&gt;今〜時〜分です&lt;/li&gt;
&lt;li&gt;「動」ます/ません&lt;/li&gt;
&lt;li&gt;「動」ました/ませんでした&lt;/li&gt;
&lt;li&gt;「時間」に「動」&lt;/li&gt;
&lt;li&gt;「時間」から「時間」まで「動」&lt;/li&gt;
&lt;li&gt;いつ「動」ますか&lt;/li&gt;
&lt;li&gt;「場所」へ「動」&lt;/li&gt;
&lt;li&gt;「場所」から「動」「場所」まで「動」&lt;/li&gt;
&lt;li&gt;「交通機関」/「工具」で「動」&lt;/li&gt;
&lt;li&gt;「名」を「動」&lt;/li&gt;
&lt;li&gt;「人」は「人」に「名」をあげます&lt;/li&gt;
&lt;li&gt;「人」は「人」に「名」をもらいます&lt;/li&gt;
&lt;li&gt;「人」に会います&lt;/li&gt;
&lt;li&gt;「名」は「一类形」です
&lt;ul&gt;
&lt;li&gt;以「い」结尾　熱い&lt;/li&gt;
&lt;li&gt;否定：熱くないです/熱くありません&lt;/li&gt;
&lt;li&gt;过去：熱かった&lt;/li&gt;
&lt;li&gt;过去否定：熱くなかったです/熱くありませんでした&lt;/li&gt;
&lt;li&gt;「一类形」+「名」&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;あまり「一类形」/「動」&lt;/li&gt;
&lt;li&gt;「名」は「二类形」です/でした&lt;/li&gt;
&lt;li&gt;「名」は「二类形」ではありません/ありませんでした&lt;/li&gt;
&lt;li&gt;「名」は「二类形」な「名」です&lt;/li&gt;
&lt;li&gt;「名」でした/ではありませんでした&lt;/li&gt;
&lt;li&gt;どんな「名」&lt;/li&gt;
&lt;li&gt;情感：「人」は「名」が「形」です&lt;/li&gt;
&lt;li&gt;能力：「人」は「名」が分かります/できます&lt;/li&gt;
&lt;li&gt;から&lt;/li&gt;
&lt;li&gt;だから&lt;/li&gt;
&lt;li&gt;どうしてですか&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Set up your Android Development Environment on Macos</title>
      <link>https://zhengzangw.com/posts/android-develop/</link>
      <pubDate>Thu, 11 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/android-develop/</guid>
      <description>&lt;h2 id=&#34;mac-开发环境配置&#34;&gt;Mac 开发环境配置&lt;/h2&gt;
&lt;h3 id=&#34;install-java8&#34;&gt;Install Java8&lt;/h3&gt;
&lt;p&gt;java 8 is suitable for android-sdk&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew tap caskroom/versions&lt;/code&gt;
&lt;code&gt;brew cask install java8&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;开发环境&#34;&gt;开发环境&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;brew install ant&lt;/code&gt;&lt;br&gt;
&lt;code&gt;brew install maven&lt;/code&gt;&lt;br&gt;
&lt;code&gt;brew install gradle&lt;/code&gt;&lt;br&gt;
&lt;code&gt;brew cask install android-sdk&lt;/code&gt;
&lt;code&gt;brew cask install android-ndk&lt;/code&gt;&lt;br&gt;
&lt;code&gt;brew cask install intel-haxm&lt;/code&gt;&lt;br&gt;
&lt;code&gt;brew cask install android-studio&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Overview of Mobile Phones</title>
      <link>https://zhengzangw.com/posts/info-moblie-phone/</link>
      <pubDate>Tue, 09 Apr 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/info-moblie-phone/</guid>
      <description>&lt;p&gt;soc=cpu+gpu+(dsp+neon)+(modem)&lt;/p&gt;
&lt;h2 id=&#34;华为1987-&#34;&gt;华为（1987-）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;海思麒麟处理器
&lt;ul&gt;
&lt;li&gt;ARM 架构&lt;/li&gt;
&lt;li&gt;950,980&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;华为品牌（高端品牌，主打高端、工艺）
&lt;ul&gt;
&lt;li&gt;Mate系列：年末
&lt;ul&gt;
&lt;li&gt;7,8,9,10,20（5000￥）&lt;/li&gt;
&lt;li&gt;20: 980，4000mA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;P系列：年初
&lt;ul&gt;
&lt;li&gt;1,2,6,7,8,9,10,20（5000￥）&lt;/li&gt;
&lt;li&gt;20：EMUI 8.1 （基于8.1系统），970, 6GB, 3400mA, IP67&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;G/Nova系列&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;荣耀品牌（互联网品牌，主打高性价比、品质）：
&lt;ul&gt;
&lt;li&gt;荣耀系列：年中
&lt;ul&gt;
&lt;li&gt;6,7,8,9,10,Note 10（2500￥）&lt;/li&gt;
&lt;li&gt;V: 8,9,10,20（3000￥）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;畅玩系列：千元机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>All you need on Macos (2020)</title>
      <link>https://zhengzangw.com/posts/mac-all-in-one/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/mac-all-in-one/</guid>
      <description>&lt;p&gt;笔者 Mac 也用了三年，一直在寻找着适合 Mac 的配置、软件。今天准备第三次重装电脑（第一次是装驱动坏了返厂重修，第二次和这次一样，来个大整理）。希望这次重装后，能达到以下效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进一步加强文件管理，多用软件管理而非原生目录&lt;/li&gt;
&lt;li&gt;奥卡姆剃刀：如无必要，勿增实体&lt;/li&gt;
&lt;li&gt;在电脑上完成一整套学习和工作的工作流（Workflow）&lt;/li&gt;
&lt;li&gt;配置可复现化（降低 macos 新系统配置代价）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;希望这次重装后，我的整个工作环境能够稳定下来。本博客希望传递的知识是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让你知道，关于 Mac 你还有不知道的东西&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而不是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;让你知道，关于 Mac 你知道的东西怎么做&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在开始重装前，先介绍一下我为 mac 配的外设和硬件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;扩展坞/转接口：注意如果是金属的可能会影响 wifi 信号&lt;/li&gt;
&lt;li&gt;键盘 + 屏幕保护膜：后悔买迟了&lt;/li&gt;
&lt;li&gt;背面贴纸：没贴&lt;/li&gt;
&lt;li&gt;magic mouse：不怎么用，主要还是触控板&lt;/li&gt;
&lt;li&gt;1T 移动固态：电脑 500G 也不够用了。机械暂时不知道放哪合适&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们以重装的流程，组织介绍的顺序。在备份资料后，我们首先要做一下几部&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保存主目录下的 &lt;code&gt;.&lt;/code&gt; 文件（GNU stow），以方便快捷导出&lt;/li&gt;
&lt;li&gt;记录 brew 下载的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;developers-tools&#34;&gt;Developer&amp;rsquo;s Tools&lt;/h1&gt;
&lt;h2 id=&#34;ide&#34;&gt;IDE&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;Xcode
vscode: Main Code Editor
Anaconda: Python
PyCharm CE: Python
Sagemath: sage
IntelliJ IDEA CE: Java
Android Studio
MATLAB R2019a: Matlab
script editor: (native) Apple Script
Qt Series: Qt

&lt;span style=&#34;color:#f92672&#34;&gt;- CocosCreator: 游戏引擎，基于 cocos
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- Orange3: 快速测试 ML 算法
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- Ecllipse: Java, 选择 IntelliJ 替代
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- CLion: C++, 选择终端命令执行
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- Visual Studio: C#
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- CodeRunner: multi language
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- DataGrip: SQL
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- Mathematica: Mathematica
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Extension</title>
      <link>https://zhengzangw.com/notes/operating-system/os-extension/</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/operating-system/os-extension/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Operating System: Three Easy Pieces
&lt;a href=&#34;http://ics.nju.edu.cn/~jyywiki&#34;&gt;讲义&lt;/a&gt;
NJU: 操作系统 - 蒋炎岩&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;labs&#34;&gt;Labs&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No.&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Knowledge Point&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;M1&lt;/td&gt;
&lt;td&gt;pstree&lt;/td&gt;
&lt;td&gt;打印进程之间的树状的父子关系&lt;/td&gt;
&lt;td&gt;命令行参数；分析/proc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M2&lt;/td&gt;
&lt;td&gt;libco&lt;/td&gt;
&lt;td&gt;实现轻量级的用户态协程库&lt;/td&gt;
&lt;td&gt;协程概念；内联汇编更换栈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M3&lt;/td&gt;
&lt;td&gt;sperf&lt;/td&gt;
&lt;td&gt;统计它执行的每个系统调用所占的时间&lt;/td&gt;
&lt;td&gt;系统 API 使用；shell UI&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M4&lt;/td&gt;
&lt;td&gt;crepl&lt;/td&gt;
&lt;td&gt;C交互式shell&lt;/td&gt;
&lt;td&gt;系统 API 使用；动态加载&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M5&lt;/td&gt;
&lt;td&gt;frecov&lt;/td&gt;
&lt;td&gt;FAT32文件系统镜像 bmp 文件还原&lt;/td&gt;
&lt;td&gt;FAT32文件系统分析；数据还原&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;M6&lt;/td&gt;
&lt;td&gt;libkvdb&lt;/td&gt;
&lt;td&gt;实现持久、崩溃一致的key-value数据库API&lt;/td&gt;
&lt;td&gt;多线程、进程、崩溃一致性程序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L0&lt;/td&gt;
&lt;td&gt;amgame&lt;/td&gt;
&lt;td&gt;编写直接运行在AbstractMachine上游戏&lt;/td&gt;
&lt;td&gt;类 Flappy Bird&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L1&lt;/td&gt;
&lt;td&gt;kalloc&lt;/td&gt;
&lt;td&gt;pmm模块&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L2&lt;/td&gt;
&lt;td&gt;kthreads&lt;/td&gt;
&lt;td&gt;os,kmt模块&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L3&lt;/td&gt;
&lt;td&gt;vfs&lt;/td&gt;
&lt;td&gt;vfs模块, shell&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;L4&lt;/td&gt;
&lt;td&gt;uproc&lt;/td&gt;
&lt;td&gt;uproc模块（未完成）&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>KM algorithm</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-km/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-km/</guid>
      <description>&lt;h1 id=&#34;km-算法&#34;&gt;KM 算法&lt;/h1&gt;
&lt;h2 id=&#34;概念推导&#34;&gt;概念推导&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;可行顶标：每个节点有一个顶标值 $L(u)$，二分图两边的顶标分别记为 $Lx(u),Ly(v)$&lt;/li&gt;
&lt;li&gt;可行顶标性质：$lx(x)+ly(y)\geq w(x,y)$&lt;/li&gt;
&lt;li&gt;可行边：边 $w(x,y)$ 满足 $lx(x)+ly(y)=w(x,y)$&lt;/li&gt;
&lt;li&gt;相等子图：原图中只包含可行边的生成子图&lt;/li&gt;
&lt;li&gt;完备匹配：匹配中每个顶点与某条边相关&lt;/li&gt;
&lt;li&gt;最大权重匹配定理：若某个相等子图中有完备匹配，则该匹配为原图最佳匹配&lt;/li&gt;
&lt;li&gt;松弛函数：二分图一边的节点保存 $slack(x)=\min(lx(i)+ly(j)-w(i,j))$&lt;/li&gt;
&lt;li&gt;顶标修改：减少不在交错路中最小的松弛值&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>basics of Sage</title>
      <link>https://zhengzangw.com/posts/sagemath/</link>
      <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/sagemath/</guid>
      <description>&lt;h1 id=&#34;table-of-function&#34;&gt;Table of function&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Journal: Hong Kong overseas study tour</title>
      <link>https://zhengzangw.com/posts/travel-hongkong/</link>
      <pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/travel-hongkong/</guid>
      <description>&lt;h1 id=&#34;香港五日游学&#34;&gt;香港五日游学&lt;/h1&gt;
&lt;p&gt;2019.2.18 - 2019.2.23&lt;/p&gt;
&lt;p&gt;为拔尖计划准备的香港五日游学可以说是 80% 游 + 20% 学了。或许这次游学最大的意义，借用同学的话说，很巧妙的方法将喜欢学术的学生和喜欢钱的学生分开了。&lt;/p&gt;
&lt;p&gt;此处流水账地记下五日行程&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Galois 理论</title>
      <link>https://zhengzangw.com/notes/modern-algebra/galois-theory/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/modern-algebra/galois-theory/</guid>
      <description> 分裂域：最小的代数扩张 $L/K$ 使得 $f(x)$ 的所有根在 $L$ 中 $L/K$ 为代数扩张，$\alpha\in L$ 为 $K$ 上可分元指 $\alpha$ 在 $K$ 上极小多项式在其分裂域中无重根  若每个 $\alpha\in L$ 为 $K$ 上可分元，则称 $L/K$ 为可分扩   单扩张定理：$L/K$ 为有限可分扩张，则有 $\gamma\in L$ 使得 $L=K(\gamma)$ 正规扩张：$L/K$ 为代数扩张，若对于任何不可约 $f(x)\in K$, $f(x)=0$ 在 $L$ 有根 $\Rightarrow$ $f(x)$ 所有根在 $L$ 中 Galois 扩张：$L/K$ 是有限可分正规扩张 域扩张 $L/K$ 的 Galois 群 $Gal(L/K)={\sigma\in Aut(L):\forall a\in K(\sigma(a)=a)}$ 按复合构成 $Aut(L)$ 的子群 $H\leq Gal(L/K)$, 则不变域 $Inv(H)={\alpha\in L:\forall \sigma\in H(\sigma(\alpha)=\alpha)}$ 构成 $L$ 的子域， $K\leq M\leq L$ Galois 理论基本定理：设 $L/K$ 为域的 Galois 扩张，则  设 $K\leq M\leq L$，则 $L/M$ 为 Galois 扩张且 $Gal(L/M)\leq Gal(L/K), |Gal(L/M)|=[L:M], H=Inv(Gal(L/M))=M$ 任给 $H\leq Gal(L/K),M=Inv(H)$, 有 $K\leq M\leq L$，且 $Gal(L/M)=H$ 设 $K\leq M\leq L$ 则 $M/K$ 为正规扩张 $\iff Gal(L/M)\unlhd Gal(L/K)$。 $M/K$是正规扩张时，$Gal(M/K)\cong Gal(L/K)/Gal(L/M)$   $K$ 为域，$K(\sqrt[n]{a})/K$ 称为根式扩充。$Gal(K(\sqrt[n]{a}/K))\cong U(Z/nZ)$ 为有限 Abel 群 $f(x)\in K$, $f(x)$ 根式可解指存在域扩张 $K_0=K\leq K_1\leq \cdots\leq K_n=L$ 使得 $K_{i+1}/K_i$ 每步都是根式可导的且 $f(x)=0$ 在 $L$ 中可完全分解成一次式乘积 域$K$，$f(x)\in K$ 次数大于 0，且分裂元为 $L$，则 $f(x)$ 根式可解 $\iff Gal(L/K)$ 为可解群 尺规不可三等分角  尺（一次）规（二次）只能做根号，无法进行3次扩张    </description>
    </item>
    
    <item>
      <title>域</title>
      <link>https://zhengzangw.com/notes/modern-algebra/domain/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/modern-algebra/domain/</guid>
      <description> 域： $F$ 为环, $F^\star$ 按乘法构成 Abel 群  域的特征和扩张  加法阶  $F$ 加法群的阶为最小的 $n$, $na=0$ $na=a+a+\cdots+a=0$, 最小的 $n$ 为 $a$ 的加法阶 $F$ 中非零元的加法阶就是单位元的加法阶 若 $e,2e,3e,\dots\not=0$, 则称 $F$ 的特征为 $0$. $ch(F)=0$ 域 $F$ 单位元 $e$ 的加法阶 $p&amp;lt;\infty$, 则 $p$ 为素数。$ch(F)=p$   $ch(F)=p$, 则 $\sigma:m\rightarrow me$ 是 $Z$ 到 $F$ 的环同态，$ker\sigma=pZ$，$Z/pZ={me:m\in Z}$ 为 $F$ 的最小子域 $F$ 为特征为 $p$ 的域，则 $a_1,\cdots,a_m\in F$ 时 $(a_1+\cdots+a_m)^{p^n}=a_1^{p^n}+\cdots+a_m^{p_n}$ 有限域(Galois 域)：$F$ 中只有有限个元素  $GF(p)$ 模 p 加乘 $GF(p^w)$ 为含 $p^w$ 个元素的有限域，多项式系数只能取 p  由本原多项式在乘法下生成     $q$ 元域：恰有 $q$ 个元素的域  $q$ 元域 $F$ 中有 $x^q-x=\prod_{a\in F}(x-a)$   域的扩张：$K$ 为 $L$ 子域，$L$ 为 $K$ 扩域， 记为 $L/K$, 即 $L$ 为 $K$ 的扩张 线性空间：$V$ 是域 $F$ 上向量空间  $V$ 按加法构成 Abel 群 数乘运算  $a(x+y)=ax+ay$ $(a+b)x=ax+bx$ $1x=x$ $(ab)x=a(bx)$     扩张次数 $[L:K]$：$L$ 是数域 $K$ 上的向量空间，$L/K$的维数  $[L:k]=n$：$L$ 为 $K$ 的 $n$ 次扩域 $[L:K]&amp;lt;\infty$：$L$ 为 $K$ 的有限扩域   $F$ 为 $q$ 元有限域，则 $q$ 必为素数幂次；$q=p^n$ 为素数幂时，必有 $q$ 元域且任意两个 $q$ 元域同构，记为 $F_q$ 或 $GF(q)$  代数扩张  $X$ 生成的 $K$ 的扩环（在 $K$ 上添加 $X$ 生成的环）： $L/K$ 为域扩张，$X\subset L$, 令 $K=\bigcap_{R为 L 子环，R\subset K\cup X} R$ 是 $L$ 包含 $K$ 与 $X$ 的最小子环 $X$ 生成的 $K$ 上扩域：$K(X)=\bigcap_{K\leq L,F\subset K\cup X}$ 为 $L$ 包含 $K$ 与 $X$ 的最小子域  $X$ 有限时，$K=K[\alpha_1,\cdots,\alpha_n],K(X)=K(\alpha_1,\cdots, \alpha_n)$ $K[\alpha_1,\cdots,\alpha_n]={P(\alpha_1,\cdots,\alpha_n)}$ $K(\alpha_1,\cdots,\alpha_n)={\frac{P(\alpha_1,\cdots,\alpha_n)}{Q(\alpha_1,\cdots,\alpha_n)}}$ 单扩张： $K(\alpha)/K$   代数元：$L/K$, $\alpha\in L$, 存在 $K$ 中非零多项式 $f(x)$, $f(\alpha)=0$ 超越元：非代数元  $e,\pi$   $L/K$, $\alpha$ 为 $K$ 上代数元，则 $I={g(x)\in K:g(\alpha)=0}$ 为 $K$ 的理想。 又 $K$ 为 PID, 故 $I$ 有唯一的首一多项式 $f\in K$ 使得 $I=(f)$。 该首一多项式为 $\alpha$ 在 $K$ 上的极小多项式。 极小多项式为 $n$ 次，则称 $\alpha$ 为 $n$ 次代数元。 $L/K$, ${\alpha\in L:\alpha 为K上代数元}$ 为 $L$ 的子域 $L/K$, $\alpha\in L$ 为 $K$ 上 $n$ 次代数元，则  $K(\alpha)=K[\alpha],[K(\alpha):K]=n$，且 $K$ 上向量空间 $K(\alpha)$ 有基底 $1,\alpha,\alpha^2,\cdots,\alpha^{n-1}$ $K/(f)\cong K(\alpha)$   $K$ 为域， 若 $K$ 中次数大于$1$的多项式均可约，即 $n$ 次 $f(x)\in K$ 可写成 $c(x-\alpha_1)\cdots(x-\alpha_n)$ 则称 $K$ 为代数闭域  任何域 $K$ 可扩张称一个代数闭域   代数基本定理（Gauss 博士论文证明）：$\mathbb{C}$ 为代数闭域（或可正所有代数数构成代数闭域） $L/K$, $L$ 中元都是 $K$ 中代数元，则称 $L/K$ 为代数扩张。否则称为超越扩张 $L/K$为代数扩张, 则 $[L:K]&amp;lt;\infty \iff$ 有有限个 $K$ 上代数元 $\alpha_1,\cdots,\alpha_n$ 使 $L=K(\alpha_1,\cdots,\alpha_n)$ $L/M$ 与 $M/K$ 都为代数扩张，则 $L/K$ 为代数扩张  域的例子  $\mathbb{Q},\mathbb{R},\mathbb{C}$  $\mathbb{C}=\mathbb{R}(i)\cong R/(x^2+1)$(Cauchy)$={a+bx \bmod (x^+1),a,b\in \mathbb{R}}$， $i=x \bmod x^2+1$, $\mathbb{C}$ 为 $\mathbb{R}$ 上的二维线性空间，$1,i$ 为一组基底 $\mathbb{Q}$ 上的代数元为 代数数 $\alpha\in \mathbb{C}$ 为 代数整数 指有首一的正系数多项式使得 $f(x)=0$   $p$ 为素数， $\mathbb{F}=\mathbb{Z}/p\mathbb{Z}$  $Z/pZ$ 上必有 $n$ 次不可约多项式，域 $F_p/(f)$ 中有 $p^n$ 个元素    </description>
    </item>
    
    <item>
      <title>How to use Matplotlib in Python</title>
      <link>https://zhengzangw.com/posts/python-matplotlib/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/python-matplotlib/</guid>
      <description>&lt;h1 id=&#34;preface&#34;&gt;Preface&lt;/h1&gt;
&lt;p&gt;This document serves as a reminder of basic usage of matplotlib. More information on &lt;a href=&#34;https://matplotlib.org/tutorials/index.html&#34;&gt;matplotlib tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;多图绘制&#34;&gt;多图绘制&lt;/h1&gt;
&lt;h2 id=&#34;figure&#34;&gt;figure&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# print(plt.style.available)
plt.style.use(&#39;ggplot&#39;)
plt.figure(1)
plt.figure(2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;subplot&#34;&gt;subplot&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;plt.subplots_adjust(wspace = 0, hspace =0.5)
plt.subplot(211)
plt.subplot(212)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;axes&#34;&gt;Axes&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;ax = plt.axes([0.025,0.025,0.95,0.95])
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Convex Optimization</title>
      <link>https://zhengzangw.com/notes/convex-optimization/convex-optimization/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/convex-optimization/convex-optimization/</guid>
      <description>凸优化  拉格朗日乘子法  约束曲面上任意点 $x$, $\nabla g(x)$ 正交于约束曲面 最优点 $x^$, $\nabla f(x^)$ 正交与约束曲面 拉格朗日乘子 $\lambda\not=0$ 拉格朗日函数 $L(x,\lambda) = f(x)+\lambda g(x)$  优化 $f(x)$ -&amp;gt; 优化 $L(x,\lambda)$     主问题，最优解 $p^*$  $$ \begin{aligned} \min_x &amp;amp; f(x) \newline s.t. &amp;amp; h_i(x)=0 &amp;amp; (i=1,&amp;hellip;,m) \newline &amp;amp; g_j(x)\leq 0 &amp;amp; (j=1,&amp;hellip;,n) \end{aligned} $$
 引入拉格朗日乘子和 KKT 条件 (Karush-Kuhn-Tucker)  $$ \begin{aligned} \min L(x,\lambda,\mu)=f(x)+\sum_{i=1}^m\lambda_ih_i(x)+\sum_{j=1}^n\mu_jg_j(x)\newline g_j(x)\leq 0\newline \mu_j\geq0\newline \mu_jg_j(x)=0 \end{aligned} $$
 $\sup$ 上限函数， $\inf$ 下限函数 拉格朗日对偶函数：$\Gamma(\lambda,\mu)=\inf_{x\in D}L(x,\lambda,\mu)$  $\Gamma(\lambda,\mu)\leq L(x,\lambda,mu)\leq f(x)\leq p^*,x\in D$ $L$ 对 $x$ 求导后令之为 0，带入得对偶问题   对偶问题 （凸优化问题），最优解 $d^*$  $$ \begin{aligned} &amp;amp; \max_{\lambda,\mu}\Gamma(\lambda,\mu)\newline s.</description>
    </item>
    
    <item>
      <title>矩阵论</title>
      <link>https://zhengzangw.com/notes/matrix-theory/matrix-theory/</link>
      <pubDate>Thu, 24 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/matrix-theory/matrix-theory/</guid>
      <description>&lt;h2 id=&#34;概念补充&#34;&gt;概念补充&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;同构算子：$\mathcal{A}:V\rightarrow V&#39;$
&lt;ul&gt;
&lt;li&gt;全映射&lt;/li&gt;
&lt;li&gt;可逆映射&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;同构：$V$与$V&#39;$是同构的线性空间&lt;/li&gt;
&lt;li&gt;数域$P$上两个有限线性空间同构$\iff$两空间维数相同&lt;/li&gt;
&lt;li&gt;相似$A\sim B$:基 1 下矩阵为$A$，基 2 下矩阵为$B$，从基 1 到基 2 的过渡矩阵为$C$，则$B=C^{-1}AC$&lt;/li&gt;
&lt;li&gt;相抵$A\simeq B$: A,B$为$m*n$阶矩阵，$m$阶方阵$D$和$n$阶方阵$C$满足$B=DAC$
&lt;ul&gt;
&lt;li&gt;不同维线性空间$V^n$和$V^m$下，同一个线性变换在不同基偶下所对应的矩阵$A$和$B$之间的关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非奇异$\iff$非退化$\iff$满秩$\iff$可逆&lt;/li&gt;
&lt;li&gt;当$A$有 n 个线性无关特征向量时，$A$有完备的特征向量系；否则$A$为亏损矩阵&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Concurrency</title>
      <link>https://zhengzangw.com/notes/operating-system/os-concurrency/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/operating-system/os-concurrency/</guid>
      <description>&lt;h2 id=&#34;概念定义&#34;&gt;概念定义&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Concept&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;thread&lt;/td&gt;
&lt;td&gt;separate process that 共享代码、共享数据、拥有独立栈堆&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;multi-thread&lt;/td&gt;
&lt;td&gt;parallelism and can avoid blocking program progress due to slow I/O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;race condition&lt;/td&gt;
&lt;td&gt;the results depend on the timing execution of the code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;critical section&lt;/td&gt;
&lt;td&gt;a piece of code that accesses a shared resource and must not be concurrently executed by more than one thread&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;POSIX&lt;/td&gt;
&lt;td&gt;Portable Operating System Interface&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;synchronization primitives&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Persistance</title>
      <link>https://zhengzangw.com/notes/operating-system/os-persistance/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/operating-system/os-persistance/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Operating System: Three Easy Pieces
&lt;a href=&#34;http://ics.nju.edu.cn/~jyywiki&#34;&gt;讲义&lt;/a&gt;
NJU: 操作系统 - 蒋炎岩&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;储存介质-non-volatile-memory&#34;&gt;储存介质 (Non-Volatile Memory)&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Year&lt;/th&gt;
&lt;th&gt;原理&lt;/th&gt;
&lt;th&gt;Remarks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Magnetic Tape&lt;/td&gt;
&lt;td&gt;1928&lt;/td&gt;
&lt;td&gt;磁比特数组&lt;/td&gt;
&lt;td&gt;无法进行高效的随机读写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Magnetic Drum&lt;/td&gt;
&lt;td&gt;1932&lt;/td&gt;
&lt;td&gt;并行版磁带&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hard Disk&lt;/td&gt;
&lt;td&gt;1956&lt;/td&gt;
&lt;td&gt;二维并行版磁带&lt;/td&gt;
&lt;td&gt;柱面(platter)+磁道(track)+扇区(sector)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Floppy Disk&lt;/td&gt;
&lt;td&gt;1971&lt;/td&gt;
&lt;td&gt;读写头与盘片分离&lt;/td&gt;
&lt;td&gt;floppy drive 每个电脑一份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Compact Disk&lt;/td&gt;
&lt;td&gt;1980&lt;/td&gt;
&lt;td&gt;1bit = 挖坑/填坑&lt;/td&gt;
&lt;td&gt;CD-ReWritable: 激光改变反射率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Solid State Drive&lt;/td&gt;
&lt;td&gt;1991&lt;/td&gt;
&lt;td&gt;NAND Flash&lt;/td&gt;
&lt;td&gt;NAND(x,y)=$!(x&amp;amp;y)$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;FTL(Flash translation layer)&lt;/td&gt;
&lt;td&gt;运行操作系统和闪存管理程序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;USB Flash Disk&lt;/td&gt;
&lt;td&gt;1999&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;放电做不到100%干净&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>Virtualization</title>
      <link>https://zhengzangw.com/notes/operating-system/os-virtualization/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/operating-system/os-virtualization/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Operating System: Three Easy Pieces
&lt;a href=&#34;http://ics.nju.edu.cn/~jyywiki&#34;&gt;讲义&lt;/a&gt;
NJU: 操作系统 - 蒋炎岩&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;process&#34;&gt;Process&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;单个程序$\rightarrow$ 状态机$(M,R)$
&lt;ul&gt;
&lt;li&gt;分时复用处理器：利用中断$(M,R)$到状态机上&lt;/li&gt;
&lt;li&gt;分时复用寄存器
&lt;ul&gt;
&lt;li&gt;$(M_1,R_1)\rightarrow(M_2,R_2)\rightarrow\cdots$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;系统调用
&lt;ul&gt;
&lt;li&gt;操作系统为用户进程提供的一组API，通常在内核空间中实现，实现用户进程对操作系统对象/物理硬件访问的请求&lt;/li&gt;
&lt;li&gt;查看系统调用: strace/dtruss(macos)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;File descriptor: 指向操作系统内对象的指针&lt;/li&gt;
&lt;li&gt;terminal
&lt;ul&gt;
&lt;li&gt;The processes belonging to a single command are called a process group or job&lt;/li&gt;
&lt;li&gt;A session is a larger group of processes&lt;/li&gt;
&lt;li&gt;session leader&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Summary of Google 1st ML Camp (Shanghai)</title>
      <link>https://zhengzangw.com/posts/google-mlcamp-2019/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/google-mlcamp-2019/</guid>
      <description>&lt;h1 id=&#34;项目&#34;&gt;项目&lt;/h1&gt;
&lt;p&gt;三天内和两个队友合作完成了一个项目，基本是零基础，最后还能有展示的Demo，感觉很棒。总结这次项目(NLP)的开发流程如下&lt;/p&gt;
&lt;h2 id=&#34;开发流程&#34;&gt;开发流程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;选题+创意构想（头脑风暴）&lt;/li&gt;
&lt;li&gt;数据集分析+数据可视化&lt;/li&gt;
&lt;li&gt;数据清理&lt;/li&gt;
&lt;li&gt;模型构建（先有个baseline，后面可以大家一起构想；baseline应该先满足end2end）&lt;/li&gt;
&lt;li&gt;Tuning （这个可以一直进行，但是要保证其它部分有充足时间）&lt;/li&gt;
&lt;li&gt;Demo （手机App&amp;gt;=网页&amp;gt;电脑App）&lt;/li&gt;
&lt;li&gt;Poster + PPT&lt;/li&gt;
&lt;li&gt;Presentation&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Basics of Linux</title>
      <link>https://zhengzangw.com/posts/linux-tutor/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/linux-tutor/</guid>
      <description>&lt;p&gt;Linux 私房菜&lt;/p&gt;
&lt;h1 id=&#34;命令&#34;&gt;命令&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>Review: *Price of Inequality*《不平等的代价》</title>
      <link>https://zhengzangw.com/posts/the-price-of-inequality/</link>
      <pubDate>Tue, 27 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/the-price-of-inequality/</guid>
      <description>&lt;p&gt;无特指则为美国&lt;/p&gt;
&lt;h1 id=&#34;序言&#34;&gt;序言&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2011 占领华尔街 占领运动&lt;/li&gt;
&lt;li&gt;市场失灵
&lt;ul&gt;
&lt;li&gt;最严重的表现为失业（9%）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;公平竞争感&lt;/li&gt;
&lt;li&gt;“一美元一票”&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Use Tikz in LaTeX</title>
      <link>https://zhengzangw.com/posts/latex-tikz/</link>
      <pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/latex-tikz/</guid>
      <description>&lt;h1 id=&#34;图片放置&#34;&gt;图片放置&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tex&#34; data-lang=&#34;tex&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;\begin&lt;/span&gt;{figure}[htbp]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;\centering&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;\subfloat&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[subtitle1]&lt;/span&gt;{
        &lt;span style=&#34;color:#66d9ef&#34;&gt;\begin&lt;/span&gt;{tikzpicture}
            &lt;span style=&#34;color:#75715e&#34;&gt;%code
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;\end&lt;/span&gt;{tikzpicture}
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;\subfloat&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;[subtitle2]&lt;/span&gt;{
        &lt;span style=&#34;color:#66d9ef&#34;&gt;\begin&lt;/span&gt;{tikzpicture}
            &lt;span style=&#34;color:#75715e&#34;&gt;%code
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;\end&lt;/span&gt;{tikzpicture}
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;\caption&lt;/span&gt;{caption}
&lt;span style=&#34;color:#66d9ef&#34;&gt;\end&lt;/span&gt;{figure}

&lt;span style=&#34;color:#66d9ef&#34;&gt;\tikz&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;%code
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Write Verilog on Macos via icarus-verilog</title>
      <link>https://zhengzangw.com/posts/icarus-verilog/</link>
      <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/icarus-verilog/</guid>
      <description>&lt;h2 id=&#34;mac&#34;&gt;Mac&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;brew install icarus-verilog&lt;/li&gt;
&lt;li&gt;download software Scansion&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Math Miscellaneous</title>
      <link>https://zhengzangw.com/posts/math-not-yet-classifed/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/math-not-yet-classifed/</guid>
      <description>&lt;h1 id=&#34;特殊函数&#34;&gt;特殊函数&lt;/h1&gt;
&lt;h2 id=&#34;gamma-function&#34;&gt;Gamma Function&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Gamma Function: $\Gamma(x)=\int^\infty_0e^{-t}t^{x-1}dt$&lt;/li&gt;
&lt;li&gt;性质
&lt;ul&gt;
&lt;li&gt;$\Gamma(x+1)=x\Gamma(x)$&lt;/li&gt;
&lt;li&gt;$\Gamma(n+1)=n!$&lt;/li&gt;
&lt;li&gt;$\Gamma(\frac{1}{2})=\sqrt{\pi}$&lt;/li&gt;
&lt;li&gt;$\Gamma(n+\frac{1}{2})=\frac{\sqrt\pi}{2^n}(2n-1)!!$&lt;/li&gt;
&lt;li&gt;$\Gamma(\frac{1}{2}-n)=(-1)^n\frac{2^n\sqrt{\pi}}{(2n-1)}!!$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$I_n=\int^\infty_0x^ne^{-x^2}dx=\frac{1}{2}\Gamma(\frac{n+1}{2})$&lt;/li&gt;
&lt;li&gt;Guassian Integral: $\int_{-\infty}^{\infty}ae^{\frac{-(x-b)^2}{c^2}}=ac\sqrt{\pi}$&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>How to use Logging module in Python</title>
      <link>https://zhengzangw.com/posts/python-logging/</link>
      <pubDate>Mon, 12 Nov 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/python-logging/</guid>
      <description>&lt;h1 id=&#34;logging-module&#34;&gt;Logging module&lt;/h1&gt;
&lt;h2 id=&#34;level&#34;&gt;level&lt;/h2&gt;
&lt;p&gt;CRITICAL &amp;gt; ERROR &amp;gt; WARNING &amp;gt; INFO &amp;gt; DEBUG &amp;gt; NOTSET&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ICS PA</title>
      <link>https://zhengzangw.com/notes/introduction-to-computer-science/ics-pa/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/introduction-to-computer-science/ics-pa/</guid>
      <description>PA0 Article  Why Docker How To Ask Questions The Smart Way vimtutor ssh 正则表达式  鸟哥的 Linux 私房菜 检查素数   git GDB  Debugging with GDB A GDB Tutorial with Examples   tmux linux GPG GPG C C  顺时针法则   顺时针法则
  [10]: an array 10 of &amp;hellip;
  (): Once you meet one of brace, then a pair of them are omitted</description>
    </item>
    
    <item>
      <title>贪心专题</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-greedy/</link>
      <pubDate>Mon, 17 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-greedy/</guid>
      <description>&lt;h1 id=&#34;活动选择问题&#34;&gt;活动选择问题&lt;/h1&gt;
&lt;p&gt;最早结束&lt;/p&gt;
&lt;h1 id=&#34;哈夫曼树&#34;&gt;哈夫曼树&lt;/h1&gt;
&lt;p&gt;最小合并&lt;/p&gt;
&lt;h2 id=&#34;合并花费最小问题&#34;&gt;合并花费最小问题&lt;/h2&gt;
&lt;h1 id=&#34;字符串拼接字典序最小&#34;&gt;字符串拼接字典序最小&lt;/h1&gt;
&lt;p&gt;比较a+b与b+a&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java</title>
      <link>https://zhengzangw.com/notes/advanced-programming/java/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/advanced-programming/java/</guid>
      <description>&lt;h2 id=&#34;示例代码&#34;&gt;示例代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// HelloWorld
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HelloWorld&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;){&lt;/span&gt;
        System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How to read binary data in Python</title>
      <link>https://zhengzangw.com/posts/python-reading/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/python-reading/</guid>
      <description>&lt;h1 id=&#34;open&#34;&gt;open&lt;/h1&gt;
&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;
&lt;p&gt;open(name, mode, buffering)&lt;/p&gt;
&lt;h2 id=&#34;打开模式&#34;&gt;打开模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;r 只读，文件的指针将会放在文件的开头&lt;/li&gt;
&lt;li&gt;rb 以二进制打开&lt;/li&gt;
&lt;li&gt;r+ 打开一个文件用于读写。文件指针将会放在文件的开头。&lt;/li&gt;
&lt;li&gt;rb+&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>https://zhengzangw.com/notes/deep-learning/deep-learning/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/deep-learning/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Deep Learning&lt;/em&gt;
&lt;a href=&#34;https://www.bilibili.com/video/av9770302/?p=5&#34;&gt;李宏毅课程&lt;/a&gt;
&lt;a href=&#34;http://speech.ee.ntu.edu.tw/~tlkagk/courses_MLDS17.html&#34;&gt;李宏毅的主页&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第六章&#34;&gt;第六章&lt;/h2&gt;
&lt;p&gt;Input -&amp;gt; FL -&amp;gt; FL -&amp;gt; FL -&amp;gt; Softmax -&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;输出单元&#34;&gt;输出单元&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;高斯输出分布线性单元&lt;/li&gt;
&lt;li&gt;Bernoulli输出分布sigmoid单元&lt;/li&gt;
&lt;li&gt;Multinoulli输出分布softmax单元&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Introuction to TensorFlow 1 Picture Handle</title>
      <link>https://zhengzangw.com/posts/tensorflow-picture/</link>
      <pubDate>Fri, 31 Aug 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/tensorflow-picture/</guid>
      <description>&lt;h1 id=&#34;图片的基础知识&#34;&gt;图片的基础知识&lt;/h1&gt;
&lt;p&gt;像素值只有 0，1： 二值图&lt;br&gt;
0-255：256 级灰度图&lt;br&gt;
图像位数通常是 8 位。简单可认为一张单通道 8 位彩色图有三通道 RGB&lt;br&gt;
转换为灰度公式很多，如：
$$Gray = R&lt;em&gt;30%+G&lt;/em&gt;59%+B*11%$$&lt;/p&gt;
&lt;h2 id=&#34;亮度&#34;&gt;亮度&lt;/h2&gt;
&lt;p&gt;RGB 颜色空间本身就是源于物体发光，每个通道上的值表示的是该通道上的光强，调整光强即是调整亮度。可以有如下公式：
$$亮度＝R&lt;em&gt;0.299+G&lt;/em&gt;0.587+B*0.114$$
$$l = (max(rgb) + min(rgb)) / 2$$&lt;/p&gt;
&lt;h2 id=&#34;对比度&#34;&gt;对比度&lt;/h2&gt;
&lt;p&gt;对比度反应了图片上亮区域和暗区域的层次感。而反应到图像编辑上，调整对比度就是在保证平均亮度不变的情况下，扩大或缩小亮的点和暗的点的差异&lt;/p&gt;
&lt;p&gt;$$Out = Average + (In – Average) * ( 1 + percent)$$&lt;/p&gt;
&lt;p&gt;其中 In 表示原始像素点亮度，Average 表示整张图片的平均亮度，Out 表示调整后的亮度，而 percent 即调整范围[-1,1]&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A toy experiments on Tensorflow 1</title>
      <link>https://zhengzangw.com/posts/tensorflow-experiment/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/tensorflow-experiment/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;《深度学习》终于获得了“过半警告”，不过CNN,RNN都还没学。前面的很多算法都没有实践看过效果，决定在Tensorflow上实现一下。&lt;/p&gt;
&lt;p&gt;参考的资料有：《Tensorflow 实现Goolge深度学习框架》 莫烦的网络教程、&lt;/p&gt;
&lt;p&gt;这个系列尽可能做的好一点，加深对参数的理解和使用&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linear Recurrence</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-linear-recurrence/</link>
      <pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-linear-recurrence/</guid>
      <description>&lt;h1 id=&#34;常系数齐次线性递推式&#34;&gt;常系数齐次线性递推式&lt;/h1&gt;
&lt;p&gt;快速幂: $O(k^3logn)$
黑科技：$O(klogklogn+k)$
虽然过了洛谷的数据，但是常数还没压下来，N=10^9,K=32000要3.5s。标程可以进1s。以后再压常数。&lt;/p&gt;
&lt;h2 id=&#34;幻想三步走&#34;&gt;幻想三步走&lt;/h2&gt;
&lt;p&gt;设转移矩阵为A，初始值向量为v&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Segment Tree</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/segment-tree/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/segment-tree/</guid>
      <description>&lt;h1 id=&#34;prepare&#34;&gt;Prepare&lt;/h1&gt;
&lt;h2 id=&#34;离散化&#34;&gt;离散化&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a.y
sort(m&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,m&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
len &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; unique(m,m&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; m
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;n;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;i) a[i].y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lower_bound(m&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,m&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;len&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,a[i].y) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; m;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Set Code Styles in vscode</title>
      <link>https://zhengzangw.com/posts/code-style/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/code-style/</guid>
      <description>&lt;h2 id=&#34;不同风格比较&#34;&gt;不同风格比较&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Google 好用，习惯，简洁。&lt;/li&gt;
&lt;li&gt;Chromium&lt;/li&gt;
&lt;li&gt;Mozilla&lt;/li&gt;
&lt;li&gt;Webkit&lt;/li&gt;
&lt;li&gt;LLVM&lt;/li&gt;
&lt;li&gt;Visual Studio&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;code-style-setting&#34;&gt;Code Style Setting&lt;/h2&gt;
&lt;h3 id=&#34;vscode设置&#34;&gt;Vscode设置&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;C_Cpp.clang_format_style&amp;quot;: 
    &amp;quot;{ BasedOnStyle: Google, IndentWidth: 4}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;indent&#34;&gt;indent&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;alias cindent=&amp;quot;indent -npro -kr -i8 -ts8 -sob -l80 -ss -ncs -cp1 -nut&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>FFT</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-fft/</link>
      <pubDate>Mon, 20 Aug 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-fft/</guid>
      <description>&lt;h2 id=&#34;fft&#34;&gt;FFT&lt;/h2&gt;
&lt;p&gt;迭代实现，计算卷积。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>背包九讲</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-dp-knapsack/</link>
      <pubDate>Thu, 10 May 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-dp-knapsack/</guid>
      <description>dp 九讲
01 背包 $$F[i,v] = \max{F[i-1,v],F[i-1,v-Ci]+Wi}$$
for i=1 to N for v = V to Ci F[v] = max{F[v],F[v-Ci]+Wi} 恰好装满：$F[1..V] = -\infty; F[0] = 0$
无必要： $F[0..V] = 0$
完全背包 $$F[i,v] = \max{F[i-1,v-kCi] + kWi | 0&amp;lt;=kCi&amp;lt;=v &amp;amp;&amp;amp; 0&amp;lt;=k&amp;lt;Mi}$$ （利用$F[i,v-Ci]$代换）
 $O(n^2)$ 若两件物品 i、j 满足 Ci≤Cj 且 Wi≥Wj，则将可以将物品 j 直接去掉，不用考虑 $O(V+N)$ 首先将费用大于 V 的物品去掉，然后使用类似计数排序的做法，计算出费用相同的物品中价值最高的是哪个 把第 i 种物品拆成费用为 Ci2k、价值为 Wi2k 的若干件物品，其中 k 取遍满足 Ci2k≤V 的非负整数  for i = 1 to N for v = Ci to v F[v] = max(F[v],F[v-Ci]+Wi) 多重背包 完全背包思路（可以看作是分组背包问题）</description>
    </item>
    
    <item>
      <title>Hype Cycle for Emerging Technologies</title>
      <link>https://zhengzangw.com/posts/hype-cycle/</link>
      <pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/hype-cycle/</guid>
      <description>&lt;p&gt;技术循环曲线，光环曲线，炒作周期
&lt;img src=&#34;https://zh.wikipedia.org/wiki/%E6%8A%80%E6%9C%AF%E6%88%90%E7%86%9F%E5%BA%A6%E6%9B%B2%E7%BA%BF#/media/File:Hype-Cycle-General.png&#34; alt=&#34;Example&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skip list</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/skip-list/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/skip-list/</guid>
      <description>&lt;h1 id=&#34;skip-list&#34;&gt;Skip List&lt;/h1&gt;
&lt;h2 id=&#34;构造&#34;&gt;构造&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;给定一个有序的链表。&lt;/li&gt;
&lt;li&gt;选择连表中最大和最小的元素，然后从其他元素中按照一定算法（随机）随即选出一些元素，将这些元素组成有序链表。&lt;/li&gt;
&lt;li&gt;为刚选出的每个元素添加指针指向下一层中值同自己相等的元素。Top指针指向该层首元素&lt;/li&gt;
&lt;li&gt;重复2、3步，直到不再能选择出除最大最小元素以外的元素。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>What is Debate</title>
      <link>https://zhengzangw.com/posts/debate/</link>
      <pubDate>Sat, 03 Mar 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/debate/</guid>
      <description>&lt;h2 id=&#34;辩论讲座&#34;&gt;辩论讲座&lt;/h2&gt;
&lt;h3 id=&#34;辩论赛是什么&#34;&gt;辩论赛是什么&lt;/h3&gt;
&lt;h4 id=&#34;辩论与辩论赛的区别&#34;&gt;辩论与辩论赛的区别&lt;/h4&gt;
&lt;p&gt;胜负判断在评委。不在说服对方，说服第三方（法庭辩论、议会辩论）&lt;/p&gt;
&lt;p&gt;其它类型：普通辩论（说服）、总统辩论；与政治法律相关（马英九、陈水扁都是辩论队出身）&lt;/p&gt;
&lt;p&gt;辩论赛是一个理想化的讨论平台（权、力、人、情（绪））&lt;/p&gt;
&lt;p&gt;辩论赛是一个 Game（培养专业的反对者）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DP优化——四边形不等式</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-dp-optimization/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-dp-optimization/</guid>
      <description>&lt;h2 id=&#34;四边形不等式条件&#34;&gt;四边形不等式条件&lt;/h2&gt;
&lt;p&gt;任意 $a1\leq a2&amp;lt;b1\leq b2$,有 $F(a_1,b_1)+F(a_2,b_2)\leq F(a_1,b_2)+F(a_2,b_1)$
则函数 F 满足四边形不等式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sharing of some good RSS seed</title>
      <link>https://zhengzangw.com/posts/awesome-rss/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/awesome-rss/</guid>
      <description>&lt;h1 id=&#34;rss-resource&#34;&gt;RSS Resource&lt;/h1&gt;
&lt;h2 id=&#34;订阅&#34;&gt;订阅&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/dll635281462/article/details/51201490&#34;&gt;rss订阅源推荐个人收集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/19580096&#34;&gt;知乎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;制作&#34;&gt;制作&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://feed43.com&#34;&gt;Feed43&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;github:直接搜索 &lt;code&gt;https://github.com/username&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>区间动归</title>
      <link>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-dp-interval/</link>
      <pubDate>Sun, 25 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/problem-solving/10-algorithms/algorithm-dp-interval/</guid>
      <description>&lt;h1 id=&#34;interval-dp&#34;&gt;Interval DP&lt;/h1&gt;
&lt;h2 id=&#34;区间动归特征&#34;&gt;区间动归特征&lt;/h2&gt;
&lt;p&gt;利用序作为状态&lt;/p&gt;
&lt;h2 id=&#34;题目一览&#34;&gt;题目一览&lt;/h2&gt;
&lt;p&gt;石子合并、能量项链、数字游戏、乘积最大、加分二叉树、关路灯、选择数字、Acting Cute、GF弹钢琴、水果姐逛水果街Ⅰ&lt;/p&gt;
&lt;h2 id=&#34;石子合并&#34;&gt;石子合并&lt;/h2&gt;
&lt;h3 id=&#34;question&#34;&gt;Question:&lt;/h3&gt;
&lt;p&gt;在一个圆形操场的四周摆放N堆石子,现要将石子有次序地合并成一堆.规定每次只能选相邻的2堆合并成新的一堆，并将新的一堆的石子数，记为该次合并的得分。
试设计出1个算法,计算出将N堆石子合并成1堆的最小得分和最大得分.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Review of two Debate Matches 辩论复盘</title>
      <link>https://zhengzangw.com/posts/debate-analysis/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/debate-analysis/</guid>
      <description>&lt;h2 id=&#34;国乒男队成员选择罢赛可以理解难以认同&#34;&gt;国乒男队成员选择罢赛,可以理解/难以认同&lt;/h2&gt;
&lt;p&gt;墨尔本大学 vs 台大政大联队，2017 华夏杯复赛。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Peoms Selected</title>
      <link>https://zhengzangw.com/posts/poem/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/poem/</guid>
      <description>&lt;h1 id=&#34;洛夫-漂木&#34;&gt;洛夫 《漂木》&lt;/h1&gt;
&lt;p&gt;我们惟一的敌人是时间，还来不及做完一场梦，生命的周期又到了。一缕青烟，升起于虚空之中，又无声无息地，消散于更大的寂灭&lt;/p&gt;
&lt;p&gt;我们唯一的敌人是时间，时间可以证明一切，时间可以改变一切，时间可以封存一切，时间可以吞噬一切&lt;/p&gt;
&lt;p&gt;我们唯一可以做的，是想办法把我们的生命之梦延长一点，再延长一点，最好，永远不要真正清醒。&lt;/p&gt;
&lt;h1 id=&#34;20178&#34;&gt;~2017.8&lt;/h1&gt;
&lt;h2 id=&#34;无题1&#34;&gt;无题1&lt;/h2&gt;
&lt;p&gt;被诗的火花点燃的
我们都一样
言语能否融化现实的老茧
追随脉搏的膨胀
理想远离现实一个弄堂
我的呼唤能否为远方的云
添上玫瑰色的明亮&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introduction to GTD</title>
      <link>https://zhengzangw.com/posts/gtd/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/gtd/</guid>
      <description>&lt;p&gt;《尽管去做 ——无压工作的艺术》&lt;/p&gt;
&lt;h2 id=&#34;任务模式的改变knowledgework&#34;&gt;任务模式的改变:knowledgework&lt;/h2&gt;
&lt;h3 id=&#34;两个目的&#34;&gt;两个目的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;抓住所有一切需要处理的事情把它们统统置入一个脱离大脑的逻辑系统中。&lt;/li&gt;
&lt;li&gt;训练自己在接受一切“输入信息”的前期作出决定&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;新的情况&#34;&gt;新的情况&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;工作不再有清楚的界线&lt;/li&gt;
&lt;li&gt;几乎每一件事情都可能处理得更加完善，而且现在促成这一切成为现实的信息，已数不胜数、唾手可得。&lt;/li&gt;
&lt;li&gt;工作量因需要交换信息增加&lt;/li&gt;
&lt;li&gt;工作不断变化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;旧的模式和习惯已力不从心&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to use Pandas in Python</title>
      <link>https://zhengzangw.com/posts/python-pandas/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/python-pandas/</guid>
      <description>&lt;h1 id=&#34;pandas-code-example&#34;&gt;Pandas Code Example&lt;/h1&gt;
&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;
&lt;p&gt;In this arcticle, I will give examples to illustrate and remind me the usage of some pandas funtion. Just a reminder.&lt;/p&gt;
&lt;h2 id=&#34;数据读写&#34;&gt;数据读写&lt;/h2&gt;
&lt;h3 id=&#34;read_csv&#34;&gt;read_csv&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-pandas&#34; data-lang=&#34;pandas&#34;&gt;data = pd.read_csv(&#39;test.csv&#39;)
data = pd.read_csv(&#39;test.csv&#39;,header = 0/[0,1,2]列名,  index_col = 0/[0,1], nrows = 100)
data = pd.read_csv(&#39;test_one.csv&#39;, squeeze = True, encoding = &#39;utf-8&#39;) 一列返回Series
data = pd.read_csv(&#39;test.csv&#39;, prefix = &#39;X&#39;列前缀, skiprows = 3, skipfooter = 3, na_values = &#39;NAN&#39;)
data = pd.read_csv(&#39;test_no_NAN.csv&#39;, na_filter = &#39;False&#39;, parse_dates=True/{&#39;foo&#39;:[1,3]},infer_datatime_format = True, data_parser = function)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Macos Shortcut</title>
      <link>https://zhengzangw.com/posts/mac-shortcut/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/mac-shortcut/</guid>
      <description>&lt;h1 id=&#34;快捷键&#34;&gt;快捷键&lt;/h1&gt;
&lt;h2 id=&#34;iterm2&#34;&gt;Iterm2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;⌘; 历史命令&lt;/li&gt;
&lt;li&gt;⌘⇧h 剪贴板历史&lt;/li&gt;
&lt;li&gt;⌃u 清行&lt;/li&gt;
&lt;li&gt;⌃a 行首&lt;/li&gt;
&lt;li&gt;⌃e 行尾&lt;/li&gt;
&lt;li&gt;⌃f 前进&lt;/li&gt;
&lt;li&gt;⌃b 后退&lt;/li&gt;
&lt;li&gt;⌃p 上一条命令&lt;/li&gt;
&lt;li&gt;⌃r 搜索历史&lt;/li&gt;
&lt;li&gt;⌃d 删除当前字符&lt;/li&gt;
&lt;li&gt;⌃h 删除光标前字符&lt;/li&gt;
&lt;li&gt;⌃w 删除光标前单次&lt;/li&gt;
&lt;li&gt;⌃k 删除到文末&lt;/li&gt;
&lt;li&gt;⌃t 交换光标出文本&lt;/li&gt;
&lt;li&gt;⌘r 清屏&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vim&#34;&gt;Vim&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Build your blogs by Hexo</title>
      <link>https://zhengzangw.com/posts/hexo/</link>
      <pubDate>Sat, 20 Jan 2018 14:50:22 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/hexo/</guid>
      <description>&lt;h2 id=&#34;hexo&#34;&gt;Hexo&lt;/h2&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/465830080ea9&#34;&gt;HEXO+Github,搭建属于自己的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主题&#34;&gt;主题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/theme-next/hexo-theme-next&#34;&gt;next 7&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;tags 启用&lt;/li&gt;
&lt;li&gt;math 启用，且 per page: false
&lt;ul&gt;
&lt;li&gt;修改 kramed 部分内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用双栏 scheme&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/litten/hexo-theme-yilia&#34;&gt;yilia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/computer-vision/3-matching-and-alignment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-vision/3-matching-and-alignment/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/computer-vision/4-recognition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-vision/4-recognition/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/computer-vision/5-video-understanding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/computer-vision/5-video-understanding/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/deep-learning/11-deep-generative-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/11-deep-generative-network/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/deep-learning/12-deep-reinforce-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/12-deep-reinforce-network/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/deep-learning/13-sequence-generative/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/deep-learning/13-sequence-generative/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhengzangw.com/notes/research/few-shot-learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/notes/research/few-shot-learning/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bangumi</title>
      <link>https://zhengzangw.com/bangumi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/bangumi/</guid>
      <description>Personal Bangumi Review</description>
    </item>
    
    <item>
      <title>Friends</title>
      <link>https://zhengzangw.com/friends/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/friends/</guid>
      <description>Here are links to some of my friends. They are all living a wonderful and exciting life!</description>
    </item>
    
    <item>
      <title>Introduction to Domain Adapation</title>
      <link>https://zhengzangw.com/posts/domain-adaptation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>zhengzangw at gmail.com (Zangwei Zheng)</author>
      <guid>https://zhengzangw.com/posts/domain-adaptation/</guid>
      <description>CNN backbones 结构介绍
 LeNet5(1998) AlexNet8(2012) VGG(2014)  VGG16 VGG19   GoogLeNet22(2014)  Inception v1-v4   ResNet(2015)  ResNet50 ResNet101   DRN-26  Semantic Segmentation  $p_{ij}$: 被预测为 $j$ 类样本的 $i$ 类样本 Pixel Accuarcy: $\text{PA}=\frac{\sum_{i=0}^kp_{ii}}{\sum_{i=0}^k\sum_{j=0}^kp_{ij}}$ Mean Pixel Accuracy: $\text{MPA}=\frac{1}{k}\sum_{i=0}^k\frac{p_{ii}}{\sum_{j=0}^kp_{ij}}$ Mean Intersection over Union: $\text{MIoU}=\frac{1}{k}\sum_{i=0}^k\frac{p_{ii}}{\sum_{j=0}^kp_{ij}+\sum_{j=0}^kp_{ji}-p_{ii}}$ Frequency Weighted Intersection over Union: $\text{FWIoU}=\frac{1}{\sum_{i=0}^k\sum_{j=0}^kp_{ij}}\sum_{i=0}\frac{p_{ii}\sum_{j=0}^kp_{ij}}{\sum_{j=0}^kp_{ij}+\sum_{j=0}^kp_{ji}-p_{ii}}$  架构
 FCN-8s DeepLab V2  Adversial  GAN: $\min_G\max_D V(D,G)=E_{x\sim p_{\text{data}(x)}}[\log D(x)]+E_{z\sim p_z(z)}[\log (1-D(x))]$ cGAN: $\min_G\max_D V(D,G)=E_{x\sim p_{\text{data}(x|y)}}[\log D(x)]+E_{z\sim p_z(z)}[\log (1-D(x|y))]$  paired data generate   BicycleGAN: diverse output Cycle GAN: no need of paired data 泛化性：所有模型都是需要先用有限的训练样本来训练的，那么由这些有限样本训练得到的模型可不可以从这些有限训练样本中生成出新的样本，而非简单地记着训练集 GAN 的问题  训练过程难以收敛，经常出现震荡；实验结果随机，难以复现； mode collapse：只生成某一模式 生成了一些没有意义、或者现实中不可能出现的图片    Graphical models Transfer Learning $D_S={X_S,f_S},T_S$ $D_T={X_T,f_T},T_T$</description>
    </item>
    
  </channel>
</rss>
